GAS LISTING /tmp/ccWNC5PO.s 			page 1


   1              		.file	"MemoryAllocator.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN15MemoryAllocatorC2Ev
   9              	_ZN15MemoryAllocatorC2Ev:
  10              	.LFB2:
  11              		.file 1 "src/MemoryAllocator.cpp"
   1:src/MemoryAllocator.cpp **** //
   2:src/MemoryAllocator.cpp **** // Created by os on 9/7/25.
   3:src/MemoryAllocator.cpp **** //
   4:src/MemoryAllocator.cpp **** 
   5:src/MemoryAllocator.cpp **** #include "../h/MemoryAllocator.hpp"
   6:src/MemoryAllocator.cpp **** #include "../lib/console.h"
   7:src/MemoryAllocator.cpp **** 
   8:src/MemoryAllocator.cpp **** 
   9:src/MemoryAllocator.cpp **** MemoryAllocator::MemoryAllocator() {
  12              		.loc 1 9 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
  21              	.LBB2:
  10:src/MemoryAllocator.cpp ****     this->head = (MemoryHeader*)HEAP_START_ADDR;
  22              		.loc 1 10 5
  23              		.loc 1 10 16 is_stmt 0
  24 000c 97070000 		la	a5,HEAP_START_ADDR
  24      83B70700 
  25 0014 03B70700 		ld	a4,0(a5)
  26 0018 2330E500 		sd	a4,0(a0)
  11:src/MemoryAllocator.cpp ****     // this->tail = (MemoryHeader*)HEAP_START_ADDR;
  12:src/MemoryAllocator.cpp ****     // this->tail->next=nullptr;
  13:src/MemoryAllocator.cpp ****     // this->tail->prev=nullptr;
  14:src/MemoryAllocator.cpp ****     this->head->next=nullptr;
  27              		.loc 1 14 5 is_stmt 1
  28              		.loc 1 14 21 is_stmt 0
  29 001c 23340700 		sd	zero,8(a4)
  15:src/MemoryAllocator.cpp ****     this->head->prev=nullptr;
  30              		.loc 1 15 5 is_stmt 1
  31              		.loc 1 15 11 is_stmt 0
  32 0020 83370500 		ld	a5,0(a0)
  33              		.loc 1 15 21
  34 0024 23B80700 		sd	zero,16(a5)
  16:src/MemoryAllocator.cpp ****     this->head->size = (size_t)((char*)HEAP_END_ADDR - (char*)HEAP_START_ADDR - sizeof(MemoryHeader
  35              		.loc 1 16 5 is_stmt 1
  36              		.loc 1 16 33 is_stmt 0
  37 0028 97070000 		la	a5,HEAP_END_ADDR
  37      83B70700 
  38 0030 83B70700 		ld	a5,0(a5)
  39              		.loc 1 16 54
  40 0034 B387E740 		sub	a5,a5,a4
GAS LISTING /tmp/ccWNC5PO.s 			page 2


  41              		.loc 1 16 11
  42 0038 03370500 		ld	a4,0(a0)
  43              		.loc 1 16 79
  44 003c 938787FE 		addi	a5,a5,-24
  45              		.loc 1 16 22
  46 0040 2330F700 		sd	a5,0(a4)
  17:src/MemoryAllocator.cpp ****     this->freeMemSize=this->head->size;
  47              		.loc 1 17 5 is_stmt 1
  48              		.loc 1 17 29 is_stmt 0
  49 0044 83370500 		ld	a5,0(a0)
  50              		.loc 1 17 35
  51 0048 83B70700 		ld	a5,0(a5)
  52              		.loc 1 17 22
  53 004c 2334F500 		sd	a5,8(a0)
  54              	.LBE2:
  18:src/MemoryAllocator.cpp **** }
  55              		.loc 1 18 1
  56 0050 03348100 		ld	s0,8(sp)
  57              		.cfi_restore 8
  58              		.cfi_def_cfa 2, 16
  59 0054 13010101 		addi	sp,sp,16
  60              		.cfi_def_cfa_offset 0
  61 0058 67800000 		jr	ra
  62              		.cfi_endproc
  63              	.LFE2:
  65              		.globl	_ZN15MemoryAllocatorC1Ev
  66              		.set	_ZN15MemoryAllocatorC1Ev,_ZN15MemoryAllocatorC2Ev
  67              		.align	2
  68              		.globl	_ZN15MemoryAllocator8InstanceEv
  70              	_ZN15MemoryAllocator8InstanceEv:
  71              	.LFB4:
  19:src/MemoryAllocator.cpp **** 
  20:src/MemoryAllocator.cpp **** 
  21:src/MemoryAllocator.cpp **** 
  22:src/MemoryAllocator.cpp **** 
  23:src/MemoryAllocator.cpp **** MemoryAllocator* MemoryAllocator::Instance() {
  72              		.loc 1 23 46 is_stmt 1
  73              		.cfi_startproc
  24:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  74              		.loc 1 24 5
  75              		.loc 1 24 28 is_stmt 0
  76 005c 97070000 		lbu	a5,.LANCHOR0
  76      83C70700 
  77 0064 63880700 		beqz	a5,.L9
  25:src/MemoryAllocator.cpp ****     return &instance;
  78              		.loc 1 25 5 is_stmt 1
  26:src/MemoryAllocator.cpp **** }
  79              		.loc 1 26 1 is_stmt 0
  80 0068 17050000 		lla	a0,.LANCHOR0+8
  80      13050500 
  81 0070 67800000 		ret
  82              	.L9:
  23:src/MemoryAllocator.cpp ****     static MemoryAllocator instance;
  83              		.loc 1 23 46 discriminator 1
  84 0074 130101FF 		addi	sp,sp,-16
  85              		.cfi_def_cfa_offset 16
  86 0078 23341100 		sd	ra,8(sp)
GAS LISTING /tmp/ccWNC5PO.s 			page 3


  87 007c 23308100 		sd	s0,0(sp)
  88              		.cfi_offset 1, -8
  89              		.cfi_offset 8, -16
  90 0080 13040101 		addi	s0,sp,16
  91              		.cfi_def_cfa 8, 0
  24:src/MemoryAllocator.cpp ****     return &instance;
  92              		.loc 1 24 28 discriminator 1
  93 0084 17050000 		lla	a0,.LANCHOR0+8
  93      13050500 
  94 008c 97000000 		call	_ZN15MemoryAllocatorC1Ev
  94      E7800000 
  95              	.LVL1:
  96 0094 93071000 		li	a5,1
  97 0098 17070000 		sb	a5,.LANCHOR0,a4
  97      2300F700 
  25:src/MemoryAllocator.cpp **** }
  98              		.loc 1 25 5 is_stmt 1 discriminator 1
  99              		.loc 1 26 1 is_stmt 0 discriminator 1
 100 00a0 17050000 		lla	a0,.LANCHOR0+8
 100      13050500 
 101 00a8 83308100 		ld	ra,8(sp)
 102              		.cfi_restore 1
 103 00ac 03340100 		ld	s0,0(sp)
 104              		.cfi_restore 8
 105              		.cfi_def_cfa 2, 16
 106 00b0 13010101 		addi	sp,sp,16
 107              		.cfi_def_cfa_offset 0
 108 00b4 67800000 		jr	ra
 109              		.cfi_endproc
 110              	.LFE4:
 112              		.align	2
 113              		.globl	_ZN15MemoryAllocator9mem_allocEm
 115              	_ZN15MemoryAllocator9mem_allocEm:
 116              	.LFB5:
  27:src/MemoryAllocator.cpp **** 
  28:src/MemoryAllocator.cpp **** 
  29:src/MemoryAllocator.cpp **** void* MemoryAllocator::mem_alloc(size_t size) {
 117              		.loc 1 29 47 is_stmt 1
 118              		.cfi_startproc
 119              	.LVL2:
 120 00b8 130101FF 		addi	sp,sp,-16
 121              		.cfi_def_cfa_offset 16
 122 00bc 23348100 		sd	s0,8(sp)
 123              		.cfi_offset 8, -8
 124 00c0 13040101 		addi	s0,sp,16
 125              		.cfi_def_cfa 8, 0
 126 00c4 13080500 		mv	a6,a0
  30:src/MemoryAllocator.cpp ****     if (this->head==nullptr)
 127              		.loc 1 30 5
 128              		.loc 1 30 15 is_stmt 0
 129 00c8 03350500 		ld	a0,0(a0)
 130              	.LVL3:
 131              		.loc 1 30 5
 132 00cc 6302050A 		beqz	a0,.L10
  31:src/MemoryAllocator.cpp ****         return nullptr;
  32:src/MemoryAllocator.cpp ****     if (size==0) {
 133              		.loc 1 32 5 is_stmt 1
GAS LISTING /tmp/ccWNC5PO.s 			page 4


 134 00d0 6388050E 		beqz	a1,.L23
  33:src/MemoryAllocator.cpp ****         return nullptr;
  34:src/MemoryAllocator.cpp ****     }
  35:src/MemoryAllocator.cpp ****     uint64 offset = size % MEM_BLOCK_SIZE;
 135              		.loc 1 35 5
 136              		.loc 1 35 12 is_stmt 0
 137 00d4 93F73500 		andi	a5,a1,3
 138              	.LVL4:
  36:src/MemoryAllocator.cpp ****     if (offset!=0)
 139              		.loc 1 36 5 is_stmt 1
 140 00d8 63840700 		beqz	a5,.L12
  37:src/MemoryAllocator.cpp ****         offset=1;
 141              		.loc 1 37 15 is_stmt 0
 142 00dc 93071000 		li	a5,1
 143              	.LVL5:
 144              	.L12:
  38:src/MemoryAllocator.cpp **** 
  39:src/MemoryAllocator.cpp ****     size_t actulalSize = (size  / MEM_BLOCK_SIZE+offset ) * MEM_BLOCK_SIZE;
 145              		.loc 1 39 5 is_stmt 1
 146              		.loc 1 39 33 is_stmt 0
 147 00e0 93D62500 		srli	a3,a1,2
 148              		.loc 1 39 49
 149 00e4 B386F600 		add	a3,a3,a5
 150              		.loc 1 39 12
 151 00e8 93962600 		slli	a3,a3,2
 152              	.LVL6:
  40:src/MemoryAllocator.cpp **** 
  41:src/MemoryAllocator.cpp **** 
  42:src/MemoryAllocator.cpp ****     MemoryHeader* curr= this->head;
 153              		.loc 1 42 5 is_stmt 1
 154              		.loc 1 42 19 is_stmt 0
 155 00ec 93070500 		mv	a5,a0
 156              	.LVL7:
 157              	.L14:
  43:src/MemoryAllocator.cpp ****     while (curr->next!=nullptr && curr->size < actulalSize) {
 158              		.loc 1 43 5 is_stmt 1
 159              		.loc 1 43 32
 160 00f0 13870700 		mv	a4,a5
 161              		.loc 1 43 18 is_stmt 0
 162 00f4 83B78700 		ld	a5,8(a5)
 163              	.LVL8:
 164              		.loc 1 43 32
 165 00f8 63860700 		beqz	a5,.L13
 166              		.loc 1 43 41 discriminator 1
 167 00fc 03360700 		ld	a2,0(a4)
 168              		.loc 1 43 32 discriminator 1
 169 0100 E368D6FE 		bltu	a2,a3,.L14
 170              	.L13:
  44:src/MemoryAllocator.cpp ****         curr=curr->next;
  45:src/MemoryAllocator.cpp ****     }
  46:src/MemoryAllocator.cpp ****     if (curr->size < actulalSize) {
 171              		.loc 1 46 5 is_stmt 1
 172              		.loc 1 46 15 is_stmt 0
 173 0104 03360700 		ld	a2,0(a4)
 174              		.loc 1 46 5
 175 0108 6360D60C 		bltu	a2,a3,.L25
  47:src/MemoryAllocator.cpp ****         return nullptr;
GAS LISTING /tmp/ccWNC5PO.s 			page 5


  48:src/MemoryAllocator.cpp ****     }
  49:src/MemoryAllocator.cpp **** 
  50:src/MemoryAllocator.cpp **** 
  51:src/MemoryAllocator.cpp **** 
  52:src/MemoryAllocator.cpp ****     if (curr->size - actulalSize >= MEM_BLOCK_SIZE+sizeof(MemoryHeader)) {
 176              		.loc 1 52 5 is_stmt 1
 177              	.LBB3:
 178              		.loc 1 52 20 is_stmt 0
 179 010c 3306D640 		sub	a2,a2,a3
 180              		.loc 1 52 5
 181 0110 9305B001 		li	a1,27
 182              	.LVL9:
 183 0114 63F8C506 		bleu	a2,a1,.L15
 184              	.LBB4:
  53:src/MemoryAllocator.cpp **** 
  54:src/MemoryAllocator.cpp **** 
  55:src/MemoryAllocator.cpp ****         MemoryHeader* new_seg=(MemoryHeader*)((char*)curr + sizeof(MemoryHeader) + actulalSize);
 185              		.loc 1 55 9 is_stmt 1
 186              		.loc 1 55 82 is_stmt 0
 187 0118 93878601 		addi	a5,a3,24
 188              		.loc 1 55 23
 189 011c B307F700 		add	a5,a4,a5
 190              	.LVL10:
  56:src/MemoryAllocator.cpp ****         new_seg->size = curr->size - actulalSize - sizeof(MemoryHeader);
 191              		.loc 1 56 9 is_stmt 1
 192              		.loc 1 56 50 is_stmt 0
 193 0120 130686FE 		addi	a2,a2,-24
 194              		.loc 1 56 23
 195 0124 23B0C700 		sd	a2,0(a5)
  57:src/MemoryAllocator.cpp ****         new_seg->next=curr->next;
 196              		.loc 1 57 9 is_stmt 1
 197              		.loc 1 57 29 is_stmt 0
 198 0128 03368700 		ld	a2,8(a4)
 199              		.loc 1 57 22
 200 012c 23B4C700 		sd	a2,8(a5)
  58:src/MemoryAllocator.cpp ****         new_seg->prev=curr->prev;
 201              		.loc 1 58 9 is_stmt 1
 202              		.loc 1 58 29 is_stmt 0
 203 0130 03360701 		ld	a2,16(a4)
 204              		.loc 1 58 22
 205 0134 23B8C700 		sd	a2,16(a5)
  59:src/MemoryAllocator.cpp ****         if (curr==this->head) {
 206              		.loc 1 59 9 is_stmt 1
 207              		.loc 1 59 25 is_stmt 0
 208 0138 03360800 		ld	a2,0(a6)
 209              		.loc 1 59 9
 210 013c 6300E604 		beq	a2,a4,.L27
 211              	.L16:
  60:src/MemoryAllocator.cpp ****             this->head=new_seg;
  61:src/MemoryAllocator.cpp ****         }
  62:src/MemoryAllocator.cpp ****         // if (curr==this->tail) {
  63:src/MemoryAllocator.cpp ****         //     this->tail=new_seg;
  64:src/MemoryAllocator.cpp ****         // }
  65:src/MemoryAllocator.cpp ****         if (curr->prev)
 212              		.loc 1 65 9 is_stmt 1
 213              		.loc 1 65 19 is_stmt 0
 214 0140 03360701 		ld	a2,16(a4)
GAS LISTING /tmp/ccWNC5PO.s 			page 6


 215              		.loc 1 65 9
 216 0144 63040600 		beqz	a2,.L17
  66:src/MemoryAllocator.cpp ****             curr->prev->next=new_seg;
 217              		.loc 1 66 13 is_stmt 1
 218              		.loc 1 66 29 is_stmt 0
 219 0148 2334F600 		sd	a5,8(a2)
 220              	.L17:
  67:src/MemoryAllocator.cpp ****         if (curr->next)
 221              		.loc 1 67 9 is_stmt 1
 222              		.loc 1 67 19 is_stmt 0
 223 014c 03368700 		ld	a2,8(a4)
 224              		.loc 1 67 9
 225 0150 63040600 		beqz	a2,.L18
  68:src/MemoryAllocator.cpp ****             curr->next->prev=new_seg;
 226              		.loc 1 68 13 is_stmt 1
 227              		.loc 1 68 29 is_stmt 0
 228 0154 2338F600 		sd	a5,16(a2)
 229              	.L18:
  69:src/MemoryAllocator.cpp ****         curr->size=actulalSize;
 230              		.loc 1 69 9 is_stmt 1
 231              		.loc 1 69 19 is_stmt 0
 232 0158 2330D700 		sd	a3,0(a4)
  70:src/MemoryAllocator.cpp ****         this->freeMemSize-= (actulalSize + sizeof(MemoryHeader));
 233              		.loc 1 70 9 is_stmt 1
 234              		.loc 1 70 26 is_stmt 0
 235 015c 83378800 		ld	a5,8(a6)
 236              	.LVL11:
 237 0160 B386D740 		sub	a3,a5,a3
 238              	.LVL12:
 239 0164 938686FE 		addi	a3,a3,-24
 240 0168 2334D800 		sd	a3,8(a6)
 241              	.LVL13:
 242              	.L19:
 243              	.LBE4:
 244              	.LBE3:
  71:src/MemoryAllocator.cpp ****     }
  72:src/MemoryAllocator.cpp ****     else {
  73:src/MemoryAllocator.cpp ****         if (curr==this->head) {
  74:src/MemoryAllocator.cpp ****             this->head=curr->next;
  75:src/MemoryAllocator.cpp ****         }
  76:src/MemoryAllocator.cpp ****         if (curr->prev)
  77:src/MemoryAllocator.cpp ****             curr->prev->next=curr->next;
  78:src/MemoryAllocator.cpp ****         if (curr->next)
  79:src/MemoryAllocator.cpp ****             curr->next->prev=curr->prev;
  80:src/MemoryAllocator.cpp ****         this->freeMemSize-= actulalSize;
  81:src/MemoryAllocator.cpp ****     }
  82:src/MemoryAllocator.cpp **** 
  83:src/MemoryAllocator.cpp **** 
  84:src/MemoryAllocator.cpp ****     //__putc('m');
  85:src/MemoryAllocator.cpp ****     //__putc('\n');
  86:src/MemoryAllocator.cpp **** 
  87:src/MemoryAllocator.cpp **** 
  88:src/MemoryAllocator.cpp **** 
  89:src/MemoryAllocator.cpp ****     return  (void*)((char*)curr + sizeof(MemoryHeader));
 245              		.loc 1 89 5 is_stmt 1
 246              		.loc 1 89 55 is_stmt 0
 247 016c 13058701 		addi	a0,a4,24
GAS LISTING /tmp/ccWNC5PO.s 			page 7


 248              	.LVL14:
 249              	.L10:
  90:src/MemoryAllocator.cpp **** }
 250              		.loc 1 90 1
 251 0170 03348100 		ld	s0,8(sp)
 252              		.cfi_remember_state
 253              		.cfi_restore 8
 254              		.cfi_def_cfa 2, 16
 255 0174 13010101 		addi	sp,sp,16
 256              		.cfi_def_cfa_offset 0
 257 0178 67800000 		jr	ra
 258              	.LVL15:
 259              	.L27:
 260              		.cfi_restore_state
 261              	.LBB6:
 262              	.LBB5:
  60:src/MemoryAllocator.cpp ****         }
 263              		.loc 1 60 13 is_stmt 1
  60:src/MemoryAllocator.cpp ****         }
 264              		.loc 1 60 23 is_stmt 0
 265 017c 2330F800 		sd	a5,0(a6)
 266 0180 6FF01FFC 		j	.L16
 267              	.LVL16:
 268              	.L15:
 269              	.LBE5:
  73:src/MemoryAllocator.cpp ****             this->head=curr->next;
 270              		.loc 1 73 9 is_stmt 1
 271 0184 630AE502 		beq	a0,a4,.L28
 272              	.L20:
  76:src/MemoryAllocator.cpp ****             curr->prev->next=curr->next;
 273              		.loc 1 76 9
  76:src/MemoryAllocator.cpp ****             curr->prev->next=curr->next;
 274              		.loc 1 76 19 is_stmt 0
 275 0188 83370701 		ld	a5,16(a4)
  76:src/MemoryAllocator.cpp ****             curr->prev->next=curr->next;
 276              		.loc 1 76 9
 277 018c 63860700 		beqz	a5,.L21
  77:src/MemoryAllocator.cpp ****         if (curr->next)
 278              		.loc 1 77 13 is_stmt 1
  77:src/MemoryAllocator.cpp ****         if (curr->next)
 279              		.loc 1 77 36 is_stmt 0
 280 0190 03368700 		ld	a2,8(a4)
  77:src/MemoryAllocator.cpp ****         if (curr->next)
 281              		.loc 1 77 29
 282 0194 23B4C700 		sd	a2,8(a5)
 283              	.L21:
  78:src/MemoryAllocator.cpp ****             curr->next->prev=curr->prev;
 284              		.loc 1 78 9 is_stmt 1
  78:src/MemoryAllocator.cpp ****             curr->next->prev=curr->prev;
 285              		.loc 1 78 19 is_stmt 0
 286 0198 83378700 		ld	a5,8(a4)
  78:src/MemoryAllocator.cpp ****             curr->next->prev=curr->prev;
 287              		.loc 1 78 9
 288 019c 63860700 		beqz	a5,.L22
  79:src/MemoryAllocator.cpp ****         this->freeMemSize-= actulalSize;
 289              		.loc 1 79 13 is_stmt 1
  79:src/MemoryAllocator.cpp ****         this->freeMemSize-= actulalSize;
GAS LISTING /tmp/ccWNC5PO.s 			page 8


 290              		.loc 1 79 36 is_stmt 0
 291 01a0 03360701 		ld	a2,16(a4)
  79:src/MemoryAllocator.cpp ****         this->freeMemSize-= actulalSize;
 292              		.loc 1 79 29
 293 01a4 23B8C700 		sd	a2,16(a5)
 294              	.L22:
  80:src/MemoryAllocator.cpp ****     }
 295              		.loc 1 80 9 is_stmt 1
  80:src/MemoryAllocator.cpp ****     }
 296              		.loc 1 80 26 is_stmt 0
 297 01a8 83378800 		ld	a5,8(a6)
 298 01ac B386D740 		sub	a3,a5,a3
 299              	.LVL17:
 300 01b0 2334D800 		sd	a3,8(a6)
 301 01b4 6FF09FFB 		j	.L19
 302              	.LVL18:
 303              	.L28:
  74:src/MemoryAllocator.cpp ****         }
 304              		.loc 1 74 13 is_stmt 1
  74:src/MemoryAllocator.cpp ****         }
 305              		.loc 1 74 23 is_stmt 0
 306 01b8 2330F800 		sd	a5,0(a6)
 307 01bc 6FF0DFFC 		j	.L20
 308              	.LVL19:
 309              	.L23:
 310              	.LBE6:
  33:src/MemoryAllocator.cpp ****     }
 311              		.loc 1 33 16
 312 01c0 13050000 		li	a0,0
 313 01c4 6FF0DFFA 		j	.L10
 314              	.LVL20:
 315              	.L25:
  47:src/MemoryAllocator.cpp ****     }
 316              		.loc 1 47 16
 317 01c8 13050000 		li	a0,0
 318 01cc 6FF05FFA 		j	.L10
 319              		.cfi_endproc
 320              	.LFE5:
 322              		.align	2
 323              		.globl	_ZN15MemoryAllocator11try_to_joinEPNS_12MemoryHeaderE
 325              	_ZN15MemoryAllocator11try_to_joinEPNS_12MemoryHeaderE:
 326              	.LFB7:
  91:src/MemoryAllocator.cpp **** 
  92:src/MemoryAllocator.cpp **** 
  93:src/MemoryAllocator.cpp **** void MemoryAllocator::mem_free(void* ptr) {
  94:src/MemoryAllocator.cpp ****     if (ptr==nullptr) {
  95:src/MemoryAllocator.cpp ****         return;
  96:src/MemoryAllocator.cpp ****     }
  97:src/MemoryAllocator.cpp **** 	MemoryHeader* block = (MemoryHeader*)((char*)ptr - sizeof(MemoryHeader));
  98:src/MemoryAllocator.cpp ****     if (this->head==nullptr) {
  99:src/MemoryAllocator.cpp ****         this->head=block;
 100:src/MemoryAllocator.cpp ****         block->next=nullptr;
 101:src/MemoryAllocator.cpp ****         block->prev=nullptr;
 102:src/MemoryAllocator.cpp ****         this->freeMemSize+= block->size;
 103:src/MemoryAllocator.cpp ****         return;
 104:src/MemoryAllocator.cpp ****     }
 105:src/MemoryAllocator.cpp ****     MemoryHeader* curr = this->head;
GAS LISTING /tmp/ccWNC5PO.s 			page 9


 106:src/MemoryAllocator.cpp ****     while (curr->next!=nullptr && curr->next < block) {
 107:src/MemoryAllocator.cpp ****         curr=curr->next;
 108:src/MemoryAllocator.cpp ****     }
 109:src/MemoryAllocator.cpp **** 
 110:src/MemoryAllocator.cpp ****     if (curr==this->head and curr > block) {
 111:src/MemoryAllocator.cpp ****         block->next=curr;
 112:src/MemoryAllocator.cpp ****         block->prev=curr->prev;
 113:src/MemoryAllocator.cpp ****         curr->prev=block;
 114:src/MemoryAllocator.cpp ****         this->head=block;
 115:src/MemoryAllocator.cpp ****     }
 116:src/MemoryAllocator.cpp ****     else {
 117:src/MemoryAllocator.cpp ****         block->next=curr->next;
 118:src/MemoryAllocator.cpp ****         block->prev=curr;
 119:src/MemoryAllocator.cpp ****         curr->next=block;
 120:src/MemoryAllocator.cpp ****         if (block->next) {
 121:src/MemoryAllocator.cpp ****             block->next->prev=block;
 122:src/MemoryAllocator.cpp ****         }
 123:src/MemoryAllocator.cpp ****     }
 124:src/MemoryAllocator.cpp **** 
 125:src/MemoryAllocator.cpp ****     this->freeMemSize+= block->size;
 126:src/MemoryAllocator.cpp ****      //__putc('n');
 127:src/MemoryAllocator.cpp ****     // __putc('\n');
 128:src/MemoryAllocator.cpp ****     try_to_join(block->prev);
 129:src/MemoryAllocator.cpp ****     try_to_join(block);
 130:src/MemoryAllocator.cpp **** }
 131:src/MemoryAllocator.cpp **** 
 132:src/MemoryAllocator.cpp **** 
 133:src/MemoryAllocator.cpp **** void MemoryAllocator::try_to_join(MemoryHeader* block) {
 327              		.loc 1 133 56 is_stmt 1
 328              		.cfi_startproc
 329              	.LVL21:
 330 01d0 130101FF 		addi	sp,sp,-16
 331              		.cfi_def_cfa_offset 16
 332 01d4 23348100 		sd	s0,8(sp)
 333              		.cfi_offset 8, -8
 334 01d8 13040101 		addi	s0,sp,16
 335              		.cfi_def_cfa 8, 0
 134:src/MemoryAllocator.cpp ****     if (block==nullptr)
 336              		.loc 1 134 5
 337 01dc 638E0500 		beqz	a1,.L29
 135:src/MemoryAllocator.cpp ****         return;
 136:src/MemoryAllocator.cpp ****     if (block->next!=nullptr && ((char*)block + sizeof(MemoryHeader) + block->size) == (char*)block
 338              		.loc 1 136 5
 339              		.loc 1 136 16 is_stmt 0
 340 01e0 83B78500 		ld	a5,8(a1)
 341              		.loc 1 136 5
 342 01e4 638A0700 		beqz	a5,.L29
 343              		.loc 1 136 79 discriminator 1
 344 01e8 83B60500 		ld	a3,0(a1)
 345              		.loc 1 136 70 discriminator 1
 346 01ec 13878601 		addi	a4,a3,24
 347 01f0 3387E500 		add	a4,a1,a4
 348              		.loc 1 136 30 discriminator 1
 349 01f4 6388E700 		beq	a5,a4,.L33
 350              	.L29:
 137:src/MemoryAllocator.cpp ****         // __putc('t');
 138:src/MemoryAllocator.cpp ****          //__putc('\n');
GAS LISTING /tmp/ccWNC5PO.s 			page 10


 139:src/MemoryAllocator.cpp ****         block->size += block->next->size;
 140:src/MemoryAllocator.cpp ****         block->next=block->next->next;
 141:src/MemoryAllocator.cpp ****         if (block->next)
 142:src/MemoryAllocator.cpp ****             block->next->prev=block;
 143:src/MemoryAllocator.cpp ****         this->freeMemSize+= sizeof(MemoryHeader);
 144:src/MemoryAllocator.cpp ****     }
 145:src/MemoryAllocator.cpp **** }
 351              		.loc 1 145 1
 352 01f8 03348100 		ld	s0,8(sp)
 353              		.cfi_remember_state
 354              		.cfi_restore 8
 355              		.cfi_def_cfa 2, 16
 356 01fc 13010101 		addi	sp,sp,16
 357              		.cfi_def_cfa_offset 0
 358 0200 67800000 		jr	ra
 359              	.L33:
 360              		.cfi_restore_state
 139:src/MemoryAllocator.cpp ****         block->next=block->next->next;
 361              		.loc 1 139 9 is_stmt 1
 139:src/MemoryAllocator.cpp ****         block->next=block->next->next;
 362              		.loc 1 139 37 is_stmt 0
 363 0204 03B70700 		ld	a4,0(a5)
 139:src/MemoryAllocator.cpp ****         block->next=block->next->next;
 364              		.loc 1 139 21
 365 0208 B386E600 		add	a3,a3,a4
 366 020c 23B0D500 		sd	a3,0(a1)
 140:src/MemoryAllocator.cpp ****         if (block->next)
 367              		.loc 1 140 9 is_stmt 1
 140:src/MemoryAllocator.cpp ****         if (block->next)
 368              		.loc 1 140 34 is_stmt 0
 369 0210 83B78700 		ld	a5,8(a5)
 140:src/MemoryAllocator.cpp ****         if (block->next)
 370              		.loc 1 140 20
 371 0214 23B4F500 		sd	a5,8(a1)
 141:src/MemoryAllocator.cpp ****             block->next->prev=block;
 372              		.loc 1 141 9 is_stmt 1
 373 0218 63840700 		beqz	a5,.L31
 142:src/MemoryAllocator.cpp ****         this->freeMemSize+= sizeof(MemoryHeader);
 374              		.loc 1 142 13
 142:src/MemoryAllocator.cpp ****         this->freeMemSize+= sizeof(MemoryHeader);
 375              		.loc 1 142 30 is_stmt 0
 376 021c 23B8B700 		sd	a1,16(a5)
 377              	.L31:
 143:src/MemoryAllocator.cpp ****     }
 378              		.loc 1 143 9 is_stmt 1
 143:src/MemoryAllocator.cpp ****     }
 379              		.loc 1 143 26 is_stmt 0
 380 0220 83378500 		ld	a5,8(a0)
 381 0224 93878701 		addi	a5,a5,24
 382 0228 2334F500 		sd	a5,8(a0)
 383 022c 6FF0DFFC 		j	.L29
 384              		.cfi_endproc
 385              	.LFE7:
 387              		.align	2
 388              		.globl	_ZN15MemoryAllocator8mem_freeEPv
 390              	_ZN15MemoryAllocator8mem_freeEPv:
 391              	.LFB6:
GAS LISTING /tmp/ccWNC5PO.s 			page 11


  93:src/MemoryAllocator.cpp ****     if (ptr==nullptr) {
 392              		.loc 1 93 43 is_stmt 1
 393              		.cfi_startproc
 394              	.LVL22:
  94:src/MemoryAllocator.cpp ****         return;
 395              		.loc 1 94 5
 396 0230 6380050E 		beqz	a1,.L42
  93:src/MemoryAllocator.cpp ****     if (ptr==nullptr) {
 397              		.loc 1 93 43 is_stmt 0
 398 0234 130101FE 		addi	sp,sp,-32
 399              		.cfi_def_cfa_offset 32
 400 0238 233C1100 		sd	ra,24(sp)
 401 023c 23388100 		sd	s0,16(sp)
 402 0240 23349100 		sd	s1,8(sp)
 403 0244 23302101 		sd	s2,0(sp)
 404              		.cfi_offset 1, -8
 405              		.cfi_offset 8, -16
 406              		.cfi_offset 9, -24
 407              		.cfi_offset 18, -32
 408 0248 13040102 		addi	s0,sp,32
 409              		.cfi_def_cfa 8, 0
 410 024c 13090500 		mv	s2,a0
  97:src/MemoryAllocator.cpp ****     if (this->head==nullptr) {
 411              		.loc 1 97 2 is_stmt 1
  97:src/MemoryAllocator.cpp ****     if (this->head==nullptr) {
 412              		.loc 1 97 16 is_stmt 0
 413 0250 938485FE 		addi	s1,a1,-24
 414              	.LVL23:
  98:src/MemoryAllocator.cpp ****         this->head=block;
 415              		.loc 1 98 5 is_stmt 1
  98:src/MemoryAllocator.cpp ****         this->head=block;
 416              		.loc 1 98 15 is_stmt 0
 417 0254 83360500 		ld	a3,0(a0)
  98:src/MemoryAllocator.cpp ****         this->head=block;
 418              		.loc 1 98 5
 419 0258 638E0606 		beqz	a3,.L45
 105:src/MemoryAllocator.cpp ****     while (curr->next!=nullptr && curr->next < block) {
 420              		.loc 1 105 19
 421 025c 93870600 		mv	a5,a3
 422              	.L36:
 423              	.LVL24:
 106:src/MemoryAllocator.cpp ****         curr=curr->next;
 424              		.loc 1 106 5 is_stmt 1
 106:src/MemoryAllocator.cpp ****         curr=curr->next;
 425              		.loc 1 106 32
 426 0260 13870700 		mv	a4,a5
 106:src/MemoryAllocator.cpp ****         curr=curr->next;
 427              		.loc 1 106 18 is_stmt 0
 428 0264 83B78700 		ld	a5,8(a5)
 429              	.LVL25:
 106:src/MemoryAllocator.cpp ****         curr=curr->next;
 430              		.loc 1 106 32
 431 0268 63840700 		beqz	a5,.L37
 106:src/MemoryAllocator.cpp ****         curr=curr->next;
 432              		.loc 1 106 32 discriminator 1
 433 026c E3EA97FE 		bltu	a5,s1,.L36
 434              	.L37:
GAS LISTING /tmp/ccWNC5PO.s 			page 12


 110:src/MemoryAllocator.cpp ****         block->next=curr;
 435              		.loc 1 110 5 is_stmt 1
 436 0270 6382E608 		beq	a3,a4,.L46
 437              	.L38:
 117:src/MemoryAllocator.cpp ****         block->prev=curr;
 438              		.loc 1 117 9
 117:src/MemoryAllocator.cpp ****         block->prev=curr;
 439              		.loc 1 117 20 is_stmt 0
 440 0274 23B8F5FE 		sd	a5,-16(a1)
 118:src/MemoryAllocator.cpp ****         curr->next=block;
 441              		.loc 1 118 9 is_stmt 1
 118:src/MemoryAllocator.cpp ****         curr->next=block;
 442              		.loc 1 118 20 is_stmt 0
 443 0278 23BCE5FE 		sd	a4,-8(a1)
 119:src/MemoryAllocator.cpp ****         if (block->next) {
 444              		.loc 1 119 9 is_stmt 1
 119:src/MemoryAllocator.cpp ****         if (block->next) {
 445              		.loc 1 119 19 is_stmt 0
 446 027c 23349700 		sd	s1,8(a4)
 120:src/MemoryAllocator.cpp ****             block->next->prev=block;
 447              		.loc 1 120 9 is_stmt 1
 120:src/MemoryAllocator.cpp ****             block->next->prev=block;
 448              		.loc 1 120 20 is_stmt 0
 449 0280 83B705FF 		ld	a5,-16(a1)
 120:src/MemoryAllocator.cpp ****             block->next->prev=block;
 450              		.loc 1 120 9
 451 0284 63840700 		beqz	a5,.L39
 121:src/MemoryAllocator.cpp ****         }
 452              		.loc 1 121 13 is_stmt 1
 121:src/MemoryAllocator.cpp ****         }
 453              		.loc 1 121 30 is_stmt 0
 454 0288 23B89700 		sd	s1,16(a5)
 455              	.L39:
 125:src/MemoryAllocator.cpp ****      //__putc('n');
 456              		.loc 1 125 5 is_stmt 1
 125:src/MemoryAllocator.cpp ****      //__putc('n');
 457              		.loc 1 125 32 is_stmt 0
 458 028c 03B785FE 		ld	a4,-24(a1)
 459              	.LVL26:
 125:src/MemoryAllocator.cpp ****      //__putc('n');
 460              		.loc 1 125 22
 461 0290 83378900 		ld	a5,8(s2)
 462 0294 B387E700 		add	a5,a5,a4
 463 0298 2334F900 		sd	a5,8(s2)
 128:src/MemoryAllocator.cpp ****     try_to_join(block);
 464              		.loc 1 128 5 is_stmt 1
 128:src/MemoryAllocator.cpp ****     try_to_join(block);
 465              		.loc 1 128 16 is_stmt 0
 466 029c 83B585FF 		ld	a1,-8(a1)
 467              	.LVL27:
 468 02a0 13050900 		mv	a0,s2
 469              	.LVL28:
 470 02a4 97000000 		call	_ZN15MemoryAllocator11try_to_joinEPNS_12MemoryHeaderE
 470      E7800000 
 471              	.LVL29:
 129:src/MemoryAllocator.cpp **** }
 472              		.loc 1 129 5 is_stmt 1
GAS LISTING /tmp/ccWNC5PO.s 			page 13


 129:src/MemoryAllocator.cpp **** }
 473              		.loc 1 129 16 is_stmt 0
 474 02ac 93850400 		mv	a1,s1
 475 02b0 13050900 		mv	a0,s2
 476 02b4 97000000 		call	_ZN15MemoryAllocator11try_to_joinEPNS_12MemoryHeaderE
 476      E7800000 
 477              	.LVL30:
 478              	.L34:
 130:src/MemoryAllocator.cpp **** 
 479              		.loc 1 130 1
 480 02bc 83308101 		ld	ra,24(sp)
 481              		.cfi_remember_state
 482              		.cfi_restore 1
 483 02c0 03340101 		ld	s0,16(sp)
 484              		.cfi_restore 8
 485              		.cfi_def_cfa 2, 32
 486 02c4 83348100 		ld	s1,8(sp)
 487              		.cfi_restore 9
 488              	.LVL31:
 489 02c8 03390100 		ld	s2,0(sp)
 490              		.cfi_restore 18
 491              	.LVL32:
 492 02cc 13010102 		addi	sp,sp,32
 493              		.cfi_def_cfa_offset 0
 494 02d0 67800000 		jr	ra
 495              	.LVL33:
 496              	.L45:
 497              		.cfi_restore_state
  99:src/MemoryAllocator.cpp ****         block->next=nullptr;
 498              		.loc 1 99 9 is_stmt 1
  99:src/MemoryAllocator.cpp ****         block->next=nullptr;
 499              		.loc 1 99 19 is_stmt 0
 500 02d4 23309500 		sd	s1,0(a0)
 100:src/MemoryAllocator.cpp ****         block->prev=nullptr;
 501              		.loc 1 100 9 is_stmt 1
 100:src/MemoryAllocator.cpp ****         block->prev=nullptr;
 502              		.loc 1 100 20 is_stmt 0
 503 02d8 23B805FE 		sd	zero,-16(a1)
 101:src/MemoryAllocator.cpp ****         this->freeMemSize+= block->size;
 504              		.loc 1 101 9 is_stmt 1
 101:src/MemoryAllocator.cpp ****         this->freeMemSize+= block->size;
 505              		.loc 1 101 20 is_stmt 0
 506 02dc 23BC05FE 		sd	zero,-8(a1)
 102:src/MemoryAllocator.cpp ****         return;
 507              		.loc 1 102 9 is_stmt 1
 102:src/MemoryAllocator.cpp ****         return;
 508              		.loc 1 102 36 is_stmt 0
 509 02e0 03B785FE 		ld	a4,-24(a1)
 102:src/MemoryAllocator.cpp ****         return;
 510              		.loc 1 102 26
 511 02e4 83378500 		ld	a5,8(a0)
 512 02e8 B387E700 		add	a5,a5,a4
 513 02ec 2334F500 		sd	a5,8(a0)
 103:src/MemoryAllocator.cpp ****     }
 514              		.loc 1 103 9 is_stmt 1
 515 02f0 6FF0DFFC 		j	.L34
 516              	.LVL34:
GAS LISTING /tmp/ccWNC5PO.s 			page 14


 517              	.L46:
 110:src/MemoryAllocator.cpp ****         block->next=curr;
 518              		.loc 1 110 26 is_stmt 0 discriminator 1
 519 02f4 E3F0E4F8 		bleu	a4,s1,.L38
 111:src/MemoryAllocator.cpp ****         block->prev=curr->prev;
 520              		.loc 1 111 9 is_stmt 1
 111:src/MemoryAllocator.cpp ****         block->prev=curr->prev;
 521              		.loc 1 111 20 is_stmt 0
 522 02f8 23B8E5FE 		sd	a4,-16(a1)
 112:src/MemoryAllocator.cpp ****         curr->prev=block;
 523              		.loc 1 112 9 is_stmt 1
 112:src/MemoryAllocator.cpp ****         curr->prev=block;
 524              		.loc 1 112 27 is_stmt 0
 525 02fc 83370701 		ld	a5,16(a4)
 112:src/MemoryAllocator.cpp ****         curr->prev=block;
 526              		.loc 1 112 20
 527 0300 23BCF5FE 		sd	a5,-8(a1)
 113:src/MemoryAllocator.cpp ****         this->head=block;
 528              		.loc 1 113 9 is_stmt 1
 113:src/MemoryAllocator.cpp ****         this->head=block;
 529              		.loc 1 113 19 is_stmt 0
 530 0304 23389700 		sd	s1,16(a4)
 114:src/MemoryAllocator.cpp ****     }
 531              		.loc 1 114 9 is_stmt 1
 114:src/MemoryAllocator.cpp ****     }
 532              		.loc 1 114 19 is_stmt 0
 533 0308 23309900 		sd	s1,0(s2)
 534 030c 6FF01FF8 		j	.L39
 535              	.LVL35:
 536              	.L42:
 537              		.cfi_def_cfa_register 2
 538              		.cfi_restore 1
 539              		.cfi_restore 8
 540              		.cfi_restore 9
 541              		.cfi_restore 18
 542 0310 67800000 		ret
 543              		.cfi_endproc
 544              	.LFE6:
 546              		.align	2
 547              		.globl	_ZN15MemoryAllocator19getLargestFreeBlockEv
 549              	_ZN15MemoryAllocator19getLargestFreeBlockEv:
 550              	.LFB8:
 146:src/MemoryAllocator.cpp **** 
 147:src/MemoryAllocator.cpp **** size_t MemoryAllocator::getLargestFreeBlock() {
 551              		.loc 1 147 47 is_stmt 1
 552              		.cfi_startproc
 553              	.LVL36:
 554 0314 130101FF 		addi	sp,sp,-16
 555              		.cfi_def_cfa_offset 16
 556 0318 23348100 		sd	s0,8(sp)
 557              		.cfi_offset 8, -8
 558 031c 13040101 		addi	s0,sp,16
 559              		.cfi_def_cfa 8, 0
 148:src/MemoryAllocator.cpp ****     size_t maxSize=0;
 560              		.loc 1 148 5
 561              	.LVL37:
 149:src/MemoryAllocator.cpp ****     MemoryHeader* curr=this->head;
GAS LISTING /tmp/ccWNC5PO.s 			page 15


 562              		.loc 1 149 5
 563              		.loc 1 149 19 is_stmt 0
 564 0320 83370500 		ld	a5,0(a0)
 565              	.LVL38:
 148:src/MemoryAllocator.cpp ****     size_t maxSize=0;
 566              		.loc 1 148 12
 567 0324 13050000 		li	a0,0
 568              	.LVL39:
 569 0328 6F008000 		j	.L50
 570              	.LVL40:
 571              	.L49:
 150:src/MemoryAllocator.cpp ****     while (curr!=nullptr) {
 151:src/MemoryAllocator.cpp ****         if (curr->size > maxSize)
 152:src/MemoryAllocator.cpp ****             maxSize=curr->size;
 153:src/MemoryAllocator.cpp ****         curr=curr->next;
 572              		.loc 1 153 9 is_stmt 1
 573              		.loc 1 153 13 is_stmt 0
 574 032c 83B78700 		ld	a5,8(a5)
 575              	.LVL41:
 576              	.L50:
 150:src/MemoryAllocator.cpp ****     while (curr!=nullptr) {
 577              		.loc 1 150 5 is_stmt 1
 150:src/MemoryAllocator.cpp ****     while (curr!=nullptr) {
 578              		.loc 1 150 16
 579 0330 638A0700 		beqz	a5,.L47
 151:src/MemoryAllocator.cpp ****             maxSize=curr->size;
 580              		.loc 1 151 9
 151:src/MemoryAllocator.cpp ****             maxSize=curr->size;
 581              		.loc 1 151 19 is_stmt 0
 582 0334 03B70700 		ld	a4,0(a5)
 151:src/MemoryAllocator.cpp ****             maxSize=curr->size;
 583              		.loc 1 151 9
 584 0338 E37AE5FE 		bleu	a4,a0,.L49
 152:src/MemoryAllocator.cpp ****         curr=curr->next;
 585              		.loc 1 152 20
 586 033c 13050700 		mv	a0,a4
 587              	.LVL42:
 588 0340 6FF0DFFE 		j	.L49
 589              	.LVL43:
 590              	.L47:
 154:src/MemoryAllocator.cpp ****     }
 155:src/MemoryAllocator.cpp ****     return maxSize;
 156:src/MemoryAllocator.cpp **** }...
 591              		.loc 1 156 1
 592 0344 03348100 		ld	s0,8(sp)
 593              		.cfi_restore 8
 594              		.cfi_def_cfa 2, 16
 595 0348 13010101 		addi	sp,sp,16
 596              		.cfi_def_cfa_offset 0
 597 034c 67800000 		jr	ra
 598              		.cfi_endproc
 599              	.LFE8:
 601              		.bss
 602              		.align	3
 603              		.set	.LANCHOR0,. + 0
 606              	_ZGVZN15MemoryAllocator8InstanceEvE8instance:
 607 0000 00000000 		.zero	8
GAS LISTING /tmp/ccWNC5PO.s 			page 16


 607      00000000 
 610              	_ZZN15MemoryAllocator8InstanceEvE8instance:
 611 0008 00000000 		.zero	16
 611      00000000 
 611      00000000 
 611      00000000 
 612              		.text
 613              	.Letext0:
 614              		.file 2 "src/../h/../lib/hw.h"
 615              		.file 3 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccWNC5PO.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 MemoryAllocator.cpp
     /tmp/ccWNC5PO.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC2Ev
     /tmp/ccWNC5PO.s:13     .text:0000000000000000 .L0 
     /tmp/ccWNC5PO.s:15     .text:0000000000000000 .L0 
     /tmp/ccWNC5PO.s:16     .text:0000000000000004 .L0 
     /tmp/ccWNC5PO.s:18     .text:0000000000000008 .L0 
     /tmp/ccWNC5PO.s:20     .text:000000000000000c .L0 
     /tmp/ccWNC5PO.s:23     .text:000000000000000c .L0 
     /tmp/ccWNC5PO.s:24     .text:000000000000000c .L0 
     /tmp/ccWNC5PO.s:28     .text:000000000000001c .L0 
     /tmp/ccWNC5PO.s:29     .text:000000000000001c .L0 
     /tmp/ccWNC5PO.s:31     .text:0000000000000020 .L0 
     /tmp/ccWNC5PO.s:32     .text:0000000000000020 .L0 
     /tmp/ccWNC5PO.s:34     .text:0000000000000024 .L0 
     /tmp/ccWNC5PO.s:36     .text:0000000000000028 .L0 
     /tmp/ccWNC5PO.s:37     .text:0000000000000028 .L0 
     /tmp/ccWNC5PO.s:40     .text:0000000000000034 .L0 
     /tmp/ccWNC5PO.s:42     .text:0000000000000038 .L0 
     /tmp/ccWNC5PO.s:44     .text:000000000000003c .L0 
     /tmp/ccWNC5PO.s:46     .text:0000000000000040 .L0 
     /tmp/ccWNC5PO.s:48     .text:0000000000000044 .L0 
     /tmp/ccWNC5PO.s:49     .text:0000000000000044 .L0 
     /tmp/ccWNC5PO.s:51     .text:0000000000000048 .L0 
     /tmp/ccWNC5PO.s:53     .text:000000000000004c .L0 
     /tmp/ccWNC5PO.s:56     .text:0000000000000050 .L0 
     /tmp/ccWNC5PO.s:57     .text:0000000000000054 .L0 
     /tmp/ccWNC5PO.s:58     .text:0000000000000054 .L0 
     /tmp/ccWNC5PO.s:60     .text:0000000000000058 .L0 
     /tmp/ccWNC5PO.s:62     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:9      .text:0000000000000000 _ZN15MemoryAllocatorC1Ev
     /tmp/ccWNC5PO.s:70     .text:000000000000005c _ZN15MemoryAllocator8InstanceEv
     /tmp/ccWNC5PO.s:73     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:74     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:75     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:76     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:79     .text:0000000000000068 .L0 
     /tmp/ccWNC5PO.s:80     .text:0000000000000068 .L0 
     /tmp/ccWNC5PO.s:84     .text:0000000000000074 .L0 
     /tmp/ccWNC5PO.s:85     .text:0000000000000078 .L0 
     /tmp/ccWNC5PO.s:88     .text:0000000000000080 .L0 
     /tmp/ccWNC5PO.s:89     .text:0000000000000080 .L0 
     /tmp/ccWNC5PO.s:91     .text:0000000000000084 .L0 
     /tmp/ccWNC5PO.s:93     .text:0000000000000084 .L0 
     /tmp/ccWNC5PO.s:99     .text:00000000000000a0 .L0 
     /tmp/ccWNC5PO.s:100    .text:00000000000000a0 .L0 
     /tmp/ccWNC5PO.s:102    .text:00000000000000ac .L0 
     /tmp/ccWNC5PO.s:104    .text:00000000000000b0 .L0 
     /tmp/ccWNC5PO.s:105    .text:00000000000000b0 .L0 
     /tmp/ccWNC5PO.s:107    .text:00000000000000b4 .L0 
     /tmp/ccWNC5PO.s:109    .text:00000000000000b8 .L0 
     /tmp/ccWNC5PO.s:115    .text:00000000000000b8 _ZN15MemoryAllocator9mem_allocEm
     /tmp/ccWNC5PO.s:118    .text:00000000000000b8 .L0 
     /tmp/ccWNC5PO.s:120    .text:00000000000000b8 .L0 
     /tmp/ccWNC5PO.s:121    .text:00000000000000bc .L0 
     /tmp/ccWNC5PO.s:123    .text:00000000000000c0 .L0 
     /tmp/ccWNC5PO.s:125    .text:00000000000000c4 .L0 
GAS LISTING /tmp/ccWNC5PO.s 			page 18


     /tmp/ccWNC5PO.s:128    .text:00000000000000c8 .L0 
     /tmp/ccWNC5PO.s:129    .text:00000000000000c8 .L0 
     /tmp/ccWNC5PO.s:132    .text:00000000000000cc .L0 
     /tmp/ccWNC5PO.s:134    .text:00000000000000d0 .L0 
     /tmp/ccWNC5PO.s:136    .text:00000000000000d4 .L0 
     /tmp/ccWNC5PO.s:137    .text:00000000000000d4 .L0 
     /tmp/ccWNC5PO.s:140    .text:00000000000000d8 .L0 
     /tmp/ccWNC5PO.s:142    .text:00000000000000dc .L0 
     /tmp/ccWNC5PO.s:146    .text:00000000000000e0 .L0 
     /tmp/ccWNC5PO.s:147    .text:00000000000000e0 .L0 
     /tmp/ccWNC5PO.s:149    .text:00000000000000e4 .L0 
     /tmp/ccWNC5PO.s:151    .text:00000000000000e8 .L0 
     /tmp/ccWNC5PO.s:154    .text:00000000000000ec .L0 
     /tmp/ccWNC5PO.s:155    .text:00000000000000ec .L0 
     /tmp/ccWNC5PO.s:159    .text:00000000000000f0 .L0 
     /tmp/ccWNC5PO.s:160    .text:00000000000000f0 .L0 
     /tmp/ccWNC5PO.s:162    .text:00000000000000f4 .L0 
     /tmp/ccWNC5PO.s:165    .text:00000000000000f8 .L0 
     /tmp/ccWNC5PO.s:167    .text:00000000000000fc .L0 
     /tmp/ccWNC5PO.s:169    .text:0000000000000100 .L0 
     /tmp/ccWNC5PO.s:172    .text:0000000000000104 .L0 
     /tmp/ccWNC5PO.s:173    .text:0000000000000104 .L0 
     /tmp/ccWNC5PO.s:175    .text:0000000000000108 .L0 
     /tmp/ccWNC5PO.s:178    .text:000000000000010c .L0 
     /tmp/ccWNC5PO.s:179    .text:000000000000010c .L0 
     /tmp/ccWNC5PO.s:181    .text:0000000000000110 .L0 
     /tmp/ccWNC5PO.s:186    .text:0000000000000118 .L0 
     /tmp/ccWNC5PO.s:187    .text:0000000000000118 .L0 
     /tmp/ccWNC5PO.s:189    .text:000000000000011c .L0 
     /tmp/ccWNC5PO.s:192    .text:0000000000000120 .L0 
     /tmp/ccWNC5PO.s:193    .text:0000000000000120 .L0 
     /tmp/ccWNC5PO.s:195    .text:0000000000000124 .L0 
     /tmp/ccWNC5PO.s:197    .text:0000000000000128 .L0 
     /tmp/ccWNC5PO.s:198    .text:0000000000000128 .L0 
     /tmp/ccWNC5PO.s:200    .text:000000000000012c .L0 
     /tmp/ccWNC5PO.s:202    .text:0000000000000130 .L0 
     /tmp/ccWNC5PO.s:203    .text:0000000000000130 .L0 
     /tmp/ccWNC5PO.s:205    .text:0000000000000134 .L0 
     /tmp/ccWNC5PO.s:207    .text:0000000000000138 .L0 
     /tmp/ccWNC5PO.s:208    .text:0000000000000138 .L0 
     /tmp/ccWNC5PO.s:210    .text:000000000000013c .L0 
     /tmp/ccWNC5PO.s:213    .text:0000000000000140 .L0 
     /tmp/ccWNC5PO.s:214    .text:0000000000000140 .L0 
     /tmp/ccWNC5PO.s:216    .text:0000000000000144 .L0 
     /tmp/ccWNC5PO.s:218    .text:0000000000000148 .L0 
     /tmp/ccWNC5PO.s:219    .text:0000000000000148 .L0 
     /tmp/ccWNC5PO.s:222    .text:000000000000014c .L0 
     /tmp/ccWNC5PO.s:223    .text:000000000000014c .L0 
     /tmp/ccWNC5PO.s:225    .text:0000000000000150 .L0 
     /tmp/ccWNC5PO.s:227    .text:0000000000000154 .L0 
     /tmp/ccWNC5PO.s:228    .text:0000000000000154 .L0 
     /tmp/ccWNC5PO.s:231    .text:0000000000000158 .L0 
     /tmp/ccWNC5PO.s:232    .text:0000000000000158 .L0 
     /tmp/ccWNC5PO.s:234    .text:000000000000015c .L0 
     /tmp/ccWNC5PO.s:235    .text:000000000000015c .L0 
     /tmp/ccWNC5PO.s:246    .text:000000000000016c .L0 
     /tmp/ccWNC5PO.s:247    .text:000000000000016c .L0 
GAS LISTING /tmp/ccWNC5PO.s 			page 19


     /tmp/ccWNC5PO.s:251    .text:0000000000000170 .L0 
     /tmp/ccWNC5PO.s:252    .text:0000000000000174 .L0 
     /tmp/ccWNC5PO.s:253    .text:0000000000000174 .L0 
     /tmp/ccWNC5PO.s:254    .text:0000000000000174 .L0 
     /tmp/ccWNC5PO.s:256    .text:0000000000000178 .L0 
     /tmp/ccWNC5PO.s:260    .text:000000000000017c .L0 
     /tmp/ccWNC5PO.s:264    .text:000000000000017c .L0 
     /tmp/ccWNC5PO.s:265    .text:000000000000017c .L0 
     /tmp/ccWNC5PO.s:271    .text:0000000000000184 .L0 
     /tmp/ccWNC5PO.s:274    .text:0000000000000188 .L0 
     /tmp/ccWNC5PO.s:275    .text:0000000000000188 .L0 
     /tmp/ccWNC5PO.s:277    .text:000000000000018c .L0 
     /tmp/ccWNC5PO.s:279    .text:0000000000000190 .L0 
     /tmp/ccWNC5PO.s:280    .text:0000000000000190 .L0 
     /tmp/ccWNC5PO.s:282    .text:0000000000000194 .L0 
     /tmp/ccWNC5PO.s:285    .text:0000000000000198 .L0 
     /tmp/ccWNC5PO.s:286    .text:0000000000000198 .L0 
     /tmp/ccWNC5PO.s:288    .text:000000000000019c .L0 
     /tmp/ccWNC5PO.s:290    .text:00000000000001a0 .L0 
     /tmp/ccWNC5PO.s:291    .text:00000000000001a0 .L0 
     /tmp/ccWNC5PO.s:293    .text:00000000000001a4 .L0 
     /tmp/ccWNC5PO.s:296    .text:00000000000001a8 .L0 
     /tmp/ccWNC5PO.s:297    .text:00000000000001a8 .L0 
     /tmp/ccWNC5PO.s:305    .text:00000000000001b8 .L0 
     /tmp/ccWNC5PO.s:306    .text:00000000000001b8 .L0 
     /tmp/ccWNC5PO.s:312    .text:00000000000001c0 .L0 
     /tmp/ccWNC5PO.s:317    .text:00000000000001c8 .L0 
     /tmp/ccWNC5PO.s:319    .text:00000000000001d0 .L0 
     /tmp/ccWNC5PO.s:325    .text:00000000000001d0 _ZN15MemoryAllocator11try_to_joinEPNS_12MemoryHeaderE
     /tmp/ccWNC5PO.s:328    .text:00000000000001d0 .L0 
     /tmp/ccWNC5PO.s:330    .text:00000000000001d0 .L0 
     /tmp/ccWNC5PO.s:331    .text:00000000000001d4 .L0 
     /tmp/ccWNC5PO.s:333    .text:00000000000001d8 .L0 
     /tmp/ccWNC5PO.s:335    .text:00000000000001dc .L0 
     /tmp/ccWNC5PO.s:337    .text:00000000000001dc .L0 
     /tmp/ccWNC5PO.s:339    .text:00000000000001e0 .L0 
     /tmp/ccWNC5PO.s:340    .text:00000000000001e0 .L0 
     /tmp/ccWNC5PO.s:342    .text:00000000000001e4 .L0 
     /tmp/ccWNC5PO.s:344    .text:00000000000001e8 .L0 
     /tmp/ccWNC5PO.s:346    .text:00000000000001ec .L0 
     /tmp/ccWNC5PO.s:349    .text:00000000000001f4 .L0 
     /tmp/ccWNC5PO.s:352    .text:00000000000001f8 .L0 
     /tmp/ccWNC5PO.s:353    .text:00000000000001fc .L0 
     /tmp/ccWNC5PO.s:354    .text:00000000000001fc .L0 
     /tmp/ccWNC5PO.s:355    .text:00000000000001fc .L0 
     /tmp/ccWNC5PO.s:357    .text:0000000000000200 .L0 
     /tmp/ccWNC5PO.s:360    .text:0000000000000204 .L0 
     /tmp/ccWNC5PO.s:362    .text:0000000000000204 .L0 
     /tmp/ccWNC5PO.s:363    .text:0000000000000204 .L0 
     /tmp/ccWNC5PO.s:365    .text:0000000000000208 .L0 
     /tmp/ccWNC5PO.s:368    .text:0000000000000210 .L0 
     /tmp/ccWNC5PO.s:369    .text:0000000000000210 .L0 
     /tmp/ccWNC5PO.s:371    .text:0000000000000214 .L0 
     /tmp/ccWNC5PO.s:373    .text:0000000000000218 .L0 
     /tmp/ccWNC5PO.s:375    .text:000000000000021c .L0 
     /tmp/ccWNC5PO.s:376    .text:000000000000021c .L0 
     /tmp/ccWNC5PO.s:379    .text:0000000000000220 .L0 
GAS LISTING /tmp/ccWNC5PO.s 			page 20


     /tmp/ccWNC5PO.s:380    .text:0000000000000220 .L0 
     /tmp/ccWNC5PO.s:384    .text:0000000000000230 .L0 
     /tmp/ccWNC5PO.s:390    .text:0000000000000230 _ZN15MemoryAllocator8mem_freeEPv
     /tmp/ccWNC5PO.s:393    .text:0000000000000230 .L0 
     /tmp/ccWNC5PO.s:395    .text:0000000000000230 .L0 
     /tmp/ccWNC5PO.s:396    .text:0000000000000230 .L0 
     /tmp/ccWNC5PO.s:398    .text:0000000000000234 .L0 
     /tmp/ccWNC5PO.s:399    .text:0000000000000238 .L0 
     /tmp/ccWNC5PO.s:404    .text:0000000000000248 .L0 
     /tmp/ccWNC5PO.s:405    .text:0000000000000248 .L0 
     /tmp/ccWNC5PO.s:406    .text:0000000000000248 .L0 
     /tmp/ccWNC5PO.s:407    .text:0000000000000248 .L0 
     /tmp/ccWNC5PO.s:409    .text:000000000000024c .L0 
     /tmp/ccWNC5PO.s:412    .text:0000000000000250 .L0 
     /tmp/ccWNC5PO.s:413    .text:0000000000000250 .L0 
     /tmp/ccWNC5PO.s:416    .text:0000000000000254 .L0 
     /tmp/ccWNC5PO.s:417    .text:0000000000000254 .L0 
     /tmp/ccWNC5PO.s:419    .text:0000000000000258 .L0 
     /tmp/ccWNC5PO.s:421    .text:000000000000025c .L0 
     /tmp/ccWNC5PO.s:425    .text:0000000000000260 .L0 
     /tmp/ccWNC5PO.s:426    .text:0000000000000260 .L0 
     /tmp/ccWNC5PO.s:428    .text:0000000000000264 .L0 
     /tmp/ccWNC5PO.s:431    .text:0000000000000268 .L0 
     /tmp/ccWNC5PO.s:433    .text:000000000000026c .L0 
     /tmp/ccWNC5PO.s:436    .text:0000000000000270 .L0 
     /tmp/ccWNC5PO.s:439    .text:0000000000000274 .L0 
     /tmp/ccWNC5PO.s:440    .text:0000000000000274 .L0 
     /tmp/ccWNC5PO.s:442    .text:0000000000000278 .L0 
     /tmp/ccWNC5PO.s:443    .text:0000000000000278 .L0 
     /tmp/ccWNC5PO.s:445    .text:000000000000027c .L0 
     /tmp/ccWNC5PO.s:446    .text:000000000000027c .L0 
     /tmp/ccWNC5PO.s:448    .text:0000000000000280 .L0 
     /tmp/ccWNC5PO.s:449    .text:0000000000000280 .L0 
     /tmp/ccWNC5PO.s:451    .text:0000000000000284 .L0 
     /tmp/ccWNC5PO.s:453    .text:0000000000000288 .L0 
     /tmp/ccWNC5PO.s:454    .text:0000000000000288 .L0 
     /tmp/ccWNC5PO.s:457    .text:000000000000028c .L0 
     /tmp/ccWNC5PO.s:458    .text:000000000000028c .L0 
     /tmp/ccWNC5PO.s:461    .text:0000000000000290 .L0 
     /tmp/ccWNC5PO.s:465    .text:000000000000029c .L0 
     /tmp/ccWNC5PO.s:466    .text:000000000000029c .L0 
     /tmp/ccWNC5PO.s:473    .text:00000000000002ac .L0 
     /tmp/ccWNC5PO.s:474    .text:00000000000002ac .L0 
     /tmp/ccWNC5PO.s:480    .text:00000000000002bc .L0 
     /tmp/ccWNC5PO.s:481    .text:00000000000002c0 .L0 
     /tmp/ccWNC5PO.s:482    .text:00000000000002c0 .L0 
     /tmp/ccWNC5PO.s:484    .text:00000000000002c4 .L0 
     /tmp/ccWNC5PO.s:485    .text:00000000000002c4 .L0 
     /tmp/ccWNC5PO.s:487    .text:00000000000002c8 .L0 
     /tmp/ccWNC5PO.s:490    .text:00000000000002cc .L0 
     /tmp/ccWNC5PO.s:493    .text:00000000000002d0 .L0 
     /tmp/ccWNC5PO.s:497    .text:00000000000002d4 .L0 
     /tmp/ccWNC5PO.s:499    .text:00000000000002d4 .L0 
     /tmp/ccWNC5PO.s:500    .text:00000000000002d4 .L0 
     /tmp/ccWNC5PO.s:502    .text:00000000000002d8 .L0 
     /tmp/ccWNC5PO.s:503    .text:00000000000002d8 .L0 
     /tmp/ccWNC5PO.s:505    .text:00000000000002dc .L0 
GAS LISTING /tmp/ccWNC5PO.s 			page 21


     /tmp/ccWNC5PO.s:506    .text:00000000000002dc .L0 
     /tmp/ccWNC5PO.s:508    .text:00000000000002e0 .L0 
     /tmp/ccWNC5PO.s:509    .text:00000000000002e0 .L0 
     /tmp/ccWNC5PO.s:511    .text:00000000000002e4 .L0 
     /tmp/ccWNC5PO.s:515    .text:00000000000002f0 .L0 
     /tmp/ccWNC5PO.s:519    .text:00000000000002f4 .L0 
     /tmp/ccWNC5PO.s:521    .text:00000000000002f8 .L0 
     /tmp/ccWNC5PO.s:522    .text:00000000000002f8 .L0 
     /tmp/ccWNC5PO.s:524    .text:00000000000002fc .L0 
     /tmp/ccWNC5PO.s:525    .text:00000000000002fc .L0 
     /tmp/ccWNC5PO.s:527    .text:0000000000000300 .L0 
     /tmp/ccWNC5PO.s:529    .text:0000000000000304 .L0 
     /tmp/ccWNC5PO.s:530    .text:0000000000000304 .L0 
     /tmp/ccWNC5PO.s:532    .text:0000000000000308 .L0 
     /tmp/ccWNC5PO.s:533    .text:0000000000000308 .L0 
     /tmp/ccWNC5PO.s:537    .text:0000000000000310 .L0 
     /tmp/ccWNC5PO.s:538    .text:0000000000000310 .L0 
     /tmp/ccWNC5PO.s:539    .text:0000000000000310 .L0 
     /tmp/ccWNC5PO.s:540    .text:0000000000000310 .L0 
     /tmp/ccWNC5PO.s:541    .text:0000000000000310 .L0 
     /tmp/ccWNC5PO.s:543    .text:0000000000000314 .L0 
     /tmp/ccWNC5PO.s:549    .text:0000000000000314 _ZN15MemoryAllocator19getLargestFreeBlockEv
     /tmp/ccWNC5PO.s:552    .text:0000000000000314 .L0 
     /tmp/ccWNC5PO.s:554    .text:0000000000000314 .L0 
     /tmp/ccWNC5PO.s:555    .text:0000000000000318 .L0 
     /tmp/ccWNC5PO.s:557    .text:000000000000031c .L0 
     /tmp/ccWNC5PO.s:559    .text:0000000000000320 .L0 
     /tmp/ccWNC5PO.s:562    .text:0000000000000320 .L0 
     /tmp/ccWNC5PO.s:563    .text:0000000000000320 .L0 
     /tmp/ccWNC5PO.s:564    .text:0000000000000320 .L0 
     /tmp/ccWNC5PO.s:567    .text:0000000000000324 .L0 
     /tmp/ccWNC5PO.s:573    .text:000000000000032c .L0 
     /tmp/ccWNC5PO.s:574    .text:000000000000032c .L0 
     /tmp/ccWNC5PO.s:578    .text:0000000000000330 .L0 
     /tmp/ccWNC5PO.s:579    .text:0000000000000330 .L0 
     /tmp/ccWNC5PO.s:581    .text:0000000000000334 .L0 
     /tmp/ccWNC5PO.s:582    .text:0000000000000334 .L0 
     /tmp/ccWNC5PO.s:584    .text:0000000000000338 .L0 
     /tmp/ccWNC5PO.s:586    .text:000000000000033c .L0 
     /tmp/ccWNC5PO.s:592    .text:0000000000000344 .L0 
     /tmp/ccWNC5PO.s:593    .text:0000000000000348 .L0 
     /tmp/ccWNC5PO.s:594    .text:0000000000000348 .L0 
     /tmp/ccWNC5PO.s:596    .text:000000000000034c .L0 
     /tmp/ccWNC5PO.s:598    .text:0000000000000350 .L0 
     /tmp/ccWNC5PO.s:603    .bss:0000000000000000 .LANCHOR0
     /tmp/ccWNC5PO.s:606    .bss:0000000000000000 _ZGVZN15MemoryAllocator8InstanceEvE8instance
     /tmp/ccWNC5PO.s:610    .bss:0000000000000008 _ZZN15MemoryAllocator8InstanceEvE8instance
     /tmp/ccWNC5PO.s:616    .text:0000000000000350 .L0 
     /tmp/ccWNC5PO.s:24     .text:000000000000000c .L0 
     /tmp/ccWNC5PO.s:37     .text:0000000000000028 .L0 
     /tmp/ccWNC5PO.s:76     .text:000000000000005c .L0 
     /tmp/ccWNC5PO.s:80     .text:0000000000000068 .L0 
     /tmp/ccWNC5PO.s:93     .text:0000000000000084 .L0 
     /tmp/ccWNC5PO.s:97     .text:0000000000000098 .L0 
     /tmp/ccWNC5PO.s:100    .text:00000000000000a0 .L0 
     /tmp/ccWNC5PO.s:82     .text:0000000000000074 .L9
     /tmp/ccWNC5PO.s:249    .text:0000000000000170 .L10
GAS LISTING /tmp/ccWNC5PO.s 			page 22


     /tmp/ccWNC5PO.s:309    .text:00000000000001c0 .L23
     /tmp/ccWNC5PO.s:144    .text:00000000000000e0 .L12
     /tmp/ccWNC5PO.s:170    .text:0000000000000104 .L13
     /tmp/ccWNC5PO.s:157    .text:00000000000000f0 .L14
     /tmp/ccWNC5PO.s:315    .text:00000000000001c8 .L25
     /tmp/ccWNC5PO.s:268    .text:0000000000000184 .L15
     /tmp/ccWNC5PO.s:259    .text:000000000000017c .L27
     /tmp/ccWNC5PO.s:220    .text:000000000000014c .L17
     /tmp/ccWNC5PO.s:229    .text:0000000000000158 .L18
     /tmp/ccWNC5PO.s:211    .text:0000000000000140 .L16
     /tmp/ccWNC5PO.s:303    .text:00000000000001b8 .L28
     /tmp/ccWNC5PO.s:283    .text:0000000000000198 .L21
     /tmp/ccWNC5PO.s:294    .text:00000000000001a8 .L22
     /tmp/ccWNC5PO.s:242    .text:000000000000016c .L19
     /tmp/ccWNC5PO.s:272    .text:0000000000000188 .L20
     /tmp/ccWNC5PO.s:350    .text:00000000000001f8 .L29
     /tmp/ccWNC5PO.s:359    .text:0000000000000204 .L33
     /tmp/ccWNC5PO.s:377    .text:0000000000000220 .L31
     /tmp/ccWNC5PO.s:536    .text:0000000000000310 .L42
     /tmp/ccWNC5PO.s:496    .text:00000000000002d4 .L45
     /tmp/ccWNC5PO.s:434    .text:0000000000000270 .L37
     /tmp/ccWNC5PO.s:422    .text:0000000000000260 .L36
     /tmp/ccWNC5PO.s:517    .text:00000000000002f4 .L46
     /tmp/ccWNC5PO.s:455    .text:000000000000028c .L39
     /tmp/ccWNC5PO.s:478    .text:00000000000002bc .L34
     /tmp/ccWNC5PO.s:437    .text:0000000000000274 .L38
     /tmp/ccWNC5PO.s:576    .text:0000000000000330 .L50
     /tmp/ccWNC5PO.s:590    .text:0000000000000344 .L47
     /tmp/ccWNC5PO.s:571    .text:000000000000032c .L49
     /tmp/ccWNC5PO.s:1130   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccWNC5PO.s:2009   .debug_str:00000000000001f1 .LASF42
     /tmp/ccWNC5PO.s:2027   .debug_str:0000000000000329 .LASF43
     /tmp/ccWNC5PO.s:1989   .debug_str:0000000000000119 .LASF44
     /tmp/ccWNC5PO.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccWNC5PO.s:613    .text:0000000000000350 .Letext0
     /tmp/ccWNC5PO.s:1957   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccWNC5PO.s:2017   .debug_str:00000000000002df .LASF0
     /tmp/ccWNC5PO.s:2001   .debug_str:000000000000019f .LASF1
     /tmp/ccWNC5PO.s:1995   .debug_str:000000000000017a .LASF2
     /tmp/ccWNC5PO.s:1971   .debug_str:000000000000004a .LASF4
     /tmp/ccWNC5PO.s:1999   .debug_str:000000000000018d .LASF3
     /tmp/ccWNC5PO.s:1963   .debug_str:0000000000000023 .LASF5
     /tmp/ccWNC5PO.s:1959   .debug_str:0000000000000000 .LASF6
     /tmp/ccWNC5PO.s:1983   .debug_str:00000000000000e0 .LASF7
     /tmp/ccWNC5PO.s:2023   .debug_str:0000000000000303 .LASF8
     /tmp/ccWNC5PO.s:1969   .debug_str:000000000000003c .LASF9
     /tmp/ccWNC5PO.s:2055   .debug_str:00000000000003e2 .LASF10
     /tmp/ccWNC5PO.s:2021   .debug_str:00000000000002f4 .LASF11
     /tmp/ccWNC5PO.s:2043   .debug_str:00000000000003ad .LASF12
     /tmp/ccWNC5PO.s:2029   .debug_str:0000000000000341 .LASF13
     /tmp/ccWNC5PO.s:2003   .debug_str:00000000000001b2 .LASF14
     /tmp/ccWNC5PO.s:1977   .debug_str:0000000000000096 .LASF15
     /tmp/ccWNC5PO.s:2025   .debug_str:0000000000000313 .LASF16
     /tmp/ccWNC5PO.s:1961   .debug_str:0000000000000013 .LASF27
     /tmp/ccWNC5PO.s:1965   .debug_str:000000000000002a .LASF45
     /tmp/ccWNC5PO.s:2049   .debug_str:00000000000003cc .LASF17
     /tmp/ccWNC5PO.s:2047   .debug_str:00000000000003c7 .LASF18
GAS LISTING /tmp/ccWNC5PO.s 			page 23


     /tmp/ccWNC5PO.s:2051   .debug_str:00000000000003d1 .LASF19
     /tmp/ccWNC5PO.s:2037   .debug_str:000000000000036a .LASF46
     /tmp/ccWNC5PO.s:1985   .debug_str:00000000000000f3 .LASF47
     /tmp/ccWNC5PO.s:2045   .debug_str:00000000000003bd .LASF20
     /tmp/ccWNC5PO.s:2041   .debug_str:000000000000038c .LASF22
     /tmp/ccWNC5PO.s:2031   .debug_str:0000000000000351 .LASF26
     /tmp/ccWNC5PO.s:1993   .debug_str:0000000000000159 .LASF28
     /tmp/ccWNC5PO.s:1975   .debug_str:0000000000000087 .LASF21
     /tmp/ccWNC5PO.s:2007   .debug_str:00000000000001ca .LASF23
     /tmp/ccWNC5PO.s:1991   .debug_str:0000000000000145 .LASF24
     /tmp/ccWNC5PO.s:1979   .debug_str:00000000000000ac .LASF25
     /tmp/ccWNC5PO.s:2011   .debug_str:00000000000002b5 .LASF29
     /tmp/ccWNC5PO.s:2005   .debug_str:00000000000001be .LASF30
     /tmp/ccWNC5PO.s:1973   .debug_str:0000000000000051 .LASF31
     /tmp/ccWNC5PO.s:2015   .debug_str:00000000000002da .LASF32
     /tmp/ccWNC5PO.s:2013   .debug_str:00000000000002ce .LASF33
     /tmp/ccWNC5PO.s:550    .text:0000000000000314 .LFB8
     /tmp/ccWNC5PO.s:599    .text:0000000000000350 .LFE8
     /tmp/ccWNC5PO.s:1997   .debug_str:0000000000000188 .LASF36
     /tmp/ccWNC5PO.s:1708   .debug_loc:0000000000000000 .LLST10
     /tmp/ccWNC5PO.s:1981   .debug_str:00000000000000d8 .LASF34
     /tmp/ccWNC5PO.s:1722   .debug_loc:0000000000000039 .LLST11
     /tmp/ccWNC5PO.s:1967   .debug_str:0000000000000037 .LASF35
     /tmp/ccWNC5PO.s:326    .text:00000000000001d0 .LFB7
     /tmp/ccWNC5PO.s:385    .text:0000000000000230 .LFE7
     /tmp/ccWNC5PO.s:1987   .debug_str:0000000000000113 .LASF37
     /tmp/ccWNC5PO.s:391    .text:0000000000000230 .LFB6
     /tmp/ccWNC5PO.s:544    .text:0000000000000314 .LFE6
     /tmp/ccWNC5PO.s:1738   .debug_loc:0000000000000083 .LLST6
     /tmp/ccWNC5PO.s:1760   .debug_loc:00000000000000e2 .LLST7
     /tmp/ccWNC5PO.s:1784   .debug_loc:0000000000000143 .LLST8
     /tmp/ccWNC5PO.s:1804   .debug_loc:0000000000000191 .LLST9
     /tmp/ccWNC5PO.s:471    .text:00000000000002ac .LVL29
     /tmp/ccWNC5PO.s:477    .text:00000000000002bc .LVL30
     /tmp/ccWNC5PO.s:116    .text:00000000000000b8 .LFB5
     /tmp/ccWNC5PO.s:320    .text:00000000000001d0 .LFE5
     /tmp/ccWNC5PO.s:1819   .debug_loc:00000000000001da .LLST0
     /tmp/ccWNC5PO.s:1830   .debug_loc:0000000000000210 .LLST1
     /tmp/ccWNC5PO.s:2035   .debug_str:0000000000000363 .LASF38
     /tmp/ccWNC5PO.s:1848   .debug_loc:000000000000025c .LLST2
     /tmp/ccWNC5PO.s:2053   .debug_str:00000000000003d6 .LASF39
     /tmp/ccWNC5PO.s:1855   .debug_loc:000000000000027f .LLST3
     /tmp/ccWNC5PO.s:1879   .debug_loc:00000000000002ef .LLST4
     /tmp/ccWNC5PO.s:1949   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccWNC5PO.s:2019   .debug_str:00000000000002ec .LASF40
     /tmp/ccWNC5PO.s:1902   .debug_loc:000000000000035e .LLST5
     /tmp/ccWNC5PO.s:71     .text:000000000000005c .LFB4
     /tmp/ccWNC5PO.s:110    .text:00000000000000b8 .LFE4
     /tmp/ccWNC5PO.s:2033   .debug_str:000000000000035a .LASF41
     /tmp/ccWNC5PO.s:95     .text:0000000000000094 .LVL1
     /tmp/ccWNC5PO.s:2039   .debug_str:0000000000000373 .LASF48
     /tmp/ccWNC5PO.s:10     .text:0000000000000000 .LFB2
     /tmp/ccWNC5PO.s:63     .text:000000000000005c .LFE2
     /tmp/ccWNC5PO.s:553    .text:0000000000000314 .LVL36
     /tmp/ccWNC5PO.s:568    .text:0000000000000328 .LVL39
     /tmp/ccWNC5PO.s:561    .text:0000000000000320 .LVL37
     /tmp/ccWNC5PO.s:570    .text:000000000000032c .LVL40
GAS LISTING /tmp/ccWNC5PO.s 			page 24


     /tmp/ccWNC5PO.s:587    .text:0000000000000340 .LVL42
     /tmp/ccWNC5PO.s:589    .text:0000000000000344 .LVL43
     /tmp/ccWNC5PO.s:394    .text:0000000000000230 .LVL22
     /tmp/ccWNC5PO.s:469    .text:00000000000002a4 .LVL28
     /tmp/ccWNC5PO.s:491    .text:00000000000002cc .LVL32
     /tmp/ccWNC5PO.s:495    .text:00000000000002d4 .LVL33
     /tmp/ccWNC5PO.s:467    .text:00000000000002a0 .LVL27
     /tmp/ccWNC5PO.s:488    .text:00000000000002c8 .LVL31
     /tmp/ccWNC5PO.s:414    .text:0000000000000254 .LVL23
     /tmp/ccWNC5PO.s:535    .text:0000000000000310 .LVL35
     /tmp/ccWNC5PO.s:423    .text:0000000000000260 .LVL24
     /tmp/ccWNC5PO.s:429    .text:0000000000000268 .LVL25
     /tmp/ccWNC5PO.s:459    .text:0000000000000290 .LVL26
     /tmp/ccWNC5PO.s:516    .text:00000000000002f4 .LVL34
     /tmp/ccWNC5PO.s:119    .text:00000000000000b8 .LVL2
     /tmp/ccWNC5PO.s:130    .text:00000000000000cc .LVL3
     /tmp/ccWNC5PO.s:182    .text:0000000000000114 .LVL9
     /tmp/ccWNC5PO.s:308    .text:00000000000001c0 .LVL19
     /tmp/ccWNC5PO.s:138    .text:00000000000000d8 .LVL4
     /tmp/ccWNC5PO.s:156    .text:00000000000000f0 .LVL7
     /tmp/ccWNC5PO.s:152    .text:00000000000000ec .LVL6
     /tmp/ccWNC5PO.s:238    .text:0000000000000164 .LVL12
     /tmp/ccWNC5PO.s:241    .text:000000000000016c .LVL13
     /tmp/ccWNC5PO.s:258    .text:000000000000017c .LVL15
     /tmp/ccWNC5PO.s:299    .text:00000000000001b0 .LVL17
     /tmp/ccWNC5PO.s:302    .text:00000000000001b8 .LVL18
     /tmp/ccWNC5PO.s:314    .text:00000000000001c8 .LVL20
     /tmp/ccWNC5PO.s:163    .text:00000000000000f8 .LVL8
     /tmp/ccWNC5PO.s:248    .text:0000000000000170 .LVL14
     /tmp/ccWNC5PO.s:190    .text:0000000000000120 .LVL10
     /tmp/ccWNC5PO.s:236    .text:0000000000000160 .LVL11
     /tmp/ccWNC5PO.s:267    .text:0000000000000184 .LVL16
     /tmp/ccWNC5PO.s:617    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccWNC5PO.s:184    .text:0000000000000118 .LBB4
     /tmp/ccWNC5PO.s:243    .text:000000000000016c .LBE4
     /tmp/ccWNC5PO.s:262    .text:000000000000017c .LBB5
     /tmp/ccWNC5PO.s:269    .text:0000000000000184 .LBE5

UNDEFINED SYMBOLS
HEAP_START_ADDR
HEAP_END_ADDR

GAS LISTING /tmp/ccqtESKb.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB27:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 9/8/25.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../h/syscall_c.hpp"
   8:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/Riscv.cpp **** #include  "../h/print.hpp"
  10:src/Riscv.cpp **** using Body=void(*)(void*);
  11:src/Riscv.cpp **** 
  12:src/Riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 12 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  13:src/Riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 13 5
  21              		.loc 1 13 38 is_stmt 0
  22              	#APP
  23              	# 13 "src/Riscv.cpp" 1
  14              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 14 5 is_stmt 1
  27              		.loc 1 14 29 is_stmt 0
  28              	# 14 "src/Riscv.cpp" 1
  15              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 15 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE27:
  42              		.align	2
  43              		.globl	_ZN5Riscv16restorePrivilegeEv
  45              	_ZN5Riscv16restorePrivilegeEv:
GAS LISTING /tmp/ccqtESKb.s 			page 2


  46              	.LFB28:
  16:src/Riscv.cpp **** 
  17:src/Riscv.cpp **** void Riscv::restorePrivilege()
  18:src/Riscv.cpp **** {
  47              		.loc 1 18 1 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FF 		addi	sp,sp,-16
  50              		.cfi_def_cfa_offset 16
  51 0024 23348100 		sd	s0,8(sp)
  52              		.cfi_offset 8, -8
  53 0028 13040101 		addi	s0,sp,16
  54              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp ****     if(TCB::running->isSysThread())
  55              		.loc 1 19 5
  56              		.loc 1 19 33 is_stmt 0
  57 002c 97070000 		la	a5,_ZN3TCB7runningE
  57      83B70700 
  58 0034 83B70700 		ld	a5,0(a5)
  59              	.LVL0:
  60              	.LBB43:
  61              	.LBB44:
  62              		.file 2 "src/../h/TCB.hpp"
   1:src/../h/TCB.hpp **** //
   2:src/../h/TCB.hpp **** // Created by os on 9/23/25.
   3:src/../h/TCB.hpp **** //
   4:src/../h/TCB.hpp **** 
   5:src/../h/TCB.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_TCB_HPP
   6:src/../h/TCB.hpp **** #define PROJECT_BASE_V1_1_COPY_TCB_HPP
   7:src/../h/TCB.hpp **** #include "../lib/hw.h"
   8:src/../h/TCB.hpp **** #include "../h/Scheduler.hpp"
   9:src/../h/TCB.hpp **** #include "../h/Riscv.hpp"
  10:src/../h/TCB.hpp **** #include "../h/MemoryAllocator.hpp"
  11:src/../h/TCB.hpp **** class TCB
  12:src/../h/TCB.hpp **** {
  13:src/../h/TCB.hpp **** public:
  14:src/../h/TCB.hpp ****     void* operator new(size_t size)
  15:src/../h/TCB.hpp **** {
  16:src/../h/TCB.hpp ****     return MemoryAllocator::Instance()->mem_alloc(size);
  17:src/../h/TCB.hpp **** }
  18:src/../h/TCB.hpp **** 
  19:src/../h/TCB.hpp ****     void operator delete(void* ptr)
  20:src/../h/TCB.hpp ****     {
  21:src/../h/TCB.hpp ****         return MemoryAllocator::Instance()->mem_free(ptr);
  22:src/../h/TCB.hpp ****     }
  23:src/../h/TCB.hpp **** 
  24:src/../h/TCB.hpp **** 
  25:src/../h/TCB.hpp ****     using Body=void(*)(void*);
  26:src/../h/TCB.hpp **** 
  27:src/../h/TCB.hpp ****     ~TCB()
  28:src/../h/TCB.hpp ****     {
  29:src/../h/TCB.hpp ****         delete stack;
  30:src/../h/TCB.hpp ****     }
  31:src/../h/TCB.hpp **** 
  32:src/../h/TCB.hpp ****     static TCB* createThread(Body body, void* arg, uint64* stack);
  33:src/../h/TCB.hpp **** 
  34:src/../h/TCB.hpp ****     static void dispatch();
  35:src/../h/TCB.hpp ****     static int exit();
GAS LISTING /tmp/ccqtESKb.s 			page 3


  36:src/../h/TCB.hpp **** 
  37:src/../h/TCB.hpp ****     bool isFinished() const { return finished;}
  38:src/../h/TCB.hpp **** 
  39:src/../h/TCB.hpp ****     void setSysThread(bool sysThread) { this->sysThread = sysThread; }
  40:src/../h/TCB.hpp **** 
  41:src/../h/TCB.hpp ****     bool isSysThread() const { return sysThread; }
  63              		.loc 2 41 32 is_stmt 1
  64              		.loc 2 41 39 is_stmt 0
  65 0038 83C78701 		lbu	a5,24(a5)
  66              	.LVL1:
  67              	.LBE44:
  68              	.LBE43:
  69              		.loc 1 19 5
  70 003c 638C0700 		beqz	a5,.L4
  20:src/Riscv.cpp ****         ms_sstatus(SSTATUS_SPP);
  71              		.loc 1 20 9 is_stmt 1
  72              	.LVL2:
  73              	.LBB45:
  74              	.LBB46:
  75              		.file 3 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 9/8/25.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_COPY_RISCV_HPP
   7:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/Riscv.hpp **** 
   9:src/../h/Riscv.hpp **** class Riscv {
  10:src/../h/Riscv.hpp **** public:
  11:src/../h/Riscv.hpp ****     static void set_stvec(uint64 stvec);
  12:src/../h/Riscv.hpp ****     static void set_sepc(uint64 sepc);
  13:src/../h/Riscv.hpp ****     static uint64 get_sepc();
  14:src/../h/Riscv.hpp ****     static void set_sstatus(uint64 sstatus);
  15:src/../h/Riscv.hpp ****     static uint64 get_sstatus();
  16:src/../h/Riscv.hpp ****     static uint64 get_scause();
  17:src/../h/Riscv.hpp ****     static uint64 get_stval();
  18:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  19:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  20:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  21:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  22:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  23:src/../h/Riscv.hpp ****     {
  24:src/../h/Riscv.hpp ****         SSTATUS_SIE=(1UL<<1),
  25:src/../h/Riscv.hpp ****         SSTATUS_SPIE=(1UL<<5),
  26:src/../h/Riscv.hpp ****         SSTATUS_SPP=(1UL<<8)
  27:src/../h/Riscv.hpp ****     };
  28:src/../h/Riscv.hpp ****     enum BitMaskSip: uint64
  29:src/../h/Riscv.hpp ****     {
  30:src/../h/Riscv.hpp ****         SIP_SSIP=(1UL<<1),
  31:src/../h/Riscv.hpp ****         SIP_STIP=(1UL<<5),
  32:src/../h/Riscv.hpp ****         SIP_SEIP=(1UL<<9)
  33:src/../h/Riscv.hpp ****     };
  34:src/../h/Riscv.hpp ****     enum BitMaskSie: uint64
  35:src/../h/Riscv.hpp ****     {
  36:src/../h/Riscv.hpp ****         SIE_SSIE=(1UL<<1),
  37:src/../h/Riscv.hpp ****         SIE_SEIE=(1UL<<9)
GAS LISTING /tmp/ccqtESKb.s 			page 4


  38:src/../h/Riscv.hpp ****     };
  39:src/../h/Riscv.hpp **** 
  40:src/../h/Riscv.hpp **** 
  41:src/../h/Riscv.hpp ****     static void SupervisorTrap();
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static void restorePrivilege();
  44:src/../h/Riscv.hpp ****     static void popSppSpie();
  45:src/../h/Riscv.hpp **** 
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp ****     static void SupervisorTrapHandler();
  49:src/../h/Riscv.hpp **** };
  50:src/../h/Riscv.hpp **** 
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** inline void Riscv::set_stvec(uint64 stvec) {
  53:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[x]" :: [x] "r" (stvec));
  54:src/../h/Riscv.hpp **** }
  55:src/../h/Riscv.hpp **** 
  56:src/../h/Riscv.hpp **** inline void Riscv::set_sepc(uint64 sepc) {
  57:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[x]" :: [x] "r" (sepc));
  58:src/../h/Riscv.hpp **** }
  59:src/../h/Riscv.hpp **** 
  60:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sepc() {
  61:src/../h/Riscv.hpp ****     uint64 sepc;
  62:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
  63:src/../h/Riscv.hpp ****     return sepc;
  64:src/../h/Riscv.hpp **** }
  65:src/../h/Riscv.hpp **** 
  66:src/../h/Riscv.hpp **** inline void Riscv::set_sstatus(uint64 sstatus) {
  67:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[x]" :: [x] "r" (sstatus));
  68:src/../h/Riscv.hpp **** }
  69:src/../h/Riscv.hpp **** 
  70:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sstatus() {
  71:src/../h/Riscv.hpp ****     uint64 sstatus;
  72:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
  73:src/../h/Riscv.hpp ****     return sstatus;
  74:src/../h/Riscv.hpp **** }
  75:src/../h/Riscv.hpp **** 
  76:src/../h/Riscv.hpp **** inline uint64 Riscv::get_scause() {
  77:src/../h/Riscv.hpp ****     uint64 volatile scause;
  78:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
  79:src/../h/Riscv.hpp ****     return scause;
  80:src/../h/Riscv.hpp **** }
  81:src/../h/Riscv.hpp **** inline uint64 Riscv::get_stval() {
  82:src/../h/Riscv.hpp ****     uint64 volatile stval;
  83:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
  84:src/../h/Riscv.hpp ****     return stval;
  85:src/../h/Riscv.hpp **** }
  86:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
  87:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus,%[mask]"::[mask]"r"(mask));
  76              		.loc 3 87 5
  77              		.loc 3 87 62 is_stmt 0
  78 0040 93070010 		li	a5,256
  79              	#APP
  80              	# 87 "src/../h/Riscv.hpp" 1
  88              	}
  81              		csrs sstatus,a5
GAS LISTING /tmp/ccqtESKb.s 			page 5


  82              	# 0 "" 2
  83              	.LVL3:
  84              	#NO_APP
  85              	.L3:
  86              	.LBE46:
  87              	.LBE45:
  21:src/Riscv.cpp ****     else
  22:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
  23:src/Riscv.cpp **** }
  88              		.loc 1 23 1
  89 0048 03348100 		ld	s0,8(sp)
  90              		.cfi_remember_state
  91              		.cfi_restore 8
  92              		.cfi_def_cfa 2, 16
  93 004c 13010101 		addi	sp,sp,16
  94              		.cfi_def_cfa_offset 0
  95 0050 67800000 		jr	ra
  96              	.L4:
  97              		.cfi_restore_state
  22:src/Riscv.cpp **** }
  98              		.loc 1 22 9 is_stmt 1
  99              	.LVL4:
 100              	.LBB47:
 101              	.LBB48:
  89:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus,%[mask]"::[mask]"r"(mask));
 102              		.loc 3 90 5
 103              		.loc 3 90 62 is_stmt 0
 104 0054 93070010 		li	a5,256
 105              	#APP
 106              	# 90 "src/../h/Riscv.hpp" 1
  91              	}
 107              		csrc sstatus,a5
 108              	# 0 "" 2
 109              	.LVL5:
 110              	#NO_APP
 111              	.LBE48:
 112              	.LBE47:
 113              		.loc 1 23 1
 114 005c 6FF0DFFE 		j	.L3
 115              		.cfi_endproc
 116              	.LFE28:
 118              		.section	.rodata.str1.8,"aMS",@progbits,1
 119              		.align	3
 120              	.LC0:
 121 0000 73636175 		.string	"scause:"
 121      73653A00 
 122              		.align	3
 123              	.LC1:
 124 0008 0A00     		.string	"\n"
 125 000a 00000000 		.align	3
 125      0000
 126              	.LC2:
 127 0010 73747661 		.string	"stval:"
 127      6C3A00
 128 0017 00       		.align	3
 129              	.LC3:
GAS LISTING /tmp/ccqtESKb.s 			page 6


 130 0018 73657063 		.string	"sepc:"
 130      3A00
 131              		.text
 132              		.align	2
 133              		.globl	_ZN5Riscv21SupervisorTrapHandlerEv
 135              	_ZN5Riscv21SupervisorTrapHandlerEv:
 136              	.LFB29:
  24:src/Riscv.cpp **** 
  25:src/Riscv.cpp **** 
  26:src/Riscv.cpp **** void Riscv::SupervisorTrapHandler() {
 137              		.loc 1 26 37 is_stmt 1
 138              		.cfi_startproc
 139 0060 130101FA 		addi	sp,sp,-96
 140              		.cfi_def_cfa_offset 96
 141 0064 233C1104 		sd	ra,88(sp)
 142 0068 23388104 		sd	s0,80(sp)
 143 006c 23349104 		sd	s1,72(sp)
 144 0070 23302105 		sd	s2,64(sp)
 145 0074 233C3103 		sd	s3,56(sp)
 146 0078 23384103 		sd	s4,48(sp)
 147 007c 23345103 		sd	s5,40(sp)
 148              		.cfi_offset 1, -8
 149              		.cfi_offset 8, -16
 150              		.cfi_offset 9, -24
 151              		.cfi_offset 18, -32
 152              		.cfi_offset 19, -40
 153              		.cfi_offset 20, -48
 154              		.cfi_offset 21, -56
 155 0080 13040106 		addi	s0,sp,96
 156              		.cfi_def_cfa 8, 0
  27:src/Riscv.cpp ****     uint64 sepc;
 157              		.loc 1 27 5
  28:src/Riscv.cpp ****     uint64 sstatus;
 158              		.loc 1 28 5
  29:src/Riscv.cpp ****     uint64 scause=get_scause();
 159              		.loc 1 29 5
 160              	.LBB49:
 161              	.LBB50:
  77:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 162              		.loc 3 77 5
  78:src/../h/Riscv.hpp ****     return scause;
 163              		.loc 3 78 5
  78:src/../h/Riscv.hpp ****     return scause;
 164              		.loc 3 78 68 is_stmt 0
 165              	#APP
 166              	# 78 "src/../h/Riscv.hpp" 1
 167              		csrr a5, scause
 168              	# 0 "" 2
 169              	#NO_APP
 170 0088 2334F4FA 		sd	a5,-88(s0)
  79:src/../h/Riscv.hpp **** }
 171              		.loc 3 79 5 is_stmt 1
  79:src/../h/Riscv.hpp **** }
 172              		.loc 3 79 12 is_stmt 0
 173 008c 033784FA 		ld	a4,-88(s0)
 174              	.LVL6:
 175              	.LBE50:
GAS LISTING /tmp/ccqtESKb.s 			page 7


 176              	.LBE49:
  30:src/Riscv.cpp ****     sepc=get_sepc();
 177              		.loc 1 30 5 is_stmt 1
 178              	.LBB51:
 179              	.LBB52:
  61:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
 180              		.loc 3 61 5
  62:src/../h/Riscv.hpp ****     return sepc;
 181              		.loc 3 62 5
  62:src/../h/Riscv.hpp ****     return sepc;
 182              		.loc 3 62 58 is_stmt 0
 183              	#APP
 184              	# 62 "src/../h/Riscv.hpp" 1
 185              		csrr s1,sepc
 186              	# 0 "" 2
 187              	.LVL7:
  63:src/../h/Riscv.hpp **** }
 188              		.loc 3 63 5 is_stmt 1
 189              	#NO_APP
 190              	.LBE52:
 191              	.LBE51:
  31:src/Riscv.cpp ****     sstatus=get_sstatus();
 192              		.loc 1 31 5
 193              	.LBB53:
 194              	.LBB54:
  71:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
 195              		.loc 3 71 5
  72:src/../h/Riscv.hpp ****     return sstatus;
 196              		.loc 3 72 5
  72:src/../h/Riscv.hpp ****     return sstatus;
 197              		.loc 3 72 64 is_stmt 0
 198              	#APP
 199              	# 72 "src/../h/Riscv.hpp" 1
 200              		csrr s2,sstatus
 201              	# 0 "" 2
 202              	.LVL8:
  73:src/../h/Riscv.hpp **** }
 203              		.loc 3 73 5 is_stmt 1
 204              	#NO_APP
 205              	.LBE54:
 206              	.LBE53:
  32:src/Riscv.cpp ****     if (scause == 0x8000000000000001UL) {
 207              		.loc 1 32 5
 208              	.LBB55:
 209 0098 9307F0FF 		li	a5,-1
 210 009c 9397F703 		slli	a5,a5,63
 211 00a0 93871700 		addi	a5,a5,1
 212 00a4 630CF70E 		beq	a4,a5,.L22
 213              	.LBE55:
  33:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor software interrupt (CLINT; machine timer interrup
  34:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  35:src/Riscv.cpp ****     }
  36:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL) {
 214              		.loc 1 36 10
 215              	.LBB130:
 216              	.LBB56:
 217 00a8 9307F0FF 		li	a5,-1
GAS LISTING /tmp/ccqtESKb.s 			page 8


 218 00ac 9397F703 		slli	a5,a5,63
 219 00b0 93879700 		addi	a5,a5,9
 220 00b4 630AF70E 		beq	a4,a5,.L23
 221              	.LBB57:
  37:src/Riscv.cpp ****         // interrupt: yes; cause code: supervisor external interrupt (PLIC; could be keyboard)
  38:src/Riscv.cpp ****         console_handler();
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else {
  41:src/Riscv.cpp ****         uint64 syscode;
 222              		.loc 1 41 9
  42:src/Riscv.cpp ****     __asm__ volatile ("mv %[x], a0" : [x] "=r" (syscode));
 223              		.loc 1 42 5
 224              		.loc 1 42 58 is_stmt 0
 225              	#APP
 226              	# 42 "src/Riscv.cpp" 1
  43              	
 227              		mv a5, a0
 228              	# 0 "" 2
 229              	.LVL9:
  44:src/Riscv.cpp ****     if (syscode==MEM_ALLOC) {
 230              		.loc 1 44 5 is_stmt 1
 231              	#NO_APP
 232              	.LBB58:
 233 00bc 13071000 		li	a4,1
 234              	.LVL10:
 235 00c0 638AE70E 		beq	a5,a4,.L24
 236              	.LBE58:
 237              	.LBE57:
 238              	.LBE56:
 239              	.LBE130:
  45:src/Riscv.cpp ****         size_t size_in_blocks;
  46:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
  47:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
  48:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
  49:src/Riscv.cpp ****     }
  50:src/Riscv.cpp ****     else if (syscode==MEM_FREE) {
 240              		.loc 1 50 10
 241              	.LBB131:
 242              	.LBB120:
 243              	.LBB112:
 244              	.LBB100:
 245              	.LBB59:
 246 00c4 13072000 		li	a4,2
 247 00c8 638CE712 		beq	a5,a4,.L25
 248              	.LBE59:
 249              	.LBE100:
 250              	.LBE112:
 251              	.LBE120:
 252              	.LBE131:
  51:src/Riscv.cpp ****         void* ptr;
  52:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
  53:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
  54:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
  55:src/Riscv.cpp ****     }
  56:src/Riscv.cpp ****     else if (syscode==MEM_GET_FREE_SPACE) {
 253              		.loc 1 56 10
 254              	.LBB132:
GAS LISTING /tmp/ccqtESKb.s 			page 9


 255              	.LBB121:
 256              	.LBB113:
 257              	.LBB101:
 258              	.LBB93:
 259              	.LBB60:
 260 00cc 13073000 		li	a4,3
 261 00d0 638AE714 		beq	a5,a4,.L26
 262              	.LBE60:
 263              	.LBE93:
 264              	.LBE101:
 265              	.LBE113:
 266              	.LBE121:
 267              	.LBE132:
  57:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
  58:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
  59:src/Riscv.cpp ****     }
  60:src/Riscv.cpp ****     else if (syscode==MEM_GET_LARGEST_FREE_BLOCK) {
 268              		.loc 1 60 10
 269              	.LBB133:
 270              	.LBB122:
 271              	.LBB114:
 272              	.LBB102:
 273              	.LBB94:
 274              	.LBB87:
 275              	.LBB61:
 276 00d4 13074000 		li	a4,4
 277 00d8 6380E716 		beq	a5,a4,.L27
 278              	.LBE61:
 279              	.LBE87:
 280              	.LBE94:
 281              	.LBE102:
 282              	.LBE114:
 283              	.LBE122:
 284              	.LBE133:
  61:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
  62:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
  63:src/Riscv.cpp ****     }
  64:src/Riscv.cpp ****     else if (syscode==THREAD_CREATE) {
 285              		.loc 1 64 10
 286              	.LBB134:
 287              	.LBB123:
 288              	.LBB115:
 289              	.LBB103:
 290              	.LBB95:
 291              	.LBB88:
 292              	.LBB80:
 293              	.LBB62:
 294 00dc 13071001 		li	a4,17
 295 00e0 6388E716 		beq	a5,a4,.L28
 296              	.LBE62:
 297              	.LBE80:
 298              	.LBE88:
 299              	.LBE95:
 300              	.LBE103:
 301              	.LBE115:
 302              	.LBE123:
 303              	.LBE134:
GAS LISTING /tmp/ccqtESKb.s 			page 10


  65:src/Riscv.cpp ****         thread_t* handle;
  66:src/Riscv.cpp ****         Body start_routine;
  67:src/Riscv.cpp ****         void* arg;
  68:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
  69:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
  70:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
  71:src/Riscv.cpp **** 
  72:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
  73:src/Riscv.cpp **** 
  74:src/Riscv.cpp **** 
  75:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
  76:src/Riscv.cpp ****         int ret=0;
  77:src/Riscv.cpp ****         if (*handle) {
  78:src/Riscv.cpp ****             ret=0;
  79:src/Riscv.cpp ****         }
  80:src/Riscv.cpp ****         else {
  81:src/Riscv.cpp ****             ret=1;
  82:src/Riscv.cpp ****         }
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
  84:src/Riscv.cpp ****     }
  85:src/Riscv.cpp ****     else if (syscode==THREAD_EXIT) {
 304              		.loc 1 85 10
 305              	.LBB135:
 306              	.LBB124:
 307              	.LBB116:
 308              	.LBB104:
 309              	.LBB96:
 310              	.LBB89:
 311              	.LBB81:
 312              	.LBB76:
 313              	.LBB63:
 314 00e4 13072001 		li	a4,18
 315 00e8 638CE71A 		beq	a5,a4,.L29
 316              	.LBE63:
 317              	.LBE76:
 318              	.LBE81:
 319              	.LBE89:
 320              	.LBE96:
 321              	.LBE104:
 322              	.LBE116:
 323              	.LBE124:
 324              	.LBE135:
  86:src/Riscv.cpp ****         int ret = TCB::exit();
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
  88:src/Riscv.cpp ****     }
  89:src/Riscv.cpp ****     else if (syscode==THREAD_DISPATCH) {
 325              		.loc 1 89 10
 326              	.LBB136:
 327              	.LBB125:
 328              	.LBB117:
 329              	.LBB105:
 330              	.LBB97:
 331              	.LBB90:
 332              	.LBB82:
 333              	.LBB77:
 334              	.LBB72:
 335              	.LBB64:
GAS LISTING /tmp/ccqtESKb.s 			page 11


 336 00ec 13073001 		li	a4,19
 337 00f0 6380E71C 		beq	a5,a4,.L30
 338              	.LBB65:
  90:src/Riscv.cpp ****         TCB::dispatch();
  91:src/Riscv.cpp ****     }
  92:src/Riscv.cpp ****     else {
  93:src/Riscv.cpp ****         uint64 scause= get_scause();
 339              		.loc 1 93 9
 340              	.LBB66:
 341              	.LBB67:
  77:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 342              		.loc 3 77 5
  78:src/../h/Riscv.hpp ****     return scause;
 343              		.loc 3 78 5
  78:src/../h/Riscv.hpp ****     return scause;
 344              		.loc 3 78 68 is_stmt 0
 345              	#APP
 346              	# 78 "src/../h/Riscv.hpp" 1
 347              		csrr a5, scause
 348              	# 0 "" 2
 349              	.LVL11:
 350              	#NO_APP
 351 00f8 233CF4FA 		sd	a5,-72(s0)
  79:src/../h/Riscv.hpp **** }
 352              		.loc 3 79 5 is_stmt 1
  79:src/../h/Riscv.hpp **** }
 353              		.loc 3 79 12 is_stmt 0
 354 00fc 033A84FB 		ld	s4,-72(s0)
 355              	.LVL12:
 356              	.LBE67:
 357              	.LBE66:
  94:src/Riscv.cpp ****         uint64 stval= get_stval();
 358              		.loc 1 94 9 is_stmt 1
 359              	.LBB68:
 360              	.LBB69:
  82:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
 361              		.loc 3 82 5
  83:src/../h/Riscv.hpp ****     return stval;
 362              		.loc 3 83 5
  83:src/../h/Riscv.hpp ****     return stval;
 363              		.loc 3 83 64 is_stmt 0
 364              	#APP
 365              	# 83 "src/../h/Riscv.hpp" 1
 366              		csrr a5, stval
 367              	# 0 "" 2
 368              	#NO_APP
 369 0104 2338F4FA 		sd	a5,-80(s0)
  84:src/../h/Riscv.hpp **** }
 370              		.loc 3 84 5 is_stmt 1
  84:src/../h/Riscv.hpp **** }
 371              		.loc 3 84 12 is_stmt 0
 372 0108 833904FB 		ld	s3,-80(s0)
 373              	.LVL13:
 374              	.LBE69:
 375              	.LBE68:
  95:src/Riscv.cpp ****         printString("scause:");
 376              		.loc 1 95 9 is_stmt 1
GAS LISTING /tmp/ccqtESKb.s 			page 12


 377              		.loc 1 95 20 is_stmt 0
 378 010c 17050000 		lla	a0,.LC0
 378      13050500 
 379 0114 97000000 		call	_Z11printStringPKc@plt
 379      E7800000 
 380              	.LVL14:
  96:src/Riscv.cpp ****         printInteger(scause);
 381              		.loc 1 96 9 is_stmt 1
 382              		.loc 1 96 21 is_stmt 0
 383 011c 13050A00 		mv	a0,s4
 384 0120 97000000 		call	_Z12printIntegerm@plt
 384      E7800000 
 385              	.LVL15:
  97:src/Riscv.cpp ****         printString("\n");
 386              		.loc 1 97 9 is_stmt 1
 387              		.loc 1 97 20 is_stmt 0
 388 0128 17050000 		lla	a0,.LC1
 388      13050500 
 389 0130 97000000 		call	_Z11printStringPKc@plt
 389      E7800000 
 390              	.LVL16:
  98:src/Riscv.cpp **** 
  99:src/Riscv.cpp ****         printString("stval:");
 391              		.loc 1 99 9 is_stmt 1
 392              		.loc 1 99 20 is_stmt 0
 393 0138 17050000 		lla	a0,.LC2
 393      13050500 
 394 0140 97000000 		call	_Z11printStringPKc@plt
 394      E7800000 
 395              	.LVL17:
 100:src/Riscv.cpp ****         printInteger(stval);
 396              		.loc 1 100 9 is_stmt 1
 397              		.loc 1 100 21 is_stmt 0
 398 0148 13850900 		mv	a0,s3
 399 014c 97000000 		call	_Z12printIntegerm@plt
 399      E7800000 
 400              	.LVL18:
 101:src/Riscv.cpp ****         printString("\n");
 401              		.loc 1 101 9 is_stmt 1
 402              		.loc 1 101 20 is_stmt 0
 403 0154 17050000 		lla	a0,.LC1
 403      13050500 
 404 015c 97000000 		call	_Z11printStringPKc@plt
 404      E7800000 
 405              	.LVL19:
 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp ****         printString("sepc:");
 406              		.loc 1 103 9 is_stmt 1
 407              		.loc 1 103 20 is_stmt 0
 408 0164 17050000 		lla	a0,.LC3
 408      13050500 
 409 016c 97000000 		call	_Z11printStringPKc@plt
 409      E7800000 
 410              	.LVL20:
 104:src/Riscv.cpp ****         printInteger(sepc);
 411              		.loc 1 104 9 is_stmt 1
 412              		.loc 1 104 21 is_stmt 0
GAS LISTING /tmp/ccqtESKb.s 			page 13


 413 0174 13850400 		mv	a0,s1
 414 0178 97000000 		call	_Z12printIntegerm@plt
 414      E7800000 
 415              	.LVL21:
 105:src/Riscv.cpp ****         printString("\n");
 416              		.loc 1 105 9 is_stmt 1
 417              		.loc 1 105 20 is_stmt 0
 418 0180 17050000 		lla	a0,.LC1
 418      13050500 
 419 0188 97000000 		call	_Z11printStringPKc@plt
 419      E7800000 
 420              	.LVL22:
 106:src/Riscv.cpp ****         __getc();
 421              		.loc 1 106 9 is_stmt 1
 422              		.loc 1 106 15 is_stmt 0
 423 0190 97000000 		call	__getc@plt
 423      E7800000 
 424              	.LVL23:
 425 0198 6F008003 		j	.L12
 426              	.LVL24:
 427              	.L22:
 428              	.LBE65:
 429              	.LBE64:
 430              	.LBE72:
 431              	.LBE77:
 432              	.LBE82:
 433              	.LBE90:
 434              	.LBE97:
 435              	.LBE105:
 436              	.LBE117:
 437              	.LBE125:
  34:src/Riscv.cpp ****     }
 438              		.loc 1 34 9 is_stmt 1
 439              	.LBB126:
 440              	.LBB127:
  92:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
  93:src/../h/Riscv.hpp **** {
  94:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]":: [mask]"r"(mask));
 441              		.loc 3 94 5
 442              		.loc 3 94 60 is_stmt 0
 443 019c 93072000 		li	a5,2
 444              	#APP
 445              	# 94 "src/../h/Riscv.hpp" 1
  95              	}
 446              		csrc sip, a5
 447              	# 0 "" 2
 448              		.loc 3 95 1
 449              	#NO_APP
 450 01a4 6F008003 		j	.L7
 451              	.LVL25:
 452              	.L23:
 453              	.LBE127:
 454              	.LBE126:
 455              	.LBB128:
  38:src/Riscv.cpp ****     }
 456              		.loc 1 38 9 is_stmt 1
  38:src/Riscv.cpp ****     }
GAS LISTING /tmp/ccqtESKb.s 			page 14


 457              		.loc 1 38 24 is_stmt 0
 458 01a8 97000000 		call	console_handler@plt
 458      E7800000 
 459              	.LVL26:
 460 01b0 6F00C002 		j	.L7
 461              	.LVL27:
 462              	.L24:
 463              	.LBB118:
 464              	.LBB106:
 465              	.LBB98:
  45:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
 466              		.loc 1 45 9 is_stmt 1
  46:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 467              		.loc 1 46 9
  46:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 468              		.loc 1 46 69 is_stmt 0
 469              	#APP
 470              	# 46 "src/Riscv.cpp" 1
 471              		mv s3, a1
 472              	# 0 "" 2
 473              	.LVL28:
  47:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 474              		.loc 1 47 9 is_stmt 1
  47:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 475              		.loc 1 47 59 is_stmt 0
 476              	#NO_APP
 477 01b8 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 477      E7800000 
 478              	.LVL29:
 479 01c0 93952900 		slli	a1,s3,2
 480 01c4 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 480      E7800000 
 481              	.LVL30:
  48:src/Riscv.cpp ****     }
 482              		.loc 1 48 9 is_stmt 1
  48:src/Riscv.cpp ****     }
 483              		.loc 1 48 57 is_stmt 0
 484              	#APP
 485              	# 48 "src/Riscv.cpp" 1
 486              		mv a0,a0
 487              	# 0 "" 2
 488              	.LVL31:
 489              	#NO_APP
 490              	.L12:
 491              	.LBE98:
 492              	.LBE106:
 107:src/Riscv.cpp ****     }
 108:src/Riscv.cpp ****     set_sepc(sepc+4);
 493              		.loc 1 108 5 is_stmt 1
 494              		.loc 1 108 13 is_stmt 0
 495 01d0 93844400 		addi	s1,s1,4
 496              	.LVL32:
 497              	.LBB107:
 498              	.LBB108:
  57:src/../h/Riscv.hpp **** }
 499              		.loc 3 57 5 is_stmt 1
  57:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccqtESKb.s 			page 15


 500              		.loc 3 57 59 is_stmt 0
 501              	#APP
 502              	# 57 "src/../h/Riscv.hpp" 1
 503              		csrw sepc, s1
 504              	# 0 "" 2
 505              	.LVL33:
 506              	#NO_APP
 507              	.LBE108:
 508              	.LBE107:
 109:src/Riscv.cpp ****     set_sstatus(sstatus);
 509              		.loc 1 109 5 is_stmt 1
 510              	.LBB109:
 511              	.LBB110:
  67:src/../h/Riscv.hpp **** }
 512              		.loc 3 67 5
  67:src/../h/Riscv.hpp **** }
 513              		.loc 3 67 65 is_stmt 0
 514              	#APP
 515              	# 67 "src/../h/Riscv.hpp" 1
 516              		csrw sstatus, s2
 517              	# 0 "" 2
 518              	.LVL34:
 519              	#NO_APP
 520              	.L7:
 521              	.LBE110:
 522              	.LBE109:
 523              	.LBE118:
 524              	.LBE128:
 525              	.LBE136:
 110:src/Riscv.cpp ****     }
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp **** 
 113:src/Riscv.cpp **** }...
 526              		.loc 1 113 1
 527 01dc 83308105 		ld	ra,88(sp)
 528              		.cfi_remember_state
 529              		.cfi_restore 1
 530 01e0 03340105 		ld	s0,80(sp)
 531              		.cfi_restore 8
 532              		.cfi_def_cfa 2, 96
 533 01e4 83348104 		ld	s1,72(sp)
 534              		.cfi_restore 9
 535 01e8 03390104 		ld	s2,64(sp)
 536              		.cfi_restore 18
 537              	.LVL35:
 538 01ec 83398103 		ld	s3,56(sp)
 539              		.cfi_restore 19
 540 01f0 033A0103 		ld	s4,48(sp)
 541              		.cfi_restore 20
 542 01f4 833A8102 		ld	s5,40(sp)
 543              		.cfi_restore 21
 544 01f8 13010106 		addi	sp,sp,96
 545              		.cfi_def_cfa_offset 0
 546 01fc 67800000 		jr	ra
 547              	.LVL36:
 548              	.L25:
 549              		.cfi_restore_state
GAS LISTING /tmp/ccqtESKb.s 			page 16


 550              	.LBB137:
 551              	.LBB129:
 552              	.LBB119:
 553              	.LBB111:
 554              	.LBB99:
 555              	.LBB91:
  51:src/Riscv.cpp ****         void* ptr;
 556              		.loc 1 51 9 is_stmt 1
  52:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 557              		.loc 1 52 9
  52:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 558              		.loc 1 52 58 is_stmt 0
 559              	#APP
 560              	# 52 "src/Riscv.cpp" 1
 561              		mv s3, a1
 562              	# 0 "" 2
 563              	.LVL37:
  53:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 564              		.loc 1 53 9 is_stmt 1
  53:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 565              		.loc 1 53 46 is_stmt 0
 566              	#NO_APP
 567 0204 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 567      E7800000 
 568              	.LVL38:
 569 020c 93850900 		mv	a1,s3
 570 0210 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 570      E7800000 
 571              	.LVL39:
  54:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 572              		.loc 1 54 9 is_stmt 1
  54:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 573              		.loc 1 54 56 is_stmt 0
 574 0218 93070000 		li	a5,0
 575              	#APP
 576              	# 54 "src/Riscv.cpp" 1
 577              		mv a0, a5
 578              	# 0 "" 2
 579              	#NO_APP
 580              	.LBE91:
 581 0220 6FF01FFB 		j	.L12
 582              	.LVL40:
 583              	.L26:
 584              	.LBB92:
 585              	.LBB83:
  57:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 586              		.loc 1 57 9 is_stmt 1
  57:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 587              		.loc 1 57 69 is_stmt 0
 588 0224 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 588      E7800000 
 589              	.LVL41:
 590              	.LBB84:
 591              	.LBB85:
 592              		.file 4 "src/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/MemoryAllocator.hpp **** 
   2:src/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
GAS LISTING /tmp/ccqtESKb.s 			page 17


   3:src/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   4:src/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   6:src/../h/../h/MemoryAllocator.hpp **** 
   7:src/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
   8:src/../h/../h/MemoryAllocator.hpp **** public:
   9:src/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator* Instance();
  10:src/../h/../h/MemoryAllocator.hpp **** 
  11:src/../h/../h/MemoryAllocator.hpp ****     void* mem_alloc(size_t size);//size in bytes
  12:src/../h/../h/MemoryAllocator.hpp **** 
  13:src/../h/../h/MemoryAllocator.hpp ****     void mem_free(void* ptr);
  14:src/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/MemoryAllocator.hpp ****     size_t getFreeMemSize() {
  16:src/../h/../h/MemoryAllocator.hpp ****         return this->freeMemSize;
 593              		.loc 4 16 9 is_stmt 1
 594              		.loc 4 16 22 is_stmt 0
 595 022c 83378500 		ld	a5,8(a0)
 596              	.LVL42:
 597              	.LBE85:
 598              	.LBE84:
  58:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 599              		.loc 1 58 9 is_stmt 1
  58:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 600              		.loc 1 58 62 is_stmt 0
 601              	#APP
 602              	# 58 "src/Riscv.cpp" 1
 603              		mv a0, a5
 604              	# 0 "" 2
 605              	#NO_APP
 606              	.LBE83:
 607 0234 6FF0DFF9 		j	.L12
 608              	.LVL43:
 609              	.L27:
 610              	.LBB86:
 611              	.LBB78:
  61:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 612              		.loc 1 61 9 is_stmt 1
  61:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 613              		.loc 1 61 79 is_stmt 0
 614 0238 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 614      E7800000 
 615              	.LVL44:
 616 0240 97000000 		call	_ZN15MemoryAllocator19getLargestFreeBlockEv@plt
 616      E7800000 
 617              	.LVL45:
  62:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 618              		.loc 1 62 9 is_stmt 1
  62:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 619              		.loc 1 62 67 is_stmt 0
 620              	#APP
 621              	# 62 "src/Riscv.cpp" 1
 622              		mv a0, a0
 623              	# 0 "" 2
 624              	#NO_APP
 625              	.LBE78:
 626 024c 6FF05FF8 		j	.L12
 627              	.LVL46:
GAS LISTING /tmp/ccqtESKb.s 			page 18


 628              	.L28:
 629              	.LBB79:
 630              	.LBB73:
  65:src/Riscv.cpp ****         thread_t* handle;
 631              		.loc 1 65 9 is_stmt 1
  66:src/Riscv.cpp ****         Body start_routine;
 632              		.loc 1 66 9
  67:src/Riscv.cpp ****         void* arg;
 633              		.loc 1 67 9
  68:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 634              		.loc 1 68 9
  68:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 635              		.loc 1 68 61 is_stmt 0
 636              	#APP
 637              	# 68 "src/Riscv.cpp" 1
 638              		mv s3, a1
 639              	# 0 "" 2
 640              	.LVL47:
  69:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 641              		.loc 1 69 9 is_stmt 1
  69:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 642              		.loc 1 69 68 is_stmt 0
 643              	# 69 "src/Riscv.cpp" 1
 644              		mv s4, a2
 645              	# 0 "" 2
 646              	.LVL48:
  70:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 647              		.loc 1 70 9 is_stmt 1
  70:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 648              		.loc 1 70 58 is_stmt 0
 649              	# 70 "src/Riscv.cpp" 1
 650              		mv s5, a3
 651              	# 0 "" 2
 652              	.LVL49:
  72:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 653              		.loc 1 72 9 is_stmt 1
  72:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 654              		.loc 1 72 67 is_stmt 0
 655              	#NO_APP
 656 025c 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 656      E7800000 
 657              	.LVL50:
 658 0264 B7150000 		li	a1,4096
 659 0268 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 659      E7800000 
 660              	.LVL51:
 661 0270 13060500 		mv	a2,a0
 662              	.LVL52:
  75:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 663              		.loc 1 75 9 is_stmt 1
  75:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 664              		.loc 1 75 34 is_stmt 0
 665 0274 93850A00 		mv	a1,s5
 666 0278 13050A00 		mv	a0,s4
 667              	.LVL53:
 668 027c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 668      E7800000 
GAS LISTING /tmp/ccqtESKb.s 			page 19


 669              	.LVL54:
  75:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 670              		.loc 1 75 16
 671 0284 23B0A900 		sd	a0,0(s3)
  76:src/Riscv.cpp ****         int ret=0;
 672              		.loc 1 76 9 is_stmt 1
 673              	.LVL55:
  77:src/Riscv.cpp ****         if (*handle) {
 674              		.loc 1 77 9
 675 0288 63080500 		beqz	a0,.L20
  78:src/Riscv.cpp ****             ret=0;
 676              		.loc 1 78 16 is_stmt 0
 677 028c 93070000 		li	a5,0
 678              	.L17:
 679              	.LVL56:
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 680              		.loc 1 83 9 is_stmt 1
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 681              		.loc 1 83 58 is_stmt 0
 682              	#APP
 683              	# 83 "src/Riscv.cpp" 1
 684              		mv a0, a5
 685              	# 0 "" 2
 686              	#NO_APP
 687              	.LBE73:
 688 0294 6FF0DFF3 		j	.L12
 689              	.LVL57:
 690              	.L20:
 691              	.LBB74:
  81:src/Riscv.cpp ****             ret=1;
 692              		.loc 1 81 16
 693 0298 93071000 		li	a5,1
 694 029c 6FF05FFF 		j	.L17
 695              	.LVL58:
 696              	.L29:
 697              	.LBE74:
 698              	.LBB75:
 699              	.LBB70:
  86:src/Riscv.cpp ****         int ret = TCB::exit();
 700              		.loc 1 86 9 is_stmt 1
  86:src/Riscv.cpp ****         int ret = TCB::exit();
 701              		.loc 1 86 28 is_stmt 0
 702 02a0 97000000 		call	_ZN3TCB4exitEv@plt
 702      E7800000 
 703              	.LVL59:
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 704              		.loc 1 87 9 is_stmt 1
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 705              		.loc 1 87 58 is_stmt 0
 706              	#APP
 707              	# 87 "src/Riscv.cpp" 1
 708              		mv a0, a0
 709              	# 0 "" 2
 710              	#NO_APP
 711              	.LBE70:
 712 02ac 6FF05FF2 		j	.L12
 713              	.LVL60:
GAS LISTING /tmp/ccqtESKb.s 			page 20


 714              	.L30:
 715              	.LBB71:
  90:src/Riscv.cpp ****         TCB::dispatch();
 716              		.loc 1 90 9 is_stmt 1
  90:src/Riscv.cpp ****         TCB::dispatch();
 717              		.loc 1 90 22 is_stmt 0
 718 02b0 97000000 		call	_ZN3TCB8dispatchEv@plt
 718      E7800000 
 719              	.LVL61:
 720 02b8 6FF09FF1 		j	.L12
 721              	.LBE71:
 722              	.LBE75:
 723              	.LBE79:
 724              	.LBE86:
 725              	.LBE92:
 726              	.LBE99:
 727              	.LBE111:
 728              	.LBE119:
 729              	.LBE129:
 730              	.LBE137:
 731              		.cfi_endproc
 732              	.LFE29:
 734              	.Letext0:
 735              		.file 5 "src/../h/../lib/hw.h"
 736              		.file 6 "src/../h/syscall_c.hpp"
 737              		.file 7 "src/../h/print.hpp"
 738              		.file 8 "src/../lib/console.h"
GAS LISTING /tmp/ccqtESKb.s 			page 21


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccqtESKb.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccqtESKb.s:13     .text:0000000000000000 .L0 
     /tmp/ccqtESKb.s:14     .text:0000000000000000 .L0 
     /tmp/ccqtESKb.s:15     .text:0000000000000004 .L0 
     /tmp/ccqtESKb.s:17     .text:0000000000000008 .L0 
     /tmp/ccqtESKb.s:19     .text:000000000000000c .L0 
     /tmp/ccqtESKb.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:13     .text:000000000000000c .L0 
     /tmp/ccqtESKb.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:14     .text:0000000000000010 .L0 
     /tmp/ccqtESKb.s:33     .text:0000000000000014 .L0 
     /tmp/ccqtESKb.s:34     .text:0000000000000018 .L0 
     /tmp/ccqtESKb.s:35     .text:0000000000000018 .L0 
     /tmp/ccqtESKb.s:37     .text:000000000000001c .L0 
     /tmp/ccqtESKb.s:39     .text:0000000000000020 .L0 
     /tmp/ccqtESKb.s:45     .text:0000000000000020 _ZN5Riscv16restorePrivilegeEv
     /tmp/ccqtESKb.s:48     .text:0000000000000020 .L0 
     /tmp/ccqtESKb.s:49     .text:0000000000000020 .L0 
     /tmp/ccqtESKb.s:50     .text:0000000000000024 .L0 
     /tmp/ccqtESKb.s:52     .text:0000000000000028 .L0 
     /tmp/ccqtESKb.s:54     .text:000000000000002c .L0 
     /tmp/ccqtESKb.s:56     .text:000000000000002c .L0 
     /tmp/ccqtESKb.s:57     .text:000000000000002c .L0 
     /tmp/ccqtESKb.s:64     .text:0000000000000038 .L0 
     /tmp/ccqtESKb.s:65     .text:0000000000000038 .L0 
     /tmp/ccqtESKb.s:70     .text:000000000000003c .L0 
     /tmp/ccqtESKb.s:76     .text:0000000000000040 .L0 
     /tmp/ccqtESKb.s:77     .text:0000000000000040 .L0 
     /tmp/ccqtESKb.s:78     .text:0000000000000040 .L0 
     /tmp/ccqtESKb.s:89     .text:0000000000000048 .L0 
     /tmp/ccqtESKb.s:90     .text:000000000000004c .L0 
     /tmp/ccqtESKb.s:91     .text:000000000000004c .L0 
     /tmp/ccqtESKb.s:92     .text:000000000000004c .L0 
     /tmp/ccqtESKb.s:94     .text:0000000000000050 .L0 
     /tmp/ccqtESKb.s:97     .text:0000000000000054 .L0 
     /tmp/ccqtESKb.s:102    .text:0000000000000054 .L0 
     /tmp/ccqtESKb.s:103    .text:0000000000000054 .L0 
     /tmp/ccqtESKb.s:104    .text:0000000000000054 .L0 
     /tmp/ccqtESKb.s:114    .text:000000000000005c .L0 
     /tmp/ccqtESKb.s:115    .text:0000000000000060 .L0 
     /tmp/ccqtESKb.s:135    .text:0000000000000060 _ZN5Riscv21SupervisorTrapHandlerEv
     /tmp/ccqtESKb.s:138    .text:0000000000000060 .L0 
     /tmp/ccqtESKb.s:139    .text:0000000000000060 .L0 
     /tmp/ccqtESKb.s:140    .text:0000000000000064 .L0 
     /tmp/ccqtESKb.s:148    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:149    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:150    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:151    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:152    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:153    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:154    .text:0000000000000080 .L0 
     /tmp/ccqtESKb.s:156    .text:0000000000000084 .L0 
     /tmp/ccqtESKb.s:158    .text:0000000000000084 .L0 
     /tmp/ccqtESKb.s:159    .text:0000000000000084 .L0 
     /tmp/ccqtESKb.s:162    .text:0000000000000084 .L0 
GAS LISTING /tmp/ccqtESKb.s 			page 22


     /tmp/ccqtESKb.s:163    .text:0000000000000084 .L0 
     /tmp/ccqtESKb.s:164    .text:0000000000000084 .L0 
  src/../h/Riscv.hpp:78     .text:0000000000000084 .L0 
     /tmp/ccqtESKb.s:172    .text:000000000000008c .L0 
     /tmp/ccqtESKb.s:173    .text:000000000000008c .L0 
     /tmp/ccqtESKb.s:180    .text:0000000000000090 .L0 
     /tmp/ccqtESKb.s:181    .text:0000000000000090 .L0 
     /tmp/ccqtESKb.s:182    .text:0000000000000090 .L0 
  src/../h/Riscv.hpp:62     .text:0000000000000090 .L0 
     /tmp/ccqtESKb.s:192    .text:0000000000000094 .L0 
     /tmp/ccqtESKb.s:195    .text:0000000000000094 .L0 
     /tmp/ccqtESKb.s:196    .text:0000000000000094 .L0 
     /tmp/ccqtESKb.s:197    .text:0000000000000094 .L0 
  src/../h/Riscv.hpp:72     .text:0000000000000094 .L0 
     /tmp/ccqtESKb.s:207    .text:0000000000000098 .L0 
     /tmp/ccqtESKb.s:209    .text:0000000000000098 .L0 
     /tmp/ccqtESKb.s:217    .text:00000000000000a8 .L0 
     /tmp/ccqtESKb.s:223    .text:00000000000000b8 .L0 
     /tmp/ccqtESKb.s:224    .text:00000000000000b8 .L0 
       src/Riscv.cpp:42     .text:00000000000000b8 .L0 
     /tmp/ccqtESKb.s:233    .text:00000000000000bc .L0 
     /tmp/ccqtESKb.s:246    .text:00000000000000c4 .L0 
     /tmp/ccqtESKb.s:260    .text:00000000000000cc .L0 
     /tmp/ccqtESKb.s:276    .text:00000000000000d4 .L0 
     /tmp/ccqtESKb.s:294    .text:00000000000000dc .L0 
     /tmp/ccqtESKb.s:314    .text:00000000000000e4 .L0 
     /tmp/ccqtESKb.s:336    .text:00000000000000ec .L0 
     /tmp/ccqtESKb.s:342    .text:00000000000000f4 .L0 
     /tmp/ccqtESKb.s:343    .text:00000000000000f4 .L0 
     /tmp/ccqtESKb.s:344    .text:00000000000000f4 .L0 
  src/../h/Riscv.hpp:78     .text:00000000000000f4 .L0 
     /tmp/ccqtESKb.s:353    .text:00000000000000fc .L0 
     /tmp/ccqtESKb.s:354    .text:00000000000000fc .L0 
     /tmp/ccqtESKb.s:361    .text:0000000000000100 .L0 
     /tmp/ccqtESKb.s:362    .text:0000000000000100 .L0 
     /tmp/ccqtESKb.s:363    .text:0000000000000100 .L0 
  src/../h/Riscv.hpp:83     .text:0000000000000100 .L0 
     /tmp/ccqtESKb.s:371    .text:0000000000000108 .L0 
     /tmp/ccqtESKb.s:372    .text:0000000000000108 .L0 
     /tmp/ccqtESKb.s:377    .text:000000000000010c .L0 
     /tmp/ccqtESKb.s:378    .text:000000000000010c .L0 
     /tmp/ccqtESKb.s:382    .text:000000000000011c .L0 
     /tmp/ccqtESKb.s:383    .text:000000000000011c .L0 
     /tmp/ccqtESKb.s:387    .text:0000000000000128 .L0 
     /tmp/ccqtESKb.s:388    .text:0000000000000128 .L0 
     /tmp/ccqtESKb.s:392    .text:0000000000000138 .L0 
     /tmp/ccqtESKb.s:393    .text:0000000000000138 .L0 
     /tmp/ccqtESKb.s:397    .text:0000000000000148 .L0 
     /tmp/ccqtESKb.s:398    .text:0000000000000148 .L0 
     /tmp/ccqtESKb.s:402    .text:0000000000000154 .L0 
     /tmp/ccqtESKb.s:403    .text:0000000000000154 .L0 
     /tmp/ccqtESKb.s:407    .text:0000000000000164 .L0 
     /tmp/ccqtESKb.s:408    .text:0000000000000164 .L0 
     /tmp/ccqtESKb.s:412    .text:0000000000000174 .L0 
     /tmp/ccqtESKb.s:413    .text:0000000000000174 .L0 
     /tmp/ccqtESKb.s:417    .text:0000000000000180 .L0 
     /tmp/ccqtESKb.s:418    .text:0000000000000180 .L0 
GAS LISTING /tmp/ccqtESKb.s 			page 23


     /tmp/ccqtESKb.s:422    .text:0000000000000190 .L0 
     /tmp/ccqtESKb.s:423    .text:0000000000000190 .L0 
     /tmp/ccqtESKb.s:441    .text:000000000000019c .L0 
     /tmp/ccqtESKb.s:442    .text:000000000000019c .L0 
     /tmp/ccqtESKb.s:443    .text:000000000000019c .L0 
     /tmp/ccqtESKb.s:450    .text:00000000000001a4 .L0 
     /tmp/ccqtESKb.s:457    .text:00000000000001a8 .L0 
     /tmp/ccqtESKb.s:458    .text:00000000000001a8 .L0 
     /tmp/ccqtESKb.s:467    .text:00000000000001b4 .L0 
     /tmp/ccqtESKb.s:468    .text:00000000000001b4 .L0 
       src/Riscv.cpp:46     .text:00000000000001b4 .L0 
     /tmp/ccqtESKb.s:475    .text:00000000000001b8 .L0 
     /tmp/ccqtESKb.s:477    .text:00000000000001b8 .L0 
     /tmp/ccqtESKb.s:483    .text:00000000000001cc .L0 
       src/Riscv.cpp:48     .text:00000000000001cc .L0 
     /tmp/ccqtESKb.s:494    .text:00000000000001d0 .L0 
     /tmp/ccqtESKb.s:495    .text:00000000000001d0 .L0 
     /tmp/ccqtESKb.s:500    .text:00000000000001d4 .L0 
  src/../h/Riscv.hpp:57     .text:00000000000001d4 .L0 
     /tmp/ccqtESKb.s:512    .text:00000000000001d8 .L0 
     /tmp/ccqtESKb.s:513    .text:00000000000001d8 .L0 
  src/../h/Riscv.hpp:67     .text:00000000000001d8 .L0 
     /tmp/ccqtESKb.s:527    .text:00000000000001dc .L0 
     /tmp/ccqtESKb.s:528    .text:00000000000001e0 .L0 
     /tmp/ccqtESKb.s:529    .text:00000000000001e0 .L0 
     /tmp/ccqtESKb.s:531    .text:00000000000001e4 .L0 
     /tmp/ccqtESKb.s:532    .text:00000000000001e4 .L0 
     /tmp/ccqtESKb.s:534    .text:00000000000001e8 .L0 
     /tmp/ccqtESKb.s:536    .text:00000000000001ec .L0 
     /tmp/ccqtESKb.s:539    .text:00000000000001f0 .L0 
     /tmp/ccqtESKb.s:541    .text:00000000000001f4 .L0 
     /tmp/ccqtESKb.s:543    .text:00000000000001f8 .L0 
     /tmp/ccqtESKb.s:545    .text:00000000000001fc .L0 
     /tmp/ccqtESKb.s:549    .text:0000000000000200 .L0 
     /tmp/ccqtESKb.s:557    .text:0000000000000200 .L0 
     /tmp/ccqtESKb.s:558    .text:0000000000000200 .L0 
       src/Riscv.cpp:52     .text:0000000000000200 .L0 
     /tmp/ccqtESKb.s:565    .text:0000000000000204 .L0 
     /tmp/ccqtESKb.s:567    .text:0000000000000204 .L0 
     /tmp/ccqtESKb.s:573    .text:0000000000000218 .L0 
     /tmp/ccqtESKb.s:574    .text:0000000000000218 .L0 
     /tmp/ccqtESKb.s:587    .text:0000000000000224 .L0 
     /tmp/ccqtESKb.s:588    .text:0000000000000224 .L0 
     /tmp/ccqtESKb.s:594    .text:000000000000022c .L0 
     /tmp/ccqtESKb.s:595    .text:000000000000022c .L0 
     /tmp/ccqtESKb.s:600    .text:0000000000000230 .L0 
       src/Riscv.cpp:58     .text:0000000000000230 .L0 
     /tmp/ccqtESKb.s:613    .text:0000000000000238 .L0 
     /tmp/ccqtESKb.s:614    .text:0000000000000238 .L0 
     /tmp/ccqtESKb.s:619    .text:0000000000000248 .L0 
       src/Riscv.cpp:62     .text:0000000000000248 .L0 
     /tmp/ccqtESKb.s:632    .text:0000000000000250 .L0 
     /tmp/ccqtESKb.s:633    .text:0000000000000250 .L0 
     /tmp/ccqtESKb.s:634    .text:0000000000000250 .L0 
     /tmp/ccqtESKb.s:635    .text:0000000000000250 .L0 
       src/Riscv.cpp:68     .text:0000000000000250 .L0 
     /tmp/ccqtESKb.s:642    .text:0000000000000254 .L0 
GAS LISTING /tmp/ccqtESKb.s 			page 24


       src/Riscv.cpp:69     .text:0000000000000254 .L0 
     /tmp/ccqtESKb.s:648    .text:0000000000000258 .L0 
       src/Riscv.cpp:70     .text:0000000000000258 .L0 
     /tmp/ccqtESKb.s:654    .text:000000000000025c .L0 
     /tmp/ccqtESKb.s:656    .text:000000000000025c .L0 
     /tmp/ccqtESKb.s:664    .text:0000000000000274 .L0 
     /tmp/ccqtESKb.s:665    .text:0000000000000274 .L0 
     /tmp/ccqtESKb.s:671    .text:0000000000000284 .L0 
     /tmp/ccqtESKb.s:674    .text:0000000000000288 .L0 
     /tmp/ccqtESKb.s:675    .text:0000000000000288 .L0 
     /tmp/ccqtESKb.s:677    .text:000000000000028c .L0 
     /tmp/ccqtESKb.s:681    .text:0000000000000290 .L0 
       src/Riscv.cpp:83     .text:0000000000000290 .L0 
     /tmp/ccqtESKb.s:693    .text:0000000000000298 .L0 
     /tmp/ccqtESKb.s:701    .text:00000000000002a0 .L0 
     /tmp/ccqtESKb.s:702    .text:00000000000002a0 .L0 
     /tmp/ccqtESKb.s:705    .text:00000000000002a8 .L0 
       src/Riscv.cpp:87     .text:00000000000002a8 .L0 
     /tmp/ccqtESKb.s:717    .text:00000000000002b0 .L0 
     /tmp/ccqtESKb.s:718    .text:00000000000002b0 .L0 
     /tmp/ccqtESKb.s:731    .text:00000000000002bc .L0 
     /tmp/ccqtESKb.s:739    .text:00000000000002bc .L0 
     /tmp/ccqtESKb.s:57     .text:000000000000002c .L0 
     /tmp/ccqtESKb.s:120    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccqtESKb.s:378    .text:000000000000010c .L0 
     /tmp/ccqtESKb.s:123    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccqtESKb.s:388    .text:0000000000000128 .L0 
     /tmp/ccqtESKb.s:126    .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccqtESKb.s:393    .text:0000000000000138 .L0 
     /tmp/ccqtESKb.s:403    .text:0000000000000154 .L0 
     /tmp/ccqtESKb.s:129    .rodata.str1.8:0000000000000018 .LC3
     /tmp/ccqtESKb.s:408    .text:0000000000000164 .L0 
     /tmp/ccqtESKb.s:418    .text:0000000000000180 .L0 
     /tmp/ccqtESKb.s:96     .text:0000000000000054 .L4
     /tmp/ccqtESKb.s:85     .text:0000000000000048 .L3
     /tmp/ccqtESKb.s:427    .text:000000000000019c .L22
     /tmp/ccqtESKb.s:452    .text:00000000000001a8 .L23
     /tmp/ccqtESKb.s:462    .text:00000000000001b4 .L24
     /tmp/ccqtESKb.s:548    .text:0000000000000200 .L25
     /tmp/ccqtESKb.s:583    .text:0000000000000224 .L26
     /tmp/ccqtESKb.s:609    .text:0000000000000238 .L27
     /tmp/ccqtESKb.s:628    .text:0000000000000250 .L28
     /tmp/ccqtESKb.s:696    .text:00000000000002a0 .L29
     /tmp/ccqtESKb.s:714    .text:00000000000002b0 .L30
     /tmp/ccqtESKb.s:490    .text:00000000000001d0 .L12
     /tmp/ccqtESKb.s:520    .text:00000000000001dc .L7
     /tmp/ccqtESKb.s:690    .text:0000000000000298 .L20
     /tmp/ccqtESKb.s:678    .text:0000000000000290 .L17
     /tmp/ccqtESKb.s:2181   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccqtESKb.s:3514   .debug_str:000000000000066b .LASF129
     /tmp/ccqtESKb.s:3416   .debug_str:0000000000000379 .LASF130
     /tmp/ccqtESKb.s:3422   .debug_str:00000000000003b5 .LASF131
     /tmp/ccqtESKb.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccqtESKb.s:734    .text:00000000000002bc .Letext0
     /tmp/ccqtESKb.s:3284   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccqtESKb.s:3434   .debug_str:000000000000042e .LASF0
     /tmp/ccqtESKb.s:3452   .debug_str:0000000000000486 .LASF1
GAS LISTING /tmp/ccqtESKb.s 			page 25


     /tmp/ccqtESKb.s:3420   .debug_str:00000000000003a7 .LASF2
     /tmp/ccqtESKb.s:3376   .debug_str:0000000000000287 .LASF4
     /tmp/ccqtESKb.s:3492   .debug_str:00000000000005d0 .LASF3
     /tmp/ccqtESKb.s:3302   .debug_str:0000000000000056 .LASF5
     /tmp/ccqtESKb.s:3458   .debug_str:00000000000004bb .LASF6
     /tmp/ccqtESKb.s:3432   .debug_str:000000000000041b .LASF7
     /tmp/ccqtESKb.s:3532   .debug_str:00000000000007b0 .LASF8
     /tmp/ccqtESKb.s:3364   .debug_str:000000000000023d .LASF9
     /tmp/ccqtESKb.s:3470   .debug_str:000000000000051d .LASF10
     /tmp/ccqtESKb.s:3516   .debug_str:000000000000072f .LASF11
     /tmp/ccqtESKb.s:3306   .debug_str:0000000000000069 .LASF12
     /tmp/ccqtESKb.s:3290   .debug_str:0000000000000018 .LASF13
     /tmp/ccqtESKb.s:3310   .debug_str:0000000000000088 .LASF14
     /tmp/ccqtESKb.s:3488   .debug_str:00000000000005a2 .LASF15
     /tmp/ccqtESKb.s:3322   .debug_str:00000000000000cc .LASF16
     /tmp/ccqtESKb.s:3448   .debug_str:0000000000000475 .LASF55
     /tmp/ccqtESKb.s:3324   .debug_str:00000000000000e2 .LASF20
     /tmp/ccqtESKb.s:3318   .debug_str:00000000000000b6 .LASF17
     /tmp/ccqtESKb.s:3400   .debug_str:0000000000000317 .LASF18
     /tmp/ccqtESKb.s:3304   .debug_str:000000000000005d .LASF19
     /tmp/ccqtESKb.s:3396   .debug_str:00000000000002fe .LASF21
     /tmp/ccqtESKb.s:3502   .debug_str:0000000000000621 .LASF22
     /tmp/ccqtESKb.s:3446   .debug_str:000000000000046c .LASF23
     /tmp/ccqtESKb.s:3386   .debug_str:00000000000002c6 .LASF24
     /tmp/ccqtESKb.s:3518   .debug_str:000000000000073e .LASF25
     /tmp/ccqtESKb.s:3430   .debug_str:0000000000000405 .LASF27
     /tmp/ccqtESKb.s:3540   .debug_str:00000000000007f8 .LASF26
     /tmp/ccqtESKb.s:3494   .debug_str:00000000000005e2 .LASF28
     /tmp/ccqtESKb.s:3506   .debug_str:0000000000000642 .LASF31
     /tmp/ccqtESKb.s:3414   .debug_str:0000000000000364 .LASF33
     /tmp/ccqtESKb.s:3454   .debug_str:0000000000000499 .LASF29
     /tmp/ccqtESKb.s:3374   .debug_str:000000000000026e .LASF30
     /tmp/ccqtESKb.s:3498   .debug_str:000000000000060a .LASF32
     /tmp/ccqtESKb.s:3482   .debug_str:0000000000000571 .LASF34
     /tmp/ccqtESKb.s:3500   .debug_str:0000000000000616 .LASF35
     /tmp/ccqtESKb.s:3530   .debug_str:0000000000000798 .LASF36
     /tmp/ccqtESKb.s:3372   .debug_str:0000000000000264 .LASF37
     /tmp/ccqtESKb.s:3466   .debug_str:00000000000004f7 .LASF38
     /tmp/ccqtESKb.s:3556   .debug_str:00000000000008cb .LASF39
     /tmp/ccqtESKb.s:3490   .debug_str:00000000000005b8 .LASF40
     /tmp/ccqtESKb.s:3450   .debug_str:000000000000047b .LASF41
     /tmp/ccqtESKb.s:3504   .debug_str:000000000000062a .LASF42
     /tmp/ccqtESKb.s:3300   .debug_str:000000000000004f .LASF43
     /tmp/ccqtESKb.s:3496   .debug_str:00000000000005f7 .LASF44
     /tmp/ccqtESKb.s:3464   .debug_str:00000000000004f0 .LASF45
     /tmp/ccqtESKb.s:3544   .debug_str:0000000000000810 .LASF46
     /tmp/ccqtESKb.s:3542   .debug_str:0000000000000801 .LASF47
     /tmp/ccqtESKb.s:3472   .debug_str:000000000000052c .LASF49
     /tmp/ccqtESKb.s:3390   .debug_str:00000000000002d7 .LASF48
     /tmp/ccqtESKb.s:3350   .debug_str:00000000000001a7 .LASF50
     /tmp/ccqtESKb.s:3486   .debug_str:0000000000000597 .LASF51
     /tmp/ccqtESKb.s:3548   .debug_str:0000000000000845 .LASF52
     /tmp/ccqtESKb.s:3456   .debug_str:00000000000004a5 .LASF53
     /tmp/ccqtESKb.s:3360   .debug_str:0000000000000203 .LASF54
     /tmp/ccqtESKb.s:3296   .debug_str:000000000000003b .LASF80
     /tmp/ccqtESKb.s:3538   .debug_str:00000000000007eb .LASF58
     /tmp/ccqtESKb.s:3508   .debug_str:000000000000064b .LASF60
GAS LISTING /tmp/ccqtESKb.s 			page 26


     /tmp/ccqtESKb.s:3338   .debug_str:0000000000000161 .LASF56
     /tmp/ccqtESKb.s:3484   .debug_str:000000000000058a .LASF57
     /tmp/ccqtESKb.s:3370   .debug_str:000000000000025f .LASF59
     /tmp/ccqtESKb.s:3476   .debug_str:0000000000000553 .LASF61
     /tmp/ccqtESKb.s:3394   .debug_str:00000000000002f1 .LASF62
     /tmp/ccqtESKb.s:3546   .debug_str:0000000000000823 .LASF63
     /tmp/ccqtESKb.s:3480   .debug_str:000000000000056c .LASF98
     /tmp/ccqtESKb.s:3436   .debug_str:000000000000043b .LASF64
     /tmp/ccqtESKb.s:3346   .debug_str:000000000000018f .LASF65
     /tmp/ccqtESKb.s:3404   .debug_str:0000000000000329 .LASF66
     /tmp/ccqtESKb.s:3308   .debug_str:0000000000000079 .LASF67
     /tmp/ccqtESKb.s:3460   .debug_str:00000000000004ce .LASF70
     /tmp/ccqtESKb.s:3362   .debug_str:0000000000000226 .LASF72
     /tmp/ccqtESKb.s:3366   .debug_str:000000000000024b .LASF68
     /tmp/ccqtESKb.s:3412   .debug_str:000000000000034c .LASF69
     /tmp/ccqtESKb.s:3528   .debug_str:000000000000078c .LASF71
     /tmp/ccqtESKb.s:3424   .debug_str:00000000000003e1 .LASF73
     /tmp/ccqtESKb.s:3344   .debug_str:0000000000000187 .LASF132
     /tmp/ccqtESKb.s:3462   .debug_str:00000000000004d9 .LASF133
     /tmp/ccqtESKb.s:3382   .debug_str:00000000000002b8 .LASF74
     /tmp/ccqtESKb.s:3438   .debug_str:0000000000000444 .LASF75
     /tmp/ccqtESKb.s:3342   .debug_str:000000000000017d .LASF76
     /tmp/ccqtESKb.s:3388   .debug_str:00000000000002cf .LASF77
     /tmp/ccqtESKb.s:3384   .debug_str:00000000000002c1 .LASF78
     /tmp/ccqtESKb.s:3474   .debug_str:0000000000000548 .LASF134
     /tmp/ccqtESKb.s:3526   .debug_str:0000000000000776 .LASF135
     /tmp/ccqtESKb.s:3468   .debug_str:000000000000050d .LASF79
     /tmp/ccqtESKb.s:3316   .debug_str:00000000000000a9 .LASF81
     /tmp/ccqtESKb.s:3402   .debug_str:0000000000000324 .LASF82
     /tmp/ccqtESKb.s:3558   .debug_str:00000000000008d6 .LASF83
     /tmp/ccqtESKb.s:3428   .debug_str:0000000000000400 .LASF84
     /tmp/ccqtESKb.s:3440   .debug_str:000000000000044a .LASF85
     /tmp/ccqtESKb.s:3418   .debug_str:0000000000000387 .LASF86
     /tmp/ccqtESKb.s:3534   .debug_str:00000000000007c0 .LASF87
     /tmp/ccqtESKb.s:3536   .debug_str:00000000000007ca .LASF88
     /tmp/ccqtESKb.s:3380   .debug_str:00000000000002af .LASF89
     /tmp/ccqtESKb.s:3378   .debug_str:000000000000028e .LASF90
     /tmp/ccqtESKb.s:3288   .debug_str:0000000000000009 .LASF91
     /tmp/ccqtESKb.s:3332   .debug_str:0000000000000111 .LASF92
     /tmp/ccqtESKb.s:3442   .debug_str:0000000000000453 .LASF93
     /tmp/ccqtESKb.s:3552   .debug_str:0000000000000893 .LASF94
     /tmp/ccqtESKb.s:3336   .debug_str:0000000000000148 .LASF95
     /tmp/ccqtESKb.s:3510   .debug_str:0000000000000657 .LASF96
     /tmp/ccqtESKb.s:3550   .debug_str:000000000000085d .LASF97
     /tmp/ccqtESKb.s:3328   .debug_str:00000000000000f9 .LASF99
     /tmp/ccqtESKb.s:3298   .debug_str:0000000000000043 .LASF100
     /tmp/ccqtESKb.s:3348   .debug_str:00000000000001a2 .LASF101
     /tmp/ccqtESKb.s:3478   .debug_str:000000000000055f .LASF136
     /tmp/ccqtESKb.s:3320   .debug_str:00000000000000c2 .LASF102
     /tmp/ccqtESKb.s:3392   .debug_str:00000000000002e8 .LASF103
     /tmp/ccqtESKb.s:3408   .debug_str:0000000000000333 .LASF104
     /tmp/ccqtESKb.s:3352   .debug_str:00000000000001c5 .LASF105
     /tmp/ccqtESKb.s:3398   .debug_str:0000000000000309 .LASF106
     /tmp/ccqtESKb.s:3340   .debug_str:0000000000000171 .LASF107
     /tmp/ccqtESKb.s:3314   .debug_str:0000000000000099 .LASF108
     /tmp/ccqtESKb.s:3554   .debug_str:00000000000008bf .LASF109
     /tmp/ccqtESKb.s:3286   .debug_str:0000000000000000 .LASF110
GAS LISTING /tmp/ccqtESKb.s 			page 27


     /tmp/ccqtESKb.s:136    .text:0000000000000060 .LFB29
     /tmp/ccqtESKb.s:732    .text:00000000000002bc .LFE29
     /tmp/ccqtESKb.s:3444   .debug_str:0000000000000467 .LASF111
     /tmp/ccqtESKb.s:3010   .debug_loc:0000000000000000 .LLST3
     /tmp/ccqtESKb.s:3326   .debug_str:00000000000000f1 .LASF112
     /tmp/ccqtESKb.s:3027   .debug_loc:000000000000004b .LLST4
     /tmp/ccqtESKb.s:3292   .debug_str:0000000000000028 .LASF113
     /tmp/ccqtESKb.s:3038   .debug_loc:0000000000000081 .LLST5
     /tmp/ccqtESKb.s:3256   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccqtESKb.s:3512   .debug_str:0000000000000663 .LASF114
     /tmp/ccqtESKb.s:3049   .debug_loc:00000000000000b7 .LLST6
     /tmp/ccqtESKb.s:465    .text:00000000000001b4 .LBB98
     /tmp/ccqtESKb.s:491    .text:00000000000001d0 .LBE98
     /tmp/ccqtESKb.s:3522   .debug_str:0000000000000755 .LASF115
     /tmp/ccqtESKb.s:3084   .debug_loc:000000000000015f .LLST19
     /tmp/ccqtESKb.s:3091   .debug_loc:0000000000000182 .LLST20
     /tmp/ccqtESKb.s:478    .text:00000000000001c0 .LVL29
     /tmp/ccqtESKb.s:481    .text:00000000000001cc .LVL30
     /tmp/ccqtESKb.s:555    .text:0000000000000200 .LBB91
     /tmp/ccqtESKb.s:580    .text:0000000000000220 .LBE91
     /tmp/ccqtESKb.s:3098   .debug_loc:00000000000001a5 .LLST18
     /tmp/ccqtESKb.s:568    .text:000000000000020c .LVL38
     /tmp/ccqtESKb.s:571    .text:0000000000000218 .LVL39
     /tmp/ccqtESKb.s:585    .text:0000000000000224 .LBB83
     /tmp/ccqtESKb.s:606    .text:0000000000000234 .LBE83
     /tmp/ccqtESKb.s:3354   .debug_str:00000000000001e0 .LASF116
     /tmp/ccqtESKb.s:3105   .debug_loc:00000000000001c8 .LLST16
     /tmp/ccqtESKb.s:590    .text:000000000000022c .LBB84
     /tmp/ccqtESKb.s:598    .text:0000000000000230 .LBE84
     /tmp/ccqtESKb.s:3112   .debug_loc:00000000000001eb .LLST17
     /tmp/ccqtESKb.s:589    .text:000000000000022c .LVL41
     /tmp/ccqtESKb.s:611    .text:0000000000000238 .LBB78
     /tmp/ccqtESKb.s:625    .text:000000000000024c .LBE78
     /tmp/ccqtESKb.s:3520   .debug_str:0000000000000748 .LASF117
     /tmp/ccqtESKb.s:3119   .debug_loc:000000000000020e .LLST15
     /tmp/ccqtESKb.s:615    .text:0000000000000240 .LVL44
     /tmp/ccqtESKb.s:617    .text:0000000000000248 .LVL45
     /tmp/ccqtESKb.s:3426   .debug_str:00000000000003f9 .LASF118
     /tmp/ccqtESKb.s:3126   .debug_loc:0000000000000231 .LLST10
     /tmp/ccqtESKb.s:3358   .debug_str:00000000000001f5 .LASF119
     /tmp/ccqtESKb.s:3133   .debug_loc:0000000000000254 .LLST11
     /tmp/ccqtESKb.s:3140   .debug_loc:0000000000000277 .LLST12
     /tmp/ccqtESKb.s:3147   .debug_loc:000000000000029a .LLST13
     /tmp/ccqtESKb.s:3158   .debug_loc:00000000000002d0 .LLST14
     /tmp/ccqtESKb.s:657    .text:0000000000000264 .LVL50
     /tmp/ccqtESKb.s:660    .text:0000000000000270 .LVL51
     /tmp/ccqtESKb.s:669    .text:0000000000000284 .LVL54
     /tmp/ccqtESKb.s:699    .text:00000000000002a0 .LBB70
     /tmp/ccqtESKb.s:711    .text:00000000000002ac .LBE70
     /tmp/ccqtESKb.s:3175   .debug_loc:000000000000031b .LLST9
     /tmp/ccqtESKb.s:703    .text:00000000000002a8 .LVL59
     /tmp/ccqtESKb.s:338    .text:00000000000000f4 .LBB65
     /tmp/ccqtESKb.s:428    .text:000000000000019c .LBE65
     /tmp/ccqtESKb.s:3182   .debug_loc:000000000000033e .LLST7
     /tmp/ccqtESKb.s:3410   .debug_str:0000000000000346 .LASF120
     /tmp/ccqtESKb.s:3189   .debug_loc:0000000000000361 .LLST8
     /tmp/ccqtESKb.s:340    .text:00000000000000f4 .LBB66
GAS LISTING /tmp/ccqtESKb.s 			page 28


     /tmp/ccqtESKb.s:357    .text:0000000000000100 .LBE66
     /tmp/ccqtESKb.s:359    .text:0000000000000100 .LBB68
     /tmp/ccqtESKb.s:375    .text:000000000000010c .LBE68
     /tmp/ccqtESKb.s:380    .text:000000000000011c .LVL14
     /tmp/ccqtESKb.s:385    .text:0000000000000128 .LVL15
     /tmp/ccqtESKb.s:390    .text:0000000000000138 .LVL16
     /tmp/ccqtESKb.s:395    .text:0000000000000148 .LVL17
     /tmp/ccqtESKb.s:400    .text:0000000000000154 .LVL18
     /tmp/ccqtESKb.s:405    .text:0000000000000164 .LVL19
     /tmp/ccqtESKb.s:410    .text:0000000000000174 .LVL20
     /tmp/ccqtESKb.s:415    .text:0000000000000180 .LVL21
     /tmp/ccqtESKb.s:420    .text:0000000000000190 .LVL22
     /tmp/ccqtESKb.s:424    .text:0000000000000198 .LVL23
     /tmp/ccqtESKb.s:497    .text:00000000000001d4 .LBB107
     /tmp/ccqtESKb.s:508    .text:00000000000001d8 .LBE107
     /tmp/ccqtESKb.s:3196   .debug_loc:0000000000000384 .LLST21
     /tmp/ccqtESKb.s:510    .text:00000000000001d8 .LBB109
     /tmp/ccqtESKb.s:522    .text:00000000000001dc .LBE109
     /tmp/ccqtESKb.s:3203   .debug_loc:00000000000003a7 .LLST22
     /tmp/ccqtESKb.s:719    .text:00000000000002b8 .LVL61
     /tmp/ccqtESKb.s:160    .text:0000000000000084 .LBB49
     /tmp/ccqtESKb.s:176    .text:0000000000000090 .LBE49
     /tmp/ccqtESKb.s:178    .text:0000000000000090 .LBB51
     /tmp/ccqtESKb.s:191    .text:0000000000000094 .LBE51
     /tmp/ccqtESKb.s:193    .text:0000000000000094 .LBB53
     /tmp/ccqtESKb.s:206    .text:0000000000000098 .LBE53
     /tmp/ccqtESKb.s:439    .text:000000000000019c .LBB126
     /tmp/ccqtESKb.s:454    .text:00000000000001a8 .LBE126
     /tmp/ccqtESKb.s:3210   .debug_loc:00000000000003ca .LLST23
     /tmp/ccqtESKb.s:459    .text:00000000000001b0 .LVL26
     /tmp/ccqtESKb.s:46     .text:0000000000000020 .LFB28
     /tmp/ccqtESKb.s:116    .text:0000000000000060 .LFE28
     /tmp/ccqtESKb.s:60     .text:0000000000000038 .LBB43
     /tmp/ccqtESKb.s:68     .text:000000000000003c .LBE43
     /tmp/ccqtESKb.s:3218   .debug_loc:00000000000003ee .LLST0
     /tmp/ccqtESKb.s:73     .text:0000000000000040 .LBB45
     /tmp/ccqtESKb.s:87     .text:0000000000000048 .LBE45
     /tmp/ccqtESKb.s:3225   .debug_loc:0000000000000411 .LLST1
     /tmp/ccqtESKb.s:100    .text:0000000000000054 .LBB47
     /tmp/ccqtESKb.s:112    .text:000000000000005c .LBE47
     /tmp/ccqtESKb.s:3234   .debug_loc:0000000000000437 .LLST2
     /tmp/ccqtESKb.s:10     .text:0000000000000000 .LFB27
     /tmp/ccqtESKb.s:40     .text:0000000000000020 .LFE27
     /tmp/ccqtESKb.s:3406   .debug_str:000000000000032e .LASF121
     /tmp/ccqtESKb.s:3312   .debug_str:0000000000000094 .LASF122
     /tmp/ccqtESKb.s:3330   .debug_str:00000000000000fe .LASF123
     /tmp/ccqtESKb.s:3294   .debug_str:000000000000002f .LASF125
     /tmp/ccqtESKb.s:3524   .debug_str:0000000000000764 .LASF124
     /tmp/ccqtESKb.s:3356   .debug_str:00000000000001e8 .LASF126
     /tmp/ccqtESKb.s:3368   .debug_str:0000000000000258 .LASF127
     /tmp/ccqtESKb.s:3334   .debug_str:0000000000000138 .LASF128
     /tmp/ccqtESKb.s:187    .text:0000000000000094 .LVL7
     /tmp/ccqtESKb.s:496    .text:00000000000001d4 .LVL32
     /tmp/ccqtESKb.s:518    .text:00000000000001dc .LVL34
     /tmp/ccqtESKb.s:547    .text:0000000000000200 .LVL36
     /tmp/ccqtESKb.s:202    .text:0000000000000098 .LVL8
     /tmp/ccqtESKb.s:537    .text:00000000000001ec .LVL35
GAS LISTING /tmp/ccqtESKb.s 			page 29


     /tmp/ccqtESKb.s:174    .text:0000000000000090 .LVL6
     /tmp/ccqtESKb.s:234    .text:00000000000000c0 .LVL10
     /tmp/ccqtESKb.s:426    .text:000000000000019c .LVL24
     /tmp/ccqtESKb.s:229    .text:00000000000000bc .LVL9
     /tmp/ccqtESKb.s:349    .text:00000000000000f8 .LVL11
     /tmp/ccqtESKb.s:461    .text:00000000000001b4 .LVL27
     /tmp/ccqtESKb.s:582    .text:0000000000000224 .LVL40
     /tmp/ccqtESKb.s:608    .text:0000000000000238 .LVL43
     /tmp/ccqtESKb.s:627    .text:0000000000000250 .LVL46
     /tmp/ccqtESKb.s:695    .text:00000000000002a0 .LVL58
     /tmp/ccqtESKb.s:713    .text:00000000000002b0 .LVL60
     /tmp/ccqtESKb.s:473    .text:00000000000001b8 .LVL28
     /tmp/ccqtESKb.s:488    .text:00000000000001d0 .LVL31
     /tmp/ccqtESKb.s:563    .text:0000000000000204 .LVL37
     /tmp/ccqtESKb.s:596    .text:0000000000000230 .LVL42
     /tmp/ccqtESKb.s:640    .text:0000000000000254 .LVL47
     /tmp/ccqtESKb.s:646    .text:0000000000000258 .LVL48
     /tmp/ccqtESKb.s:652    .text:000000000000025c .LVL49
     /tmp/ccqtESKb.s:662    .text:0000000000000274 .LVL52
     /tmp/ccqtESKb.s:667    .text:000000000000027c .LVL53
     /tmp/ccqtESKb.s:673    .text:0000000000000288 .LVL55
     /tmp/ccqtESKb.s:679    .text:0000000000000290 .LVL56
     /tmp/ccqtESKb.s:689    .text:0000000000000298 .LVL57
     /tmp/ccqtESKb.s:355    .text:0000000000000100 .LVL12
     /tmp/ccqtESKb.s:373    .text:000000000000010c .LVL13
     /tmp/ccqtESKb.s:505    .text:00000000000001d8 .LVL33
     /tmp/ccqtESKb.s:451    .text:00000000000001a8 .LVL25
     /tmp/ccqtESKb.s:59     .text:0000000000000038 .LVL0
     /tmp/ccqtESKb.s:66     .text:000000000000003c .LVL1
     /tmp/ccqtESKb.s:72     .text:0000000000000040 .LVL2
     /tmp/ccqtESKb.s:83     .text:0000000000000048 .LVL3
     /tmp/ccqtESKb.s:99     .text:0000000000000054 .LVL4
     /tmp/ccqtESKb.s:109    .text:000000000000005c .LVL5
     /tmp/ccqtESKb.s:740    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccqtESKb.s:221    .text:00000000000000b8 .LBB57
     /tmp/ccqtESKb.s:237    .text:00000000000000c4 .LBE57
     /tmp/ccqtESKb.s:243    .text:00000000000000c4 .LBB112
     /tmp/ccqtESKb.s:250    .text:00000000000000cc .LBE112
     /tmp/ccqtESKb.s:256    .text:00000000000000cc .LBB113
     /tmp/ccqtESKb.s:265    .text:00000000000000d4 .LBE113
     /tmp/ccqtESKb.s:271    .text:00000000000000d4 .LBB114
     /tmp/ccqtESKb.s:282    .text:00000000000000dc .LBE114
     /tmp/ccqtESKb.s:288    .text:00000000000000dc .LBB115
     /tmp/ccqtESKb.s:301    .text:00000000000000e4 .LBE115
     /tmp/ccqtESKb.s:307    .text:00000000000000e4 .LBB116
     /tmp/ccqtESKb.s:322    .text:00000000000000ec .LBE116
     /tmp/ccqtESKb.s:328    .text:00000000000000ec .LBB117
     /tmp/ccqtESKb.s:436    .text:000000000000019c .LBE117
     /tmp/ccqtESKb.s:463    .text:00000000000001b4 .LBB118
     /tmp/ccqtESKb.s:523    .text:00000000000001dc .LBE118
     /tmp/ccqtESKb.s:552    .text:0000000000000200 .LBB119
     /tmp/ccqtESKb.s:728    .text:00000000000002bc .LBE119
     /tmp/ccqtESKb.s:630    .text:0000000000000250 .LBB73
     /tmp/ccqtESKb.s:687    .text:0000000000000294 .LBE73
     /tmp/ccqtESKb.s:691    .text:0000000000000298 .LBB74
     /tmp/ccqtESKb.s:697    .text:00000000000002a0 .LBE74

GAS LISTING /tmp/ccqtESKb.s 			page 30


UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Z11printStringPKc
_Z12printIntegerm
__getc
console_handler
_ZN15MemoryAllocator8InstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN15MemoryAllocator19getLargestFreeBlockEv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB4exitEv
_ZN3TCB8dispatchEv

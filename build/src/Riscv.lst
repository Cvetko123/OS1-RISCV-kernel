GAS LISTING /tmp/ccwUHw8n.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv21SupervisorTrapHandlerEv
   9              	_ZN5Riscv21SupervisorTrapHandlerEv:
  10              	.LFB7:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 9/8/25.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../h/syscall_c.hpp"
   8:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/Riscv.cpp **** 
  10:src/Riscv.cpp **** extern  "C" void SupervisorTrapHandlerWrapper() {
  11:src/Riscv.cpp ****     Riscv::SupervisorTrapHandler();
  12:src/Riscv.cpp **** }
  13:src/Riscv.cpp **** 
  14:src/Riscv.cpp **** 
  15:src/Riscv.cpp **** void Riscv::SupervisorTrapHandler() {
  12              		.loc 1 15 37
  13              		.cfi_startproc
  14 0000 130101FD 		addi	sp,sp,-48
  15              		.cfi_def_cfa_offset 48
  16 0004 23341102 		sd	ra,40(sp)
  17 0008 23308102 		sd	s0,32(sp)
  18 000c 233C9100 		sd	s1,24(sp)
  19 0010 23382101 		sd	s2,16(sp)
  20 0014 23343101 		sd	s3,8(sp)
  21              		.cfi_offset 1, -8
  22              		.cfi_offset 8, -16
  23              		.cfi_offset 9, -24
  24              		.cfi_offset 18, -32
  25              		.cfi_offset 19, -40
  26 0018 13040103 		addi	s0,sp,48
  27              		.cfi_def_cfa 8, 0
  16:src/Riscv.cpp ****     uint64 sepc;
  28              		.loc 1 16 5
  17:src/Riscv.cpp ****     uint64 sstatus;
  29              		.loc 1 17 5
  18:src/Riscv.cpp ****     sepc=get_sepc();
  30              		.loc 1 18 5
  31              	.LBB20:
  32              	.LBB21:
  33              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 9/8/25.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_COPY_RISCV_HPP
   7:src/../h/Riscv.hpp **** #include "../lib/hw.h"
GAS LISTING /tmp/ccwUHw8n.s 			page 2


   8:src/../h/Riscv.hpp **** 
   9:src/../h/Riscv.hpp **** class Riscv {
  10:src/../h/Riscv.hpp **** public:
  11:src/../h/Riscv.hpp ****     static void set_stvec(uint64 stvec);
  12:src/../h/Riscv.hpp ****     static void set_sepc(uint64 sepc);
  13:src/../h/Riscv.hpp ****     static uint64 get_sepc();
  14:src/../h/Riscv.hpp ****     static void set_sstatus(uint64 sstatus);
  15:src/../h/Riscv.hpp ****     static uint64 get_sstatus();
  16:src/../h/Riscv.hpp **** 
  17:src/../h/Riscv.hpp ****     static void SupervisorTrapHandler();
  18:src/../h/Riscv.hpp **** };
  19:src/../h/Riscv.hpp **** 
  20:src/../h/Riscv.hpp **** 
  21:src/../h/Riscv.hpp **** inline void Riscv::set_stvec(uint64 stvec) {
  22:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[x]" :: [x] "r" (stvec));
  23:src/../h/Riscv.hpp **** }
  24:src/../h/Riscv.hpp **** 
  25:src/../h/Riscv.hpp **** inline void Riscv::set_sepc(uint64 sepc) {
  26:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[x]" :: [x] "r" (sepc));
  27:src/../h/Riscv.hpp **** }
  28:src/../h/Riscv.hpp **** 
  29:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sepc() {
  30:src/../h/Riscv.hpp ****     uint64 sepc;
  34              		.loc 2 30 5
  31:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
  35              		.loc 2 31 5
  36              		.loc 2 31 58 is_stmt 0
  37              	#APP
  38              	# 31 "src/../h/Riscv.hpp" 1
  32              	    return sepc;
  39              		csrr s1,sepc
  40              	# 0 "" 2
  41              	.LVL0:
  42              		.loc 2 32 5 is_stmt 1
  43              	#NO_APP
  44              	.LBE21:
  45              	.LBE20:
  19:src/Riscv.cpp ****     sstatus=get_sstatus();
  46              		.loc 1 19 5
  47              	.LBB22:
  48              	.LBB23:
  33:src/../h/Riscv.hpp **** }
  34:src/../h/Riscv.hpp **** 
  35:src/../h/Riscv.hpp **** inline void Riscv::set_sstatus(uint64 sstatus) {
  36:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[x]" :: [x] "r" (sstatus));
  37:src/../h/Riscv.hpp **** }
  38:src/../h/Riscv.hpp **** 
  39:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sstatus() {
  40:src/../h/Riscv.hpp ****     uint64 sstatus;
  49              		.loc 2 40 5
  41:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
  50              		.loc 2 41 5
  51              		.loc 2 41 64 is_stmt 0
  52              	#APP
  53              	# 41 "src/../h/Riscv.hpp" 1
  42              	    return sstatus;
  54              		csrr s2,sstatus
GAS LISTING /tmp/ccwUHw8n.s 			page 3


  55              	# 0 "" 2
  56              	.LVL1:
  57              		.loc 2 42 5 is_stmt 1
  58              	#NO_APP
  59              	.LBE23:
  60              	.LBE22:
  20:src/Riscv.cpp **** 
  21:src/Riscv.cpp ****     uint64 syscode;
  61              		.loc 1 21 5
  22:src/Riscv.cpp ****     __asm__ volatile ("mv %[x], a0" : [x] "=r" (syscode));
  62              		.loc 1 22 5
  63              		.loc 1 22 58 is_stmt 0
  64              	#APP
  65              	# 22 "src/Riscv.cpp" 1
  23              	
  66              		mv a5, a0
  67              	# 0 "" 2
  68              	.LVL2:
  24:src/Riscv.cpp ****     if (syscode==MEM_ALLOC) {
  69              		.loc 1 24 5 is_stmt 1
  70              	#NO_APP
  71              	.LBB24:
  72 0028 13071000 		li	a4,1
  73 002c 638EE704 		beq	a5,a4,.L8
  74              	.LBE24:
  25:src/Riscv.cpp ****         size_t size_in_blocks;
  26:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
  27:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
  28:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
  29:src/Riscv.cpp ****     }
  30:src/Riscv.cpp ****     else if (syscode==MEM_FREE) {
  75              		.loc 1 30 10
  76              	.LBB40:
  77              	.LBB25:
  78 0030 13072000 		li	a4,2
  79 0034 638AE706 		beq	a5,a4,.L9
  80              	.LBE25:
  81              	.LBE40:
  31:src/Riscv.cpp ****         void* ptr;
  32:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
  33:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
  34:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
  35:src/Riscv.cpp ****     }
  36:src/Riscv.cpp ****     else if (syscode==MEM_GET_FREE_SPACE) {
  82              		.loc 1 36 10
  83              	.LBB41:
  84              	.LBB36:
  85              	.LBB26:
  86 0038 13073000 		li	a4,3
  87 003c 6388E708 		beq	a5,a4,.L10
  88              	.LBE26:
  89              	.LBE36:
  90              	.LBE41:
  37:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
  38:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
  39:src/Riscv.cpp ****     }
  40:src/Riscv.cpp ****     else if (syscode==MEM_GET_LARGEST_FREE_BLOCK) {
GAS LISTING /tmp/ccwUHw8n.s 			page 4


  91              		.loc 1 40 10
  92              	.LBB42:
  93              	.LBB37:
  94              	.LBB33:
  95              	.LBB27:
  96 0040 13074000 		li	a4,4
  97 0044 638EE708 		beq	a5,a4,.L11
  41:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
  42:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
  43:src/Riscv.cpp ****     }
  44:src/Riscv.cpp ****     else {
  45:src/Riscv.cpp ****         __putc('E');
  98              		.loc 1 45 9
  99              		.loc 1 45 15 is_stmt 0
 100 0048 13055004 		li	a0,69
 101 004c 97000000 		call	__putc@plt
 101      E7800000 
 102              	.LVL3:
  46:src/Riscv.cpp ****         __putc('\n');
 103              		.loc 1 46 9 is_stmt 1
 104              		.loc 1 46 15 is_stmt 0
 105 0054 1305A000 		li	a0,10
 106 0058 97000000 		call	__putc@plt
 106      E7800000 
 107              	.LVL4:
 108              	.L3:
 109              	.LBE27:
 110              	.LBE33:
 111              	.LBE37:
 112              	.LBE42:
  47:src/Riscv.cpp ****     }
  48:src/Riscv.cpp **** 
  49:src/Riscv.cpp **** 
  50:src/Riscv.cpp **** 
  51:src/Riscv.cpp ****     set_sepc(sepc+4);
 113              		.loc 1 51 5 is_stmt 1
 114              		.loc 1 51 13 is_stmt 0
 115 0060 93844400 		addi	s1,s1,4
 116              	.LVL5:
 117              	.LBB43:
 118              	.LBB44:
  26:src/../h/Riscv.hpp **** }
 119              		.loc 2 26 5 is_stmt 1
  26:src/../h/Riscv.hpp **** }
 120              		.loc 2 26 59 is_stmt 0
 121              	#APP
 122              	# 26 "src/../h/Riscv.hpp" 1
 123              		csrw sepc, s1
 124              	# 0 "" 2
 125              	.LVL6:
 126              	#NO_APP
 127              	.LBE44:
 128              	.LBE43:
  52:src/Riscv.cpp ****     set_sstatus(sstatus);
 129              		.loc 1 52 5 is_stmt 1
 130              	.LBB45:
 131              	.LBB46:
GAS LISTING /tmp/ccwUHw8n.s 			page 5


  36:src/../h/Riscv.hpp **** }
 132              		.loc 2 36 5
  36:src/../h/Riscv.hpp **** }
 133              		.loc 2 36 65 is_stmt 0
 134              	#APP
 135              	# 36 "src/../h/Riscv.hpp" 1
 136              		csrw sstatus, s2
 137              	# 0 "" 2
 138              	.LVL7:
 139              	#NO_APP
 140              	.LBE46:
 141              	.LBE45:
  53:src/Riscv.cpp **** }...
 142              		.loc 1 53 1
 143 006c 83308102 		ld	ra,40(sp)
 144              		.cfi_remember_state
 145              		.cfi_restore 1
 146 0070 03340102 		ld	s0,32(sp)
 147              		.cfi_restore 8
 148              		.cfi_def_cfa 2, 48
 149 0074 83348101 		ld	s1,24(sp)
 150              		.cfi_restore 9
 151              	.LVL8:
 152 0078 03390101 		ld	s2,16(sp)
 153              		.cfi_restore 18
 154              	.LVL9:
 155 007c 83398100 		ld	s3,8(sp)
 156              		.cfi_restore 19
 157 0080 13010103 		addi	sp,sp,48
 158              		.cfi_def_cfa_offset 0
 159 0084 67800000 		jr	ra
 160              	.LVL10:
 161              	.L8:
 162              		.cfi_restore_state
 163              	.LBB47:
 164              	.LBB38:
  25:src/Riscv.cpp ****         size_t size_in_blocks;
 165              		.loc 1 25 9 is_stmt 1
  26:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
 166              		.loc 1 26 9
  26:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
 167              		.loc 1 26 69 is_stmt 0
 168              	#APP
 169              	# 26 "src/Riscv.cpp" 1
 170              		mv s3, a1
 171              	# 0 "" 2
 172              	.LVL11:
  27:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 173              		.loc 1 27 9 is_stmt 1
  27:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 174              		.loc 1 27 59 is_stmt 0
 175              	#NO_APP
 176 008c 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 176      E7800000 
 177              	.LVL12:
 178 0094 93956900 		slli	a1,s3,6
 179 0098 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
GAS LISTING /tmp/ccwUHw8n.s 			page 6


 179      E7800000 
 180              	.LVL13:
  28:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 181              		.loc 1 28 9 is_stmt 1
  28:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 182              		.loc 1 28 57 is_stmt 0
 183              	#APP
 184              	# 28 "src/Riscv.cpp" 1
 185              		mv a0,a0
 186              	# 0 "" 2
 187              	#NO_APP
 188              	.LBE38:
 189 00a4 6FF0DFFB 		j	.L3
 190              	.LVL14:
 191              	.L9:
 192              	.LBB39:
 193              	.LBB34:
  31:src/Riscv.cpp ****         void* ptr;
 194              		.loc 1 31 9 is_stmt 1
  32:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 195              		.loc 1 32 9
  32:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 196              		.loc 1 32 58 is_stmt 0
 197              	#APP
 198              	# 32 "src/Riscv.cpp" 1
 199              		mv s3, a1
 200              	# 0 "" 2
 201              	.LVL15:
  33:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 202              		.loc 1 33 9 is_stmt 1
  33:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 203              		.loc 1 33 46 is_stmt 0
 204              	#NO_APP
 205 00ac 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 205      E7800000 
 206              	.LVL16:
 207 00b4 93850900 		mv	a1,s3
 208 00b8 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 208      E7800000 
 209              	.LVL17:
  34:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 210              		.loc 1 34 9 is_stmt 1
  34:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 211              		.loc 1 34 56 is_stmt 0
 212 00c0 93070000 		li	a5,0
 213              	#APP
 214              	# 34 "src/Riscv.cpp" 1
 215              		mv a0, a5
 216              	# 0 "" 2
 217              	#NO_APP
 218              	.LBE34:
 219 00c8 6FF09FF9 		j	.L3
 220              	.LVL18:
 221              	.L10:
 222              	.LBB35:
 223              	.LBB29:
  37:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
GAS LISTING /tmp/ccwUHw8n.s 			page 7


 224              		.loc 1 37 9 is_stmt 1
  37:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 225              		.loc 1 37 69 is_stmt 0
 226 00cc 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 226      E7800000 
 227              	.LVL19:
 228              	.LBB30:
 229              	.LBB31:
 230              		.file 3 "src/../h/MemoryAllocator.hpp"
   1:src/../h/MemoryAllocator.hpp **** 
   2:src/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   4:src/../h/MemoryAllocator.hpp **** 
   5:src/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   6:src/../h/MemoryAllocator.hpp **** 
   7:src/../h/MemoryAllocator.hpp **** class MemoryAllocator {
   8:src/../h/MemoryAllocator.hpp **** public:
   9:src/../h/MemoryAllocator.hpp ****     static MemoryAllocator* Instance();
  10:src/../h/MemoryAllocator.hpp **** 
  11:src/../h/MemoryAllocator.hpp ****     void* mem_alloc(size_t size);//size in bytes
  12:src/../h/MemoryAllocator.hpp **** 
  13:src/../h/MemoryAllocator.hpp ****     void mem_free(void* ptr);
  14:src/../h/MemoryAllocator.hpp **** 
  15:src/../h/MemoryAllocator.hpp ****     size_t getFreeMemSize() {
  16:src/../h/MemoryAllocator.hpp ****         return this->freeMemSize;
 231              		.loc 3 16 9 is_stmt 1
 232              		.loc 3 16 22 is_stmt 0
 233 00d4 83378500 		ld	a5,8(a0)
 234              	.LVL20:
 235              	.LBE31:
 236              	.LBE30:
  38:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 237              		.loc 1 38 9 is_stmt 1
  38:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 238              		.loc 1 38 62 is_stmt 0
 239              	#APP
 240              	# 38 "src/Riscv.cpp" 1
 241              		mv a0, a5
 242              	# 0 "" 2
 243              	#NO_APP
 244              	.LBE29:
 245 00dc 6FF05FF8 		j	.L3
 246              	.LVL21:
 247              	.L11:
 248              	.LBB32:
 249              	.LBB28:
  41:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 250              		.loc 1 41 9 is_stmt 1
  41:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 251              		.loc 1 41 79 is_stmt 0
 252 00e0 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 252      E7800000 
 253              	.LVL22:
 254 00e8 97000000 		call	_ZN15MemoryAllocator19getLargestFreeBlockEv@plt
 254      E7800000 
 255              	.LVL23:
  42:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
GAS LISTING /tmp/ccwUHw8n.s 			page 8


 256              		.loc 1 42 9 is_stmt 1
  42:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 257              		.loc 1 42 67 is_stmt 0
 258              	#APP
 259              	# 42 "src/Riscv.cpp" 1
 260              		mv a0, a0
 261              	# 0 "" 2
 262              	#NO_APP
 263              	.LBE28:
 264 00f4 6FF0DFF6 		j	.L3
 265              	.LBE32:
 266              	.LBE35:
 267              	.LBE39:
 268              	.LBE47:
 269              		.cfi_endproc
 270              	.LFE7:
 272              		.align	2
 273              		.globl	SupervisorTrapHandlerWrapper
 275              	SupervisorTrapHandlerWrapper:
 276              	.LFB6:
  10:src/Riscv.cpp **** extern  "C" void SupervisorTrapHandlerWrapper() {
 277              		.loc 1 10 49 is_stmt 1
 278              		.cfi_startproc
 279 00f8 130101FF 		addi	sp,sp,-16
 280              		.cfi_def_cfa_offset 16
 281 00fc 23341100 		sd	ra,8(sp)
 282 0100 23308100 		sd	s0,0(sp)
 283              		.cfi_offset 1, -8
 284              		.cfi_offset 8, -16
 285 0104 13040101 		addi	s0,sp,16
 286              		.cfi_def_cfa 8, 0
  11:src/Riscv.cpp ****     Riscv::SupervisorTrapHandler();
 287              		.loc 1 11 5
  11:src/Riscv.cpp ****     Riscv::SupervisorTrapHandler();
 288              		.loc 1 11 33 is_stmt 0
 289 0108 97000000 		call	_ZN5Riscv21SupervisorTrapHandlerEv
 289      E7800000 
 290              	.LVL24:
  12:src/Riscv.cpp **** }
 291              		.loc 1 12 1
 292 0110 83308100 		ld	ra,8(sp)
 293              		.cfi_restore 1
 294 0114 03340100 		ld	s0,0(sp)
 295              		.cfi_restore 8
 296              		.cfi_def_cfa 2, 16
 297 0118 13010101 		addi	sp,sp,16
 298              		.cfi_def_cfa_offset 0
 299 011c 67800000 		jr	ra
 300              		.cfi_endproc
 301              	.LFE6:
 303              	.Letext0:
 304              		.file 4 "src/../h/../lib/hw.h"
 305              		.file 5 "src/../h/syscall_c.hpp"
 306              		.file 6 "src/../lib/console.h"
GAS LISTING /tmp/ccwUHw8n.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccwUHw8n.s:9      .text:0000000000000000 _ZN5Riscv21SupervisorTrapHandlerEv
     /tmp/ccwUHw8n.s:13     .text:0000000000000000 .L0 
     /tmp/ccwUHw8n.s:14     .text:0000000000000000 .L0 
     /tmp/ccwUHw8n.s:15     .text:0000000000000004 .L0 
     /tmp/ccwUHw8n.s:21     .text:0000000000000018 .L0 
     /tmp/ccwUHw8n.s:22     .text:0000000000000018 .L0 
     /tmp/ccwUHw8n.s:23     .text:0000000000000018 .L0 
     /tmp/ccwUHw8n.s:24     .text:0000000000000018 .L0 
     /tmp/ccwUHw8n.s:25     .text:0000000000000018 .L0 
     /tmp/ccwUHw8n.s:27     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:29     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:30     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:34     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:35     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:36     .text:000000000000001c .L0 
  src/../h/Riscv.hpp:31     .text:000000000000001c .L0 
     /tmp/ccwUHw8n.s:46     .text:0000000000000020 .L0 
     /tmp/ccwUHw8n.s:49     .text:0000000000000020 .L0 
     /tmp/ccwUHw8n.s:50     .text:0000000000000020 .L0 
     /tmp/ccwUHw8n.s:51     .text:0000000000000020 .L0 
  src/../h/Riscv.hpp:41     .text:0000000000000020 .L0 
     /tmp/ccwUHw8n.s:61     .text:0000000000000024 .L0 
     /tmp/ccwUHw8n.s:62     .text:0000000000000024 .L0 
     /tmp/ccwUHw8n.s:63     .text:0000000000000024 .L0 
       src/Riscv.cpp:22     .text:0000000000000024 .L0 
     /tmp/ccwUHw8n.s:72     .text:0000000000000028 .L0 
     /tmp/ccwUHw8n.s:78     .text:0000000000000030 .L0 
     /tmp/ccwUHw8n.s:86     .text:0000000000000038 .L0 
     /tmp/ccwUHw8n.s:96     .text:0000000000000040 .L0 
     /tmp/ccwUHw8n.s:99     .text:0000000000000048 .L0 
     /tmp/ccwUHw8n.s:100    .text:0000000000000048 .L0 
     /tmp/ccwUHw8n.s:104    .text:0000000000000054 .L0 
     /tmp/ccwUHw8n.s:105    .text:0000000000000054 .L0 
     /tmp/ccwUHw8n.s:114    .text:0000000000000060 .L0 
     /tmp/ccwUHw8n.s:115    .text:0000000000000060 .L0 
     /tmp/ccwUHw8n.s:120    .text:0000000000000064 .L0 
  src/../h/Riscv.hpp:26     .text:0000000000000064 .L0 
     /tmp/ccwUHw8n.s:132    .text:0000000000000068 .L0 
     /tmp/ccwUHw8n.s:133    .text:0000000000000068 .L0 
  src/../h/Riscv.hpp:36     .text:0000000000000068 .L0 
     /tmp/ccwUHw8n.s:143    .text:000000000000006c .L0 
     /tmp/ccwUHw8n.s:144    .text:0000000000000070 .L0 
     /tmp/ccwUHw8n.s:145    .text:0000000000000070 .L0 
     /tmp/ccwUHw8n.s:147    .text:0000000000000074 .L0 
     /tmp/ccwUHw8n.s:148    .text:0000000000000074 .L0 
     /tmp/ccwUHw8n.s:150    .text:0000000000000078 .L0 
     /tmp/ccwUHw8n.s:153    .text:000000000000007c .L0 
     /tmp/ccwUHw8n.s:156    .text:0000000000000080 .L0 
     /tmp/ccwUHw8n.s:158    .text:0000000000000084 .L0 
     /tmp/ccwUHw8n.s:162    .text:0000000000000088 .L0 
     /tmp/ccwUHw8n.s:166    .text:0000000000000088 .L0 
     /tmp/ccwUHw8n.s:167    .text:0000000000000088 .L0 
       src/Riscv.cpp:26     .text:0000000000000088 .L0 
     /tmp/ccwUHw8n.s:174    .text:000000000000008c .L0 
     /tmp/ccwUHw8n.s:176    .text:000000000000008c .L0 
GAS LISTING /tmp/ccwUHw8n.s 			page 10


     /tmp/ccwUHw8n.s:182    .text:00000000000000a0 .L0 
       src/Riscv.cpp:28     .text:00000000000000a0 .L0 
     /tmp/ccwUHw8n.s:195    .text:00000000000000a8 .L0 
     /tmp/ccwUHw8n.s:196    .text:00000000000000a8 .L0 
       src/Riscv.cpp:32     .text:00000000000000a8 .L0 
     /tmp/ccwUHw8n.s:203    .text:00000000000000ac .L0 
     /tmp/ccwUHw8n.s:205    .text:00000000000000ac .L0 
     /tmp/ccwUHw8n.s:211    .text:00000000000000c0 .L0 
     /tmp/ccwUHw8n.s:212    .text:00000000000000c0 .L0 
     /tmp/ccwUHw8n.s:225    .text:00000000000000cc .L0 
     /tmp/ccwUHw8n.s:226    .text:00000000000000cc .L0 
     /tmp/ccwUHw8n.s:232    .text:00000000000000d4 .L0 
     /tmp/ccwUHw8n.s:233    .text:00000000000000d4 .L0 
     /tmp/ccwUHw8n.s:238    .text:00000000000000d8 .L0 
       src/Riscv.cpp:38     .text:00000000000000d8 .L0 
     /tmp/ccwUHw8n.s:251    .text:00000000000000e0 .L0 
     /tmp/ccwUHw8n.s:252    .text:00000000000000e0 .L0 
     /tmp/ccwUHw8n.s:257    .text:00000000000000f0 .L0 
       src/Riscv.cpp:42     .text:00000000000000f0 .L0 
     /tmp/ccwUHw8n.s:269    .text:00000000000000f8 .L0 
     /tmp/ccwUHw8n.s:275    .text:00000000000000f8 SupervisorTrapHandlerWrapper
     /tmp/ccwUHw8n.s:278    .text:00000000000000f8 .L0 
     /tmp/ccwUHw8n.s:279    .text:00000000000000f8 .L0 
     /tmp/ccwUHw8n.s:280    .text:00000000000000fc .L0 
     /tmp/ccwUHw8n.s:283    .text:0000000000000104 .L0 
     /tmp/ccwUHw8n.s:284    .text:0000000000000104 .L0 
     /tmp/ccwUHw8n.s:286    .text:0000000000000108 .L0 
     /tmp/ccwUHw8n.s:288    .text:0000000000000108 .L0 
     /tmp/ccwUHw8n.s:289    .text:0000000000000108 .L0 
     /tmp/ccwUHw8n.s:292    .text:0000000000000110 .L0 
     /tmp/ccwUHw8n.s:293    .text:0000000000000114 .L0 
     /tmp/ccwUHw8n.s:295    .text:0000000000000118 .L0 
     /tmp/ccwUHw8n.s:296    .text:0000000000000118 .L0 
     /tmp/ccwUHw8n.s:298    .text:000000000000011c .L0 
     /tmp/ccwUHw8n.s:300    .text:0000000000000120 .L0 
     /tmp/ccwUHw8n.s:307    .text:0000000000000120 .L0 
     /tmp/ccwUHw8n.s:161    .text:0000000000000088 .L8
     /tmp/ccwUHw8n.s:191    .text:00000000000000a8 .L9
     /tmp/ccwUHw8n.s:221    .text:00000000000000cc .L10
     /tmp/ccwUHw8n.s:247    .text:00000000000000e0 .L11
     /tmp/ccwUHw8n.s:108    .text:0000000000000060 .L3
     /tmp/ccwUHw8n.s:962    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccwUHw8n.s:1779   .debug_str:00000000000002a0 .LASF58
     /tmp/ccwUHw8n.s:1741   .debug_str:00000000000000d9 .LASF59
     /tmp/ccwUHw8n.s:1751   .debug_str:0000000000000163 .LASF60
     /tmp/ccwUHw8n.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccwUHw8n.s:303    .text:0000000000000120 .Letext0
     /tmp/ccwUHw8n.s:1711   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccwUHw8n.s:1789   .debug_str:000000000000039b .LASF0
     /tmp/ccwUHw8n.s:1765   .debug_str:0000000000000203 .LASF1
     /tmp/ccwUHw8n.s:1757   .debug_str:00000000000001c1 .LASF2
     /tmp/ccwUHw8n.s:1729   .debug_str:000000000000006d .LASF4
     /tmp/ccwUHw8n.s:1763   .debug_str:00000000000001f1 .LASF3
     /tmp/ccwUHw8n.s:1717   .debug_str:0000000000000023 .LASF5
     /tmp/ccwUHw8n.s:1713   .debug_str:0000000000000000 .LASF6
     /tmp/ccwUHw8n.s:1745   .debug_str:0000000000000113 .LASF7
     /tmp/ccwUHw8n.s:1805   .debug_str:0000000000000403 .LASF8
GAS LISTING /tmp/ccwUHw8n.s 			page 11


     /tmp/ccwUHw8n.s:1725   .debug_str:0000000000000057 .LASF9
     /tmp/ccwUHw8n.s:1845   .debug_str:0000000000000518 .LASF10
     /tmp/ccwUHw8n.s:1801   .debug_str:00000000000003df .LASF11
     /tmp/ccwUHw8n.s:1833   .debug_str:00000000000004d3 .LASF12
     /tmp/ccwUHw8n.s:1809   .debug_str:0000000000000429 .LASF13
     /tmp/ccwUHw8n.s:1769   .debug_str:0000000000000231 .LASF14
     /tmp/ccwUHw8n.s:1735   .debug_str:00000000000000b3 .LASF15
     /tmp/ccwUHw8n.s:1807   .debug_str:0000000000000413 .LASF16
     /tmp/ccwUHw8n.s:1737   .debug_str:00000000000000c9 .LASF31
     /tmp/ccwUHw8n.s:1721   .debug_str:0000000000000037 .LASF17
     /tmp/ccwUHw8n.s:1723   .debug_str:0000000000000041 .LASF19
     /tmp/ccwUHw8n.s:1825   .debug_str:000000000000049b .LASF18
     /tmp/ccwUHw8n.s:1835   .debug_str:00000000000004e3 .LASF20
     /tmp/ccwUHw8n.s:1733   .debug_str:00000000000000aa .LASF23
     /tmp/ccwUHw8n.s:1803   .debug_str:00000000000003ee .LASF25
     /tmp/ccwUHw8n.s:1839   .debug_str:0000000000000502 .LASF21
     /tmp/ccwUHw8n.s:1753   .debug_str:000000000000018f .LASF22
     /tmp/ccwUHw8n.s:1793   .debug_str:00000000000003b0 .LASF24
     /tmp/ccwUHw8n.s:1755   .debug_str:00000000000001a8 .LASF26
     /tmp/ccwUHw8n.s:1797   .debug_str:00000000000003c4 .LASF61
     /tmp/ccwUHw8n.s:1773   .debug_str:0000000000000249 .LASF62
     /tmp/ccwUHw8n.s:1775   .debug_str:000000000000026c .LASF63
     /tmp/ccwUHw8n.s:1739   .debug_str:00000000000000cf .LASF27
     /tmp/ccwUHw8n.s:1831   .debug_str:00000000000004ca .LASF28
     /tmp/ccwUHw8n.s:1761   .debug_str:00000000000001de .LASF29
     /tmp/ccwUHw8n.s:1767   .debug_str:0000000000000216 .LASF30
     /tmp/ccwUHw8n.s:1715   .debug_str:0000000000000013 .LASF32
     /tmp/ccwUHw8n.s:1719   .debug_str:000000000000002a .LASF64
     /tmp/ccwUHw8n.s:1841   .debug_str:000000000000050e .LASF33
     /tmp/ccwUHw8n.s:1823   .debug_str:0000000000000496 .LASF34
     /tmp/ccwUHw8n.s:1843   .debug_str:0000000000000513 .LASF35
     /tmp/ccwUHw8n.s:1819   .debug_str:000000000000046c .LASF36
     /tmp/ccwUHw8n.s:1747   .debug_str:0000000000000126 .LASF37
     /tmp/ccwUHw8n.s:1837   .debug_str:00000000000004f8 .LASF38
     /tmp/ccwUHw8n.s:1827   .debug_str:00000000000004a4 .LASF40
     /tmp/ccwUHw8n.s:1811   .debug_str:0000000000000439 .LASF44
     /tmp/ccwUHw8n.s:1821   .debug_str:0000000000000475 .LASF45
     /tmp/ccwUHw8n.s:1759   .debug_str:00000000000001cf .LASF39
     /tmp/ccwUHw8n.s:1777   .debug_str:0000000000000279 .LASF41
     /tmp/ccwUHw8n.s:1815   .debug_str:0000000000000449 .LASF42
     /tmp/ccwUHw8n.s:1743   .debug_str:00000000000000e7 .LASF43
     /tmp/ccwUHw8n.s:1783   .debug_str:0000000000000371 .LASF46
     /tmp/ccwUHw8n.s:1771   .debug_str:000000000000023d .LASF47
     /tmp/ccwUHw8n.s:1731   .debug_str:0000000000000074 .LASF48
     /tmp/ccwUHw8n.s:1787   .debug_str:0000000000000396 .LASF49
     /tmp/ccwUHw8n.s:1785   .debug_str:000000000000038a .LASF50
     /tmp/ccwUHw8n.s:10     .text:0000000000000000 .LFB7
     /tmp/ccwUHw8n.s:270    .text:00000000000000f8 .LFE7
     /tmp/ccwUHw8n.s:1829   .debug_str:00000000000004c5 .LASF51
     /tmp/ccwUHw8n.s:1598   .debug_loc:0000000000000000 .LLST0
     /tmp/ccwUHw8n.s:1795   .debug_str:00000000000003bc .LASF52
     /tmp/ccwUHw8n.s:1615   .debug_loc:000000000000004b .LLST1
     /tmp/ccwUHw8n.s:1791   .debug_str:00000000000003a8 .LASF53
     /tmp/ccwUHw8n.s:1626   .debug_loc:0000000000000081 .LLST2
     /tmp/ccwUHw8n.s:164    .text:0000000000000088 .LBB38
     /tmp/ccwUHw8n.s:188    .text:00000000000000a4 .LBE38
     /tmp/ccwUHw8n.s:1817   .debug_str:000000000000045d .LASF54
GAS LISTING /tmp/ccwUHw8n.s 			page 12


     /tmp/ccwUHw8n.s:1649   .debug_loc:00000000000000f0 .LLST6
     /tmp/ccwUHw8n.s:1656   .debug_loc:0000000000000113 .LLST7
     /tmp/ccwUHw8n.s:177    .text:0000000000000094 .LVL12
     /tmp/ccwUHw8n.s:180    .text:00000000000000a0 .LVL13
     /tmp/ccwUHw8n.s:193    .text:00000000000000a8 .LBB34
     /tmp/ccwUHw8n.s:218    .text:00000000000000c8 .LBE34
     /tmp/ccwUHw8n.s:1663   .debug_loc:0000000000000136 .LLST5
     /tmp/ccwUHw8n.s:206    .text:00000000000000b4 .LVL16
     /tmp/ccwUHw8n.s:209    .text:00000000000000c0 .LVL17
     /tmp/ccwUHw8n.s:223    .text:00000000000000cc .LBB29
     /tmp/ccwUHw8n.s:244    .text:00000000000000dc .LBE29
     /tmp/ccwUHw8n.s:1727   .debug_str:0000000000000065 .LASF55
     /tmp/ccwUHw8n.s:1670   .debug_loc:0000000000000159 .LLST3
     /tmp/ccwUHw8n.s:228    .text:00000000000000d4 .LBB30
     /tmp/ccwUHw8n.s:236    .text:00000000000000d8 .LBE30
     /tmp/ccwUHw8n.s:1677   .debug_loc:000000000000017c .LLST4
     /tmp/ccwUHw8n.s:227    .text:00000000000000d4 .LVL19
     /tmp/ccwUHw8n.s:249    .text:00000000000000e0 .LBB28
     /tmp/ccwUHw8n.s:263    .text:00000000000000f4 .LBE28
     /tmp/ccwUHw8n.s:1781   .debug_str:0000000000000364 .LASF56
     /tmp/ccwUHw8n.s:253    .text:00000000000000e8 .LVL22
     /tmp/ccwUHw8n.s:255    .text:00000000000000f0 .LVL23
     /tmp/ccwUHw8n.s:31     .text:000000000000001c .LBB20
     /tmp/ccwUHw8n.s:45     .text:0000000000000020 .LBE20
     /tmp/ccwUHw8n.s:47     .text:0000000000000020 .LBB22
     /tmp/ccwUHw8n.s:60     .text:0000000000000024 .LBE22
     /tmp/ccwUHw8n.s:117    .text:0000000000000064 .LBB43
     /tmp/ccwUHw8n.s:128    .text:0000000000000068 .LBE43
     /tmp/ccwUHw8n.s:1684   .debug_loc:000000000000019f .LLST8
     /tmp/ccwUHw8n.s:130    .text:0000000000000068 .LBB45
     /tmp/ccwUHw8n.s:141    .text:000000000000006c .LBE45
     /tmp/ccwUHw8n.s:1691   .debug_loc:00000000000001c2 .LLST9
     /tmp/ccwUHw8n.s:102    .text:0000000000000054 .LVL3
     /tmp/ccwUHw8n.s:107    .text:0000000000000060 .LVL4
     /tmp/ccwUHw8n.s:1749   .debug_str:0000000000000146 .LASF57
     /tmp/ccwUHw8n.s:276    .text:00000000000000f8 .LFB6
     /tmp/ccwUHw8n.s:301    .text:0000000000000120 .LFE6
     /tmp/ccwUHw8n.s:290    .text:0000000000000110 .LVL24
     /tmp/ccwUHw8n.s:1799   .debug_str:00000000000003da .LASF65
     /tmp/ccwUHw8n.s:1813   .debug_str:0000000000000442 .LASF66
     /tmp/ccwUHw8n.s:41     .text:0000000000000020 .LVL0
     /tmp/ccwUHw8n.s:116    .text:0000000000000064 .LVL5
     /tmp/ccwUHw8n.s:151    .text:0000000000000078 .LVL8
     /tmp/ccwUHw8n.s:160    .text:0000000000000088 .LVL10
     /tmp/ccwUHw8n.s:56     .text:0000000000000024 .LVL1
     /tmp/ccwUHw8n.s:154    .text:000000000000007c .LVL9
     /tmp/ccwUHw8n.s:68     .text:0000000000000028 .LVL2
     /tmp/ccwUHw8n.s:190    .text:00000000000000a8 .LVL14
     /tmp/ccwUHw8n.s:220    .text:00000000000000cc .LVL18
     /tmp/ccwUHw8n.s:246    .text:00000000000000e0 .LVL21
     /tmp/ccwUHw8n.s:172    .text:000000000000008c .LVL11
     /tmp/ccwUHw8n.s:201    .text:00000000000000ac .LVL15
     /tmp/ccwUHw8n.s:234    .text:00000000000000d8 .LVL20
     /tmp/ccwUHw8n.s:125    .text:0000000000000068 .LVL6
     /tmp/ccwUHw8n.s:138    .text:000000000000006c .LVL7
     /tmp/ccwUHw8n.s:308    .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/ccwUHw8n.s 			page 13


UNDEFINED SYMBOLS
__putc
_ZN15MemoryAllocator8InstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN15MemoryAllocator19getLargestFreeBlockEv

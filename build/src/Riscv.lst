GAS LISTING /tmp/ccIj1CqZ.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 9/8/25.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../h/syscall_c.hpp"
   8:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/Riscv.cpp **** #include  "../h/print.hpp"
  10:src/Riscv.cpp **** #include "../h/SList.hpp"
  11:src/Riscv.cpp **** using Body=void(*)(void*);
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 13 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  14:src/Riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 14 5
  21              		.loc 1 14 38 is_stmt 0
  22              	#APP
  23              	# 14 "src/Riscv.cpp" 1
  15              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 15 5 is_stmt 1
  27              		.loc 1 15 29 is_stmt 0
  28              	# 15 "src/Riscv.cpp" 1
  16              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 16 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE35:
  42              		.align	2
  43              		.globl	_ZN5Riscv10restoreSPPEv
GAS LISTING /tmp/ccIj1CqZ.s 			page 2


  45              	_ZN5Riscv10restoreSPPEv:
  46              	.LFB36:
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** void Riscv::restoreSPP() {
  47              		.loc 1 18 26 is_stmt 1
  48              		.cfi_startproc
  49 0020 130101FF 		addi	sp,sp,-16
  50              		.cfi_def_cfa_offset 16
  51 0024 23348100 		sd	s0,8(sp)
  52              		.cfi_offset 8, -8
  53 0028 13040101 		addi	s0,sp,16
  54              		.cfi_def_cfa 8, 0
  19:src/Riscv.cpp **** 
  20:src/Riscv.cpp ****     if(TCB::running->sys)
  55              		.loc 1 20 5
  56              		.loc 1 20 22 is_stmt 0
  57 002c 97070000 		la	a5,_ZN3TCB7runningE
  57      83B70700 
  58 0034 83B70700 		ld	a5,0(a5)
  59 0038 83C71700 		lbu	a5,1(a5)
  60              		.loc 1 20 5
  61 003c 638C0700 		beqz	a5,.L4
  21:src/Riscv.cpp ****         ms_sstatus(SSTATUS_SPP);
  62              		.loc 1 21 9 is_stmt 1
  63              	.LVL0:
  64              	.LBB69:
  65              	.LBB70:
  66              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 9/8/25.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_COPY_RISCV_HPP
   7:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/Riscv.hpp **** #include "BBuff.hpp"
   9:src/../h/Riscv.hpp **** class Riscv {
  10:src/../h/Riscv.hpp **** public:
  11:src/../h/Riscv.hpp ****     static void set_stvec(uint64 stvec);
  12:src/../h/Riscv.hpp ****     static void set_sepc(uint64 sepc);
  13:src/../h/Riscv.hpp ****     static uint64 get_sepc();
  14:src/../h/Riscv.hpp ****     static void set_sstatus(uint64 sstatus);
  15:src/../h/Riscv.hpp ****     static uint64 get_sstatus();
  16:src/../h/Riscv.hpp ****     static uint64 get_scause();
  17:src/../h/Riscv.hpp ****     static uint64 get_stval();
  18:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  19:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  20:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  21:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void InitBBuffs();
  24:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  25:src/../h/Riscv.hpp ****     {
  26:src/../h/Riscv.hpp ****         SSTATUS_SIE=(1UL<<1),
  27:src/../h/Riscv.hpp ****         SSTATUS_SPIE=(1UL<<5),
  28:src/../h/Riscv.hpp ****         SSTATUS_SPP=(1UL<<8)
  29:src/../h/Riscv.hpp ****     };
GAS LISTING /tmp/ccIj1CqZ.s 			page 3


  30:src/../h/Riscv.hpp ****     enum BitMaskSip: uint64
  31:src/../h/Riscv.hpp ****     {
  32:src/../h/Riscv.hpp ****         SIP_SSIP=(1UL<<1),
  33:src/../h/Riscv.hpp ****         SIP_STIP=(1UL<<5),
  34:src/../h/Riscv.hpp ****         SIP_SEIP=(1UL<<9)
  35:src/../h/Riscv.hpp ****     };
  36:src/../h/Riscv.hpp ****     enum BitMaskSie: uint64
  37:src/../h/Riscv.hpp ****     {
  38:src/../h/Riscv.hpp ****         SIE_SSIE=(1UL<<1),
  39:src/../h/Riscv.hpp ****         SIE_SEIE=(1UL<<9)
  40:src/../h/Riscv.hpp ****     };
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static void SupervisorTrap();
  44:src/../h/Riscv.hpp ****     static void popSppSpie();
  45:src/../h/Riscv.hpp ****     static void SupervisorTrapHandler();
  46:src/../h/Riscv.hpp ****     static void restoreSPP();
  47:src/../h/Riscv.hpp **** 
  48:src/../h/Riscv.hpp **** 
  49:src/../h/Riscv.hpp ****     static BBuff* INbuff;
  50:src/../h/Riscv.hpp ****     static BBuff* OUTbuff;
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** };
  53:src/../h/Riscv.hpp **** 
  54:src/../h/Riscv.hpp **** 
  55:src/../h/Riscv.hpp **** inline void Riscv::set_stvec(uint64 stvec) {
  56:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[x]" :: [x] "r" (stvec));
  57:src/../h/Riscv.hpp **** }
  58:src/../h/Riscv.hpp **** 
  59:src/../h/Riscv.hpp **** inline void Riscv::set_sepc(uint64 sepc) {
  60:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[x]" :: [x] "r" (sepc));
  61:src/../h/Riscv.hpp **** }
  62:src/../h/Riscv.hpp **** 
  63:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sepc() {
  64:src/../h/Riscv.hpp ****     uint64 sepc;
  65:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
  66:src/../h/Riscv.hpp ****     return sepc;
  67:src/../h/Riscv.hpp **** }
  68:src/../h/Riscv.hpp **** 
  69:src/../h/Riscv.hpp **** inline void Riscv::set_sstatus(uint64 sstatus) {
  70:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[x]" :: [x] "r" (sstatus));
  71:src/../h/Riscv.hpp **** }
  72:src/../h/Riscv.hpp **** 
  73:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sstatus() {
  74:src/../h/Riscv.hpp ****     uint64 sstatus;
  75:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
  76:src/../h/Riscv.hpp ****     return sstatus;
  77:src/../h/Riscv.hpp **** }
  78:src/../h/Riscv.hpp **** 
  79:src/../h/Riscv.hpp **** inline uint64 Riscv::get_scause() {
  80:src/../h/Riscv.hpp ****     uint64 volatile scause;
  81:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
  82:src/../h/Riscv.hpp ****     return scause;
  83:src/../h/Riscv.hpp **** }
  84:src/../h/Riscv.hpp **** inline uint64 Riscv::get_stval() {
  85:src/../h/Riscv.hpp ****     uint64 volatile stval;
  86:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
GAS LISTING /tmp/ccIj1CqZ.s 			page 4


  87:src/../h/Riscv.hpp ****     return stval;
  88:src/../h/Riscv.hpp **** }
  89:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
  90:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus,%[mask]"::[mask]"r"(mask));
  67              		.loc 2 90 5
  68              		.loc 2 90 62 is_stmt 0
  69 0040 93070010 		li	a5,256
  70              	#APP
  71              	# 90 "src/../h/Riscv.hpp" 1
  91              	}
  72              		csrs sstatus,a5
  73              	# 0 "" 2
  74              	.LVL1:
  75              	#NO_APP
  76              	.L3:
  77              	.LBE70:
  78              	.LBE69:
  22:src/Riscv.cpp ****     else
  23:src/Riscv.cpp ****         mc_sstatus(SSTATUS_SPP);
  24:src/Riscv.cpp **** }
  79              		.loc 1 24 1
  80 0048 03348100 		ld	s0,8(sp)
  81              		.cfi_remember_state
  82              		.cfi_restore 8
  83              		.cfi_def_cfa 2, 16
  84 004c 13010101 		addi	sp,sp,16
  85              		.cfi_def_cfa_offset 0
  86 0050 67800000 		jr	ra
  87              	.L4:
  88              		.cfi_restore_state
  23:src/Riscv.cpp **** }
  89              		.loc 1 23 9 is_stmt 1
  90              	.LVL2:
  91              	.LBB71:
  92              	.LBB72:
  92:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
  93:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus,%[mask]"::[mask]"r"(mask));
  93              		.loc 2 93 5
  94              		.loc 2 93 62 is_stmt 0
  95 0054 93070010 		li	a5,256
  96              	#APP
  97              	# 93 "src/../h/Riscv.hpp" 1
  94              	}
  98              		csrc sstatus,a5
  99              	# 0 "" 2
 100              	.LVL3:
 101              	#NO_APP
 102              	.LBE72:
 103              	.LBE71:
 104              		.loc 1 24 1
 105 005c 6FF0DFFE 		j	.L3
 106              		.cfi_endproc
 107              	.LFE36:
 109              		.align	2
 110              		.globl	_ZN5Riscv10InitBBuffsEv
 112              	_ZN5Riscv10InitBBuffsEv:
 113              	.LFB37:
GAS LISTING /tmp/ccIj1CqZ.s 			page 5


  25:src/Riscv.cpp **** 
  26:src/Riscv.cpp **** 
  27:src/Riscv.cpp **** BBuff* Riscv::INbuff = nullptr;
  28:src/Riscv.cpp **** BBuff* Riscv::OUTbuff = nullptr;
  29:src/Riscv.cpp **** 
  30:src/Riscv.cpp **** void Riscv::InitBBuffs() {
 114              		.loc 1 30 26 is_stmt 1
 115              		.cfi_startproc
 116              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 117              		.cfi_lsda 0x1b,.LLSDA37
 118 0060 130101FE 		addi	sp,sp,-32
 119              		.cfi_def_cfa_offset 32
 120 0064 233C1100 		sd	ra,24(sp)
 121 0068 23388100 		sd	s0,16(sp)
 122 006c 23349100 		sd	s1,8(sp)
 123 0070 23302101 		sd	s2,0(sp)
 124              		.cfi_offset 1, -8
 125              		.cfi_offset 8, -16
 126              		.cfi_offset 9, -24
 127              		.cfi_offset 18, -32
 128 0074 13040102 		addi	s0,sp,32
 129              		.cfi_def_cfa 8, 0
  31:src/Riscv.cpp ****     if (INbuff==nullptr) {
 130              		.loc 1 31 5
 131              		.loc 1 31 15 is_stmt 0
 132 0078 97070000 		ld	a5,.LANCHOR0
 132      83B70700 
 133              		.loc 1 31 5
 134 0080 63840702 		beqz	a5,.L15
 135              	.L8:
  32:src/Riscv.cpp ****         INbuff=new BBuff(256);
  33:src/Riscv.cpp ****     }
  34:src/Riscv.cpp ****     if (OUTbuff==nullptr) {
 136              		.loc 1 34 5 is_stmt 1
 137              		.loc 1 34 16 is_stmt 0
 138 0084 97070000 		ld	a5,.LANCHOR0+8
 138      83B70700 
 139              		.loc 1 34 5
 140 008c 63820704 		beqz	a5,.L16
 141              	.L7:
  35:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
  36:src/Riscv.cpp ****     }
  37:src/Riscv.cpp **** }
 142              		.loc 1 37 1
 143 0090 83308101 		ld	ra,24(sp)
 144              		.cfi_remember_state
 145              		.cfi_restore 1
 146 0094 03340101 		ld	s0,16(sp)
 147              		.cfi_restore 8
 148              		.cfi_def_cfa 2, 32
 149 0098 83348100 		ld	s1,8(sp)
 150              		.cfi_restore 9
 151 009c 03390100 		ld	s2,0(sp)
 152              		.cfi_restore 18
 153 00a0 13010102 		addi	sp,sp,32
 154              		.cfi_def_cfa_offset 0
 155 00a4 67800000 		jr	ra
GAS LISTING /tmp/ccIj1CqZ.s 			page 6


 156              	.L15:
 157              		.cfi_restore_state
  32:src/Riscv.cpp ****         INbuff=new BBuff(256);
 158              		.loc 1 32 9 is_stmt 1
  32:src/Riscv.cpp ****         INbuff=new BBuff(256);
 159              		.loc 1 32 29 is_stmt 0
 160 00a8 13050003 		li	a0,48
 161              	.LEHB0:
 162 00ac 97000000 		call	_Znwm@plt
 162      E7800000 
 163              	.LVL4:
 164              	.LEHE0:
 165 00b4 93040500 		mv	s1,a0
 166 00b8 93050010 		li	a1,256
 167              	.LEHB1:
 168 00bc 97000000 		call	_ZN5BBuffC1Ei@plt
 168      E7800000 
 169              	.LVL5:
 170              	.LEHE1:
  32:src/Riscv.cpp ****         INbuff=new BBuff(256);
 171              		.loc 1 32 15 discriminator 2
 172 00c4 97070000 		sd	s1,.LANCHOR0,a5
 172      23B09700 
 173 00cc 6FF09FFB 		j	.L8
 174              	.L16:
  35:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 175              		.loc 1 35 9 is_stmt 1
  35:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 176              		.loc 1 35 30 is_stmt 0
 177 00d0 13050003 		li	a0,48
 178              	.LEHB2:
 179 00d4 97000000 		call	_Znwm@plt
 179      E7800000 
 180              	.LVL6:
 181              	.LEHE2:
 182 00dc 93040500 		mv	s1,a0
 183 00e0 93050010 		li	a1,256
 184              	.LEHB3:
 185 00e4 97000000 		call	_ZN5BBuffC1Ei@plt
 185      E7800000 
 186              	.LVL7:
 187              	.LEHE3:
  35:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 188              		.loc 1 35 16 discriminator 2
 189 00ec 97070000 		sd	s1,.LANCHOR0+8,a5
 189      23B09700 
 190              		.loc 1 37 1 discriminator 2
 191 00f4 6FF0DFF9 		j	.L7
 192              	.L12:
 193 00f8 13090500 		mv	s2,a0
  32:src/Riscv.cpp ****         INbuff=new BBuff(256);
 194              		.loc 1 32 29
 195 00fc 13850400 		mv	a0,s1
 196 0100 97000000 		call	_ZdlPv@plt
 196      E7800000 
 197              	.LVL8:
 198 0108 13050900 		mv	a0,s2
GAS LISTING /tmp/ccIj1CqZ.s 			page 7


 199              	.LEHB4:
 200 010c 97000000 		call	_Unwind_Resume@plt
 200      E7800000 
 201              	.LVL9:
 202              	.L13:
 203 0114 13090500 		mv	s2,a0
  35:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 204              		.loc 1 35 30
 205 0118 13850400 		mv	a0,s1
 206 011c 97000000 		call	_ZdlPv@plt
 206      E7800000 
 207              	.LVL10:
 208 0124 13050900 		mv	a0,s2
 209 0128 97000000 		call	_Unwind_Resume@plt
 209      E7800000 
 210              	.LVL11:
 211              	.LEHE4:
 212              		.cfi_endproc
 213              	.LFE37:
 214              		.globl	__gxx_personality_v0
 215              		.section	.gcc_except_table,"a",@progbits
 216              	.LLSDA37:
 217 0000 FF       		.byte	0xff
 218 0001 FF       		.byte	0xff
 219 0002 03       		.byte	0x3
 220 0003 41       		.byte	0x41
 221 0004 00000000 		.4byte	.LEHB0-.LFB37
 222 0008 00000000 		.4byte	.LEHE0-.LEHB0
 223 000c 00000000 		.4byte	0
 224 0010 00       		.byte	0
 225 0011 00000000 		.4byte	.LEHB1-.LFB37
 226 0015 00000000 		.4byte	.LEHE1-.LEHB1
 227 0019 00000000 		.4byte	.L12-.LFB37
 228 001d 00       		.byte	0
 229 001e 00000000 		.4byte	.LEHB2-.LFB37
 230 0022 00000000 		.4byte	.LEHE2-.LEHB2
 231 0026 00000000 		.4byte	0
 232 002a 00       		.byte	0
 233 002b 00000000 		.4byte	.LEHB3-.LFB37
 234 002f 00000000 		.4byte	.LEHE3-.LEHB3
 235 0033 00000000 		.4byte	.L13-.LFB37
 236 0037 00       		.byte	0
 237 0038 00000000 		.4byte	.LEHB4-.LFB37
 238 003c 00000000 		.4byte	.LEHE4-.LEHB4
 239 0040 00000000 		.4byte	0
 240 0044 00       		.byte	0
 241              		.text
 243              		.section	.rodata.str1.8,"aMS",@progbits,1
 244              		.align	3
 245              	.LC0:
 246 0000 73636175 		.string	"scause:"
 246      73653A00 
 247              		.align	3
 248              	.LC1:
 249 0008 0A00     		.string	"\n"
 250 000a 00000000 		.align	3
 250      0000
GAS LISTING /tmp/ccIj1CqZ.s 			page 8


 251              	.LC2:
 252 0010 73747661 		.string	"stval:"
 252      6C3A00
 253 0017 00       		.align	3
 254              	.LC3:
 255 0018 73657063 		.string	"sepc:"
 255      3A00
 256              		.text
 257              		.align	2
 258              		.globl	_ZN5Riscv21SupervisorTrapHandlerEv
 260              	_ZN5Riscv21SupervisorTrapHandlerEv:
 261              	.LFB38:
  38:src/Riscv.cpp **** 
  39:src/Riscv.cpp **** void Riscv::SupervisorTrapHandler() {
 262              		.loc 1 39 37 is_stmt 1
 263              		.cfi_startproc
 264 0130 130101FA 		addi	sp,sp,-96
 265              		.cfi_def_cfa_offset 96
 266 0134 233C1104 		sd	ra,88(sp)
 267 0138 23388104 		sd	s0,80(sp)
 268 013c 23349104 		sd	s1,72(sp)
 269 0140 23302105 		sd	s2,64(sp)
 270 0144 233C3103 		sd	s3,56(sp)
 271 0148 23384103 		sd	s4,48(sp)
 272 014c 23345103 		sd	s5,40(sp)
 273              		.cfi_offset 1, -8
 274              		.cfi_offset 8, -16
 275              		.cfi_offset 9, -24
 276              		.cfi_offset 18, -32
 277              		.cfi_offset 19, -40
 278              		.cfi_offset 20, -48
 279              		.cfi_offset 21, -56
 280 0150 13040106 		addi	s0,sp,96
 281              		.cfi_def_cfa 8, 0
  40:src/Riscv.cpp ****     uint64 sepc;
 282              		.loc 1 40 5
  41:src/Riscv.cpp ****     uint64 sstatus;
 283              		.loc 1 41 5
  42:src/Riscv.cpp ****     uint64 scause=get_scause();
 284              		.loc 1 42 5
 285              	.LBB73:
 286              	.LBB74:
  80:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 287              		.loc 2 80 5
  81:src/../h/Riscv.hpp ****     return scause;
 288              		.loc 2 81 5
  81:src/../h/Riscv.hpp ****     return scause;
 289              		.loc 2 81 68 is_stmt 0
 290              	#APP
 291              	# 81 "src/../h/Riscv.hpp" 1
 292              		csrr a5, scause
 293              	# 0 "" 2
 294              	#NO_APP
 295 0158 2334F4FA 		sd	a5,-88(s0)
  82:src/../h/Riscv.hpp **** }
 296              		.loc 2 82 5 is_stmt 1
  82:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccIj1CqZ.s 			page 9


 297              		.loc 2 82 12 is_stmt 0
 298 015c 033784FA 		ld	a4,-88(s0)
 299              	.LVL12:
 300              	.LBE74:
 301              	.LBE73:
  43:src/Riscv.cpp ****     sepc=get_sepc();
 302              		.loc 1 43 5 is_stmt 1
 303              	.LBB75:
 304              	.LBB76:
  64:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
 305              		.loc 2 64 5
  65:src/../h/Riscv.hpp ****     return sepc;
 306              		.loc 2 65 5
  65:src/../h/Riscv.hpp ****     return sepc;
 307              		.loc 2 65 58 is_stmt 0
 308              	#APP
 309              	# 65 "src/../h/Riscv.hpp" 1
 310              		csrr s1,sepc
 311              	# 0 "" 2
 312              	.LVL13:
  66:src/../h/Riscv.hpp **** }
 313              		.loc 2 66 5 is_stmt 1
 314              	#NO_APP
 315              	.LBE76:
 316              	.LBE75:
  44:src/Riscv.cpp ****     sstatus=get_sstatus();
 317              		.loc 1 44 5
 318              	.LBB77:
 319              	.LBB78:
  74:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
 320              		.loc 2 74 5
  75:src/../h/Riscv.hpp ****     return sstatus;
 321              		.loc 2 75 5
  75:src/../h/Riscv.hpp ****     return sstatus;
 322              		.loc 2 75 64 is_stmt 0
 323              	#APP
 324              	# 75 "src/../h/Riscv.hpp" 1
 325              		csrr s2,sstatus
 326              	# 0 "" 2
 327              	.LVL14:
  76:src/../h/Riscv.hpp **** }
 328              		.loc 2 76 5 is_stmt 1
 329              	#NO_APP
 330              	.LBE78:
 331              	.LBE77:
  45:src/Riscv.cpp ****     if (scause == 0x8000000000000001UL) {
 332              		.loc 1 45 5
 333              	.LBB79:
 334 0168 9307F0FF 		li	a5,-1
 335 016c 9397F703 		slli	a5,a5,63
 336 0170 93871700 		addi	a5,a5,1
 337 0174 6304F712 		beq	a4,a5,.L44
 338              	.LBE79:
  46:src/Riscv.cpp ****         // interrupt from timer
  47:src/Riscv.cpp **** 
  48:src/Riscv.cpp ****         TCB::timeCounter++;
  49:src/Riscv.cpp ****         SList::oneTick();
GAS LISTING /tmp/ccIj1CqZ.s 			page 10


  50:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
  51:src/Riscv.cpp ****             TCB::dispatch();
  52:src/Riscv.cpp ****             set_sepc(sepc);
  53:src/Riscv.cpp ****             set_sstatus(sstatus);
  54:src/Riscv.cpp ****         }
  55:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  56:src/Riscv.cpp ****     }
  57:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL) {
 339              		.loc 1 57 10
 340              	.LBB275:
 341              	.LBB80:
 342 0178 9307F0FF 		li	a5,-1
 343 017c 9397F703 		slli	a5,a5,63
 344 0180 93879700 		addi	a5,a5,9
 345 0184 6306F716 		beq	a4,a5,.L45
 346              	.LBB81:
  58:src/Riscv.cpp ****         // interrupt from keyboard
  59:src/Riscv.cpp **** 
  60:src/Riscv.cpp ****         int irq = plic_claim();
  61:src/Riscv.cpp ****         if(irq==0x0a)
  62:src/Riscv.cpp ****         {
  63:src/Riscv.cpp ****             volatile char status = (*(char*)CONSOLE_STATUS);
  64:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
  65:src/Riscv.cpp ****             {
  66:src/Riscv.cpp ****                 volatile  char c = (*(char*)CONSOLE_RX_DATA);
  67:src/Riscv.cpp ****                 INbuff->put(c);
  68:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
  69:src/Riscv.cpp ****             }
  70:src/Riscv.cpp **** 
  71:src/Riscv.cpp ****         }
  72:src/Riscv.cpp ****         plic_complete(irq);
  73:src/Riscv.cpp ****         set_sepc(sepc);
  74:src/Riscv.cpp ****         set_sstatus(sstatus);
  75:src/Riscv.cpp ****         //console_handler();
  76:src/Riscv.cpp ****     }
  77:src/Riscv.cpp ****     else {
  78:src/Riscv.cpp ****         uint64 syscode;
 347              		.loc 1 78 9
  79:src/Riscv.cpp ****     __asm__ volatile ("mv %[x], a0" : [x] "=r" (syscode));
 348              		.loc 1 79 5
 349              		.loc 1 79 58 is_stmt 0
 350              	#APP
 351              	# 79 "src/Riscv.cpp" 1
  80              	
 352              		mv a5, a0
 353              	# 0 "" 2
 354              	.LVL15:
  81:src/Riscv.cpp ****     if (syscode==MEM_ALLOC) {
 355              		.loc 1 81 5 is_stmt 1
 356              	#NO_APP
 357              	.LBB82:
 358 018c 13071000 		li	a4,1
 359              	.LVL16:
 360 0190 6382E71E 		beq	a5,a4,.L46
 361              	.LBE82:
 362              	.LBE81:
 363              	.LBE80:
GAS LISTING /tmp/ccIj1CqZ.s 			page 11


 364              	.LBE275:
  82:src/Riscv.cpp ****         size_t size_in_blocks;
  83:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
  84:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
  85:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
  86:src/Riscv.cpp ****     }
  87:src/Riscv.cpp ****     else if (syscode==MEM_FREE) {
 365              		.loc 1 87 10
 366              	.LBB276:
 367              	.LBB252:
 368              	.LBB228:
 369              	.LBB209:
 370              	.LBB83:
 371 0194 13072000 		li	a4,2
 372 0198 6384E722 		beq	a5,a4,.L47
 373              	.LBE83:
 374              	.LBE209:
 375              	.LBE228:
 376              	.LBE252:
 377              	.LBE276:
  88:src/Riscv.cpp ****         void* ptr;
  89:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
  90:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
  92:src/Riscv.cpp ****     }
  93:src/Riscv.cpp ****     else if (syscode==MEM_GET_FREE_SPACE) {
 378              		.loc 1 93 10
 379              	.LBB277:
 380              	.LBB253:
 381              	.LBB229:
 382              	.LBB210:
 383              	.LBB195:
 384              	.LBB84:
 385 019c 13073000 		li	a4,3
 386 01a0 6382E724 		beq	a5,a4,.L48
 387              	.LBE84:
 388              	.LBE195:
 389              	.LBE210:
 390              	.LBE229:
 391              	.LBE253:
 392              	.LBE277:
  94:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
  95:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
  96:src/Riscv.cpp ****     }
  97:src/Riscv.cpp ****     else if (syscode==MEM_GET_LARGEST_FREE_BLOCK) {
 393              		.loc 1 97 10
 394              	.LBB278:
 395              	.LBB254:
 396              	.LBB230:
 397              	.LBB211:
 398              	.LBB196:
 399              	.LBB182:
 400              	.LBB85:
 401 01a4 13074000 		li	a4,4
 402 01a8 6388E724 		beq	a5,a4,.L49
 403              	.LBE85:
 404              	.LBE182:
GAS LISTING /tmp/ccIj1CqZ.s 			page 12


 405              	.LBE196:
 406              	.LBE211:
 407              	.LBE230:
 408              	.LBE254:
 409              	.LBE278:
  98:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
  99:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 100:src/Riscv.cpp ****     }
 101:src/Riscv.cpp ****     else if (syscode==THREAD_CREATE) {
 410              		.loc 1 101 10
 411              	.LBB279:
 412              	.LBB255:
 413              	.LBB231:
 414              	.LBB212:
 415              	.LBB197:
 416              	.LBB183:
 417              	.LBB168:
 418              	.LBB86:
 419 01ac 13071001 		li	a4,17
 420 01b0 6380E726 		beq	a5,a4,.L50
 421              	.LBE86:
 422              	.LBE168:
 423              	.LBE183:
 424              	.LBE197:
 425              	.LBE212:
 426              	.LBE231:
 427              	.LBE255:
 428              	.LBE279:
 102:src/Riscv.cpp ****         thread_t* handle;
 103:src/Riscv.cpp ****         Body start_routine;
 104:src/Riscv.cpp ****         void* arg;
 105:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 106:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 107:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 108:src/Riscv.cpp **** 
 109:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 110:src/Riscv.cpp **** 
 111:src/Riscv.cpp **** 
 112:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 113:src/Riscv.cpp ****         int ret=0;
 114:src/Riscv.cpp ****         if (*handle) {
 115:src/Riscv.cpp ****             ret=0;
 116:src/Riscv.cpp ****         }
 117:src/Riscv.cpp ****         else {
 118:src/Riscv.cpp ****             ret=1;
 119:src/Riscv.cpp ****         }
 120:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 121:src/Riscv.cpp ****     }
 122:src/Riscv.cpp ****     else if (syscode==THREAD_EXIT) {
 429              		.loc 1 122 10
 430              	.LBB280:
 431              	.LBB256:
 432              	.LBB232:
 433              	.LBB213:
 434              	.LBB198:
 435              	.LBB184:
 436              	.LBB169:
GAS LISTING /tmp/ccIj1CqZ.s 			page 13


 437              	.LBB157:
 438              	.LBB87:
 439 01b4 13072001 		li	a4,18
 440 01b8 6384E72A 		beq	a5,a4,.L51
 441              	.LBE87:
 442              	.LBE157:
 443              	.LBE169:
 444              	.LBE184:
 445              	.LBE198:
 446              	.LBE213:
 447              	.LBE232:
 448              	.LBE256:
 449              	.LBE280:
 123:src/Riscv.cpp ****         int ret = TCB::exit();
 124:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 125:src/Riscv.cpp ****     }
 126:src/Riscv.cpp ****     else if (syscode==THREAD_DISPATCH) {
 450              		.loc 1 126 10
 451              	.LBB281:
 452              	.LBB257:
 453              	.LBB233:
 454              	.LBB214:
 455              	.LBB199:
 456              	.LBB185:
 457              	.LBB170:
 458              	.LBB158:
 459              	.LBB146:
 460              	.LBB88:
 461 01bc 13073001 		li	a4,19
 462 01c0 6388E72A 		beq	a5,a4,.L52
 463              	.LBE88:
 464              	.LBE146:
 465              	.LBE158:
 466              	.LBE170:
 467              	.LBE185:
 468              	.LBE199:
 469              	.LBE214:
 470              	.LBE233:
 471              	.LBE257:
 472              	.LBE281:
 127:src/Riscv.cpp ****         TCB::dispatch();
 128:src/Riscv.cpp ****     }
 129:src/Riscv.cpp ****     else if (syscode==SEM_OPEN) {
 473              		.loc 1 129 10
 474              	.LBB282:
 475              	.LBB258:
 476              	.LBB234:
 477              	.LBB215:
 478              	.LBB200:
 479              	.LBB186:
 480              	.LBB171:
 481              	.LBB159:
 482              	.LBB147:
 483              	.LBB137:
 484              	.LBB89:
 485 01c4 13071002 		li	a4,33
 486 01c8 638AE72A 		beq	a5,a4,.L53
GAS LISTING /tmp/ccIj1CqZ.s 			page 14


 487              	.LBE89:
 488              	.LBE137:
 489              	.LBE147:
 490              	.LBE159:
 491              	.LBE171:
 492              	.LBE186:
 493              	.LBE200:
 494              	.LBE215:
 495              	.LBE234:
 496              	.LBE258:
 497              	.LBE282:
 130:src/Riscv.cpp ****         sem_t* handle;
 131:src/Riscv.cpp ****         unsigned init;
 132:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 133:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 134:src/Riscv.cpp **** 
 135:src/Riscv.cpp ****         *handle=SEM::open(init);
 136:src/Riscv.cpp ****         int ret=0;
 137:src/Riscv.cpp ****         if (*handle) {
 138:src/Riscv.cpp ****             ret=0;
 139:src/Riscv.cpp ****         }
 140:src/Riscv.cpp ****         else {
 141:src/Riscv.cpp ****             ret=1;
 142:src/Riscv.cpp ****         }
 143:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 144:src/Riscv.cpp ****     }
 145:src/Riscv.cpp ****     else if (syscode==SEM_CLOSE) {
 498              		.loc 1 145 10
 499              	.LBB283:
 500              	.LBB259:
 501              	.LBB235:
 502              	.LBB216:
 503              	.LBB201:
 504              	.LBB187:
 505              	.LBB172:
 506              	.LBB160:
 507              	.LBB148:
 508              	.LBB138:
 509              	.LBB130:
 510              	.LBB90:
 511 01cc 13072002 		li	a4,34
 512 01d0 638EE72C 		beq	a5,a4,.L54
 513              	.LBE90:
 514              	.LBE130:
 515              	.LBE138:
 516              	.LBE148:
 517              	.LBE160:
 518              	.LBE172:
 519              	.LBE187:
 520              	.LBE201:
 521              	.LBE216:
 522              	.LBE235:
 523              	.LBE259:
 524              	.LBE283:
 146:src/Riscv.cpp ****         sem_t handle;
 147:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 148:src/Riscv.cpp ****         int ret=handle->close();
GAS LISTING /tmp/ccIj1CqZ.s 			page 15


 149:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 150:src/Riscv.cpp ****     }
 151:src/Riscv.cpp ****     else if (syscode==SEM_WAIT) {
 525              		.loc 1 151 10
 526              	.LBB284:
 527              	.LBB260:
 528              	.LBB236:
 529              	.LBB217:
 530              	.LBB202:
 531              	.LBB188:
 532              	.LBB173:
 533              	.LBB161:
 534              	.LBB149:
 535              	.LBB139:
 536              	.LBB131:
 537              	.LBB122:
 538              	.LBB91:
 539 01d4 13073002 		li	a4,35
 540 01d8 6384E72E 		beq	a5,a4,.L55
 541              	.LBE91:
 542              	.LBE122:
 543              	.LBE131:
 544              	.LBE139:
 545              	.LBE149:
 546              	.LBE161:
 547              	.LBE173:
 548              	.LBE188:
 549              	.LBE202:
 550              	.LBE217:
 551              	.LBE236:
 552              	.LBE260:
 553              	.LBE284:
 152:src/Riscv.cpp ****         sem_t handle;
 153:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 154:src/Riscv.cpp ****         int ret=handle->wait();
 155:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 156:src/Riscv.cpp ****     }
 157:src/Riscv.cpp ****     else if (syscode==SEM_SIGNAL) {
 554              		.loc 1 157 10
 555              	.LBB285:
 556              	.LBB261:
 557              	.LBB237:
 558              	.LBB218:
 559              	.LBB203:
 560              	.LBB189:
 561              	.LBB174:
 562              	.LBB162:
 563              	.LBB150:
 564              	.LBB140:
 565              	.LBB132:
 566              	.LBB123:
 567              	.LBB116:
 568              	.LBB92:
 569 01dc 13074002 		li	a4,36
 570 01e0 638AE72E 		beq	a5,a4,.L56
 571              	.LBE92:
 572              	.LBE116:
GAS LISTING /tmp/ccIj1CqZ.s 			page 16


 573              	.LBE123:
 574              	.LBE132:
 575              	.LBE140:
 576              	.LBE150:
 577              	.LBE162:
 578              	.LBE174:
 579              	.LBE189:
 580              	.LBE203:
 581              	.LBE218:
 582              	.LBE237:
 583              	.LBE261:
 584              	.LBE285:
 158:src/Riscv.cpp ****         sem_t handle;
 159:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 160:src/Riscv.cpp ****         int ret=handle->signal();
 161:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 162:src/Riscv.cpp ****     }
 163:src/Riscv.cpp ****     else if (syscode==TIME_SLEEP) {
 585              		.loc 1 163 10
 586              	.LBB286:
 587              	.LBB262:
 588              	.LBB238:
 589              	.LBB219:
 590              	.LBB204:
 591              	.LBB190:
 592              	.LBB175:
 593              	.LBB163:
 594              	.LBB151:
 595              	.LBB141:
 596              	.LBB133:
 597              	.LBB124:
 598              	.LBB117:
 599              	.LBB111:
 600              	.LBB93:
 601 01e4 13071003 		li	a4,49
 602 01e8 6380E730 		beq	a5,a4,.L57
 603              	.LBE93:
 604              	.LBE111:
 605              	.LBE117:
 606              	.LBE124:
 607              	.LBE133:
 608              	.LBE141:
 609              	.LBE151:
 610              	.LBE163:
 611              	.LBE175:
 612              	.LBE190:
 613              	.LBE204:
 614              	.LBE219:
 615              	.LBE238:
 616              	.LBE262:
 617              	.LBE286:
 164:src/Riscv.cpp ****         time_t sleepTime;
 165:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 166:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 167:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 168:src/Riscv.cpp ****     }
 169:src/Riscv.cpp ****     else if (syscode==GETCHAR) {
GAS LISTING /tmp/ccIj1CqZ.s 			page 17


 618              		.loc 1 169 10
 619              	.LBB287:
 620              	.LBB263:
 621              	.LBB239:
 622              	.LBB220:
 623              	.LBB205:
 624              	.LBB191:
 625              	.LBB176:
 626              	.LBB164:
 627              	.LBB152:
 628              	.LBB142:
 629              	.LBB134:
 630              	.LBB125:
 631              	.LBB118:
 632              	.LBB112:
 633              	.LBB107:
 634              	.LBB94:
 635 01ec 13071004 		li	a4,65
 636 01f0 6386E730 		beq	a5,a4,.L58
 637              	.LBE94:
 638              	.LBE107:
 639              	.LBE112:
 640              	.LBE118:
 641              	.LBE125:
 642              	.LBE134:
 643              	.LBE142:
 644              	.LBE152:
 645              	.LBE164:
 646              	.LBE176:
 647              	.LBE191:
 648              	.LBE205:
 649              	.LBE220:
 650              	.LBE239:
 651              	.LBE263:
 652              	.LBE287:
 170:src/Riscv.cpp ****         char c = INbuff->get();
 171:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 172:src/Riscv.cpp ****     }
 173:src/Riscv.cpp ****     else if (syscode==PUTCHAR) {
 653              		.loc 1 173 10
 654              	.LBB288:
 655              	.LBB264:
 656              	.LBB240:
 657              	.LBB221:
 658              	.LBB206:
 659              	.LBB192:
 660              	.LBB177:
 661              	.LBB165:
 662              	.LBB153:
 663              	.LBB143:
 664              	.LBB135:
 665              	.LBB126:
 666              	.LBB119:
 667              	.LBB113:
 668              	.LBB108:
 669              	.LBB104:
 670              	.LBB95:
GAS LISTING /tmp/ccIj1CqZ.s 			page 18


 671 01f4 13072004 		li	a4,66
 672 01f8 638EE730 		beq	a5,a4,.L59
 673              	.LBB96:
 174:src/Riscv.cpp ****         char c;
 175:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 176:src/Riscv.cpp ****         OUTbuff->put(c);
 177:src/Riscv.cpp ****     }
 178:src/Riscv.cpp ****     else {
 179:src/Riscv.cpp ****         scause= get_scause();
 674              		.loc 1 179 9
 675              	.LBB97:
 676              	.LBB98:
  80:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 677              		.loc 2 80 5
  81:src/../h/Riscv.hpp ****     return scause;
 678              		.loc 2 81 5
  81:src/../h/Riscv.hpp ****     return scause;
 679              		.loc 2 81 68 is_stmt 0
 680              	#APP
 681              	# 81 "src/../h/Riscv.hpp" 1
 682              		csrr a5, scause
 683              	# 0 "" 2
 684              	.LVL17:
 685              	#NO_APP
 686 0200 233CF4FA 		sd	a5,-72(s0)
  82:src/../h/Riscv.hpp **** }
 687              		.loc 2 82 5 is_stmt 1
  82:src/../h/Riscv.hpp **** }
 688              		.loc 2 82 12 is_stmt 0
 689 0204 033A84FB 		ld	s4,-72(s0)
 690              	.LVL18:
 691              	.LBE98:
 692              	.LBE97:
 180:src/Riscv.cpp ****         uint64 stval= get_stval();
 693              		.loc 1 180 9 is_stmt 1
 694              	.LBB99:
 695              	.LBB100:
  85:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
 696              		.loc 2 85 5
  86:src/../h/Riscv.hpp ****     return stval;
 697              		.loc 2 86 5
  86:src/../h/Riscv.hpp ****     return stval;
 698              		.loc 2 86 64 is_stmt 0
 699              	#APP
 700              	# 86 "src/../h/Riscv.hpp" 1
 701              		csrr a5, stval
 702              	# 0 "" 2
 703              	#NO_APP
 704 020c 2338F4FA 		sd	a5,-80(s0)
  87:src/../h/Riscv.hpp **** }
 705              		.loc 2 87 5 is_stmt 1
  87:src/../h/Riscv.hpp **** }
 706              		.loc 2 87 12 is_stmt 0
 707 0210 833904FB 		ld	s3,-80(s0)
 708              	.LVL19:
 709              	.LBE100:
 710              	.LBE99:
GAS LISTING /tmp/ccIj1CqZ.s 			page 19


 181:src/Riscv.cpp ****         pprintString("scause:");
 711              		.loc 1 181 9 is_stmt 1
 712              		.loc 1 181 21 is_stmt 0
 713 0214 17050000 		lla	a0,.LC0
 713      13050500 
 714 021c 97000000 		call	_Z12pprintStringPKc@plt
 714      E7800000 
 715              	.LVL20:
 182:src/Riscv.cpp ****         printInteger(scause);
 716              		.loc 1 182 9 is_stmt 1
 717              		.loc 1 182 21 is_stmt 0
 718 0224 13050A00 		mv	a0,s4
 719 0228 97000000 		call	_Z12printIntegerm@plt
 719      E7800000 
 720              	.LVL21:
 183:src/Riscv.cpp ****         pprintString("\n");
 721              		.loc 1 183 9 is_stmt 1
 722              		.loc 1 183 21 is_stmt 0
 723 0230 17050000 		lla	a0,.LC1
 723      13050500 
 724 0238 97000000 		call	_Z12pprintStringPKc@plt
 724      E7800000 
 725              	.LVL22:
 184:src/Riscv.cpp **** 
 185:src/Riscv.cpp ****         pprintString("stval:");
 726              		.loc 1 185 9 is_stmt 1
 727              		.loc 1 185 21 is_stmt 0
 728 0240 17050000 		lla	a0,.LC2
 728      13050500 
 729 0248 97000000 		call	_Z12pprintStringPKc@plt
 729      E7800000 
 730              	.LVL23:
 186:src/Riscv.cpp ****         printInteger(stval);
 731              		.loc 1 186 9 is_stmt 1
 732              		.loc 1 186 21 is_stmt 0
 733 0250 13850900 		mv	a0,s3
 734 0254 97000000 		call	_Z12printIntegerm@plt
 734      E7800000 
 735              	.LVL24:
 187:src/Riscv.cpp ****         pprintString("\n");
 736              		.loc 1 187 9 is_stmt 1
 737              		.loc 1 187 21 is_stmt 0
 738 025c 17050000 		lla	a0,.LC1
 738      13050500 
 739 0264 97000000 		call	_Z12pprintStringPKc@plt
 739      E7800000 
 740              	.LVL25:
 188:src/Riscv.cpp **** 
 189:src/Riscv.cpp ****         pprintString("sepc:");
 741              		.loc 1 189 9 is_stmt 1
 742              		.loc 1 189 21 is_stmt 0
 743 026c 17050000 		lla	a0,.LC3
 743      13050500 
 744 0274 97000000 		call	_Z12pprintStringPKc@plt
 744      E7800000 
 745              	.LVL26:
 190:src/Riscv.cpp ****         printInteger(sepc);
GAS LISTING /tmp/ccIj1CqZ.s 			page 20


 746              		.loc 1 190 9 is_stmt 1
 747              		.loc 1 190 21 is_stmt 0
 748 027c 13850400 		mv	a0,s1
 749 0280 97000000 		call	_Z12printIntegerm@plt
 749      E7800000 
 750              	.LVL27:
 191:src/Riscv.cpp ****         pprintString("\n");
 751              		.loc 1 191 9 is_stmt 1
 752              		.loc 1 191 21 is_stmt 0
 753 0288 17050000 		lla	a0,.LC1
 753      13050500 
 754 0290 97000000 		call	_Z12pprintStringPKc@plt
 754      E7800000 
 755              	.LVL28:
 756 0298 6F00800F 		j	.L25
 757              	.LVL29:
 758              	.L44:
 759              	.LBE96:
 760              	.LBE95:
 761              	.LBE104:
 762              	.LBE108:
 763              	.LBE113:
 764              	.LBE119:
 765              	.LBE126:
 766              	.LBE135:
 767              	.LBE143:
 768              	.LBE153:
 769              	.LBE165:
 770              	.LBE177:
 771              	.LBE192:
 772              	.LBE206:
 773              	.LBE221:
 774              	.LBE240:
 775              	.LBE264:
  48:src/Riscv.cpp ****         SList::oneTick();
 776              		.loc 1 48 9 is_stmt 1
  48:src/Riscv.cpp ****         SList::oneTick();
 777              		.loc 1 48 25 is_stmt 0
 778 029c 97090000 		la	s3,_ZN3TCB11timeCounterE
 778      83B90900 
 779 02a4 83B70900 		ld	a5,0(s3)
 780 02a8 93871700 		addi	a5,a5,1
 781 02ac 23B0F900 		sd	a5,0(s3)
  49:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
 782              		.loc 1 49 9 is_stmt 1
  49:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
 783              		.loc 1 49 23 is_stmt 0
 784 02b0 97000000 		call	_ZN5SList7oneTickEv@plt
 784      E7800000 
 785              	.LVL30:
  50:src/Riscv.cpp ****             TCB::dispatch();
 786              		.loc 1 50 9 is_stmt 1
  50:src/Riscv.cpp ****             TCB::dispatch();
 787              		.loc 1 50 59 is_stmt 0
 788 02b8 97070000 		la	a5,_ZN3TCB7runningE
 788      83B70700 
 789 02c0 83B70700 		ld	a5,0(a5)
GAS LISTING /tmp/ccIj1CqZ.s 			page 21


 790              	.LVL31:
 791              	.LBB265:
 792              	.LBB266:
 793              		.file 3 "src/../h/../h/TCB.hpp"
   1:src/../h/../h/TCB.hpp **** //
   2:src/../h/../h/TCB.hpp **** // Created by os on 9/23/25.
   3:src/../h/../h/TCB.hpp **** //
   4:src/../h/../h/TCB.hpp **** 
   5:src/../h/../h/TCB.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_TCB_HPP
   6:src/../h/../h/TCB.hpp **** #define PROJECT_BASE_V1_1_COPY_TCB_HPP
   7:src/../h/../h/TCB.hpp **** #include "../lib/hw.h"
   8:src/../h/../h/TCB.hpp **** #include "../h/Scheduler.hpp"
   9:src/../h/../h/TCB.hpp **** #include "../h/MemoryAllocator.hpp"
  10:src/../h/../h/TCB.hpp **** 
  11:src/../h/../h/TCB.hpp **** class TCB
  12:src/../h/../h/TCB.hpp **** {
  13:src/../h/../h/TCB.hpp **** public:
  14:src/../h/../h/TCB.hpp ****     void* operator new(size_t size)
  15:src/../h/../h/TCB.hpp **** {
  16:src/../h/../h/TCB.hpp ****     return MemoryAllocator::Instance()->mem_alloc(size);
  17:src/../h/../h/TCB.hpp **** }
  18:src/../h/../h/TCB.hpp **** 
  19:src/../h/../h/TCB.hpp ****     void operator delete(void* ptr)
  20:src/../h/../h/TCB.hpp ****     {
  21:src/../h/../h/TCB.hpp ****         return MemoryAllocator::Instance()->mem_free(ptr);
  22:src/../h/../h/TCB.hpp ****     }
  23:src/../h/../h/TCB.hpp **** 
  24:src/../h/../h/TCB.hpp **** 
  25:src/../h/../h/TCB.hpp ****     using Body=void(*)(void*);
  26:src/../h/../h/TCB.hpp **** 
  27:src/../h/../h/TCB.hpp ****     ~TCB()
  28:src/../h/../h/TCB.hpp ****     {
  29:src/../h/../h/TCB.hpp ****         delete stack;
  30:src/../h/../h/TCB.hpp ****     }
  31:src/../h/../h/TCB.hpp **** 
  32:src/../h/../h/TCB.hpp ****     static TCB* createThread(Body body, void* arg, uint64* stack);
  33:src/../h/../h/TCB.hpp **** 
  34:src/../h/../h/TCB.hpp ****     static void dispatch();
  35:src/../h/../h/TCB.hpp ****     static int exit();
  36:src/../h/../h/TCB.hpp ****     static void InitOutputThread();
  37:src/../h/../h/TCB.hpp **** 
  38:src/../h/../h/TCB.hpp **** 
  39:src/../h/../h/TCB.hpp ****     bool isFinished() const { return finished;}
  40:src/../h/../h/TCB.hpp ****     void block() { this->blocked = true; }
  41:src/../h/../h/TCB.hpp ****     void unblock() { this->blocked = false; }
  42:src/../h/../h/TCB.hpp ****     bool isBlocked() const { return blocked; }
  43:src/../h/../h/TCB.hpp ****     time_t getTimeSlice() const { return timeSlice; }
 794              		.loc 3 43 35 is_stmt 1
 795              		.loc 3 43 42 is_stmt 0
 796 02c4 83B78703 		ld	a5,56(a5)
 797              	.LVL32:
 798              	.LBE266:
 799              	.LBE265:
  50:src/Riscv.cpp ****             TCB::dispatch();
 800              		.loc 1 50 30
 801 02c8 03B70900 		ld	a4,0(s3)
  50:src/Riscv.cpp ****             TCB::dispatch();
GAS LISTING /tmp/ccIj1CqZ.s 			page 22


 802              		.loc 1 50 9
 803 02cc 6378F700 		bgeu	a4,a5,.L60
 804              	.L19:
  55:src/Riscv.cpp ****     }
 805              		.loc 1 55 9 is_stmt 1
 806              	.LVL33:
 807              	.LBB267:
 808              	.LBB268:
  95:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
  96:src/../h/Riscv.hpp **** {
  97:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]":: [mask]"r"(mask));
 809              		.loc 2 97 5
 810              		.loc 2 97 60 is_stmt 0
 811 02d0 93072000 		li	a5,2
 812              	#APP
 813              	# 97 "src/../h/Riscv.hpp" 1
  98              	}
 814              		csrc sip, a5
 815              	# 0 "" 2
 816              		.loc 2 98 1
 817              	#NO_APP
 818 02d8 6F00400C 		j	.L17
 819              	.LVL34:
 820              	.L60:
 821              	.LBE268:
 822              	.LBE267:
  51:src/Riscv.cpp ****             set_sepc(sepc);
 823              		.loc 1 51 13 is_stmt 1
  51:src/Riscv.cpp ****             set_sepc(sepc);
 824              		.loc 1 51 26 is_stmt 0
 825 02dc 97000000 		call	_ZN3TCB8dispatchEv@plt
 825      E7800000 
 826              	.LVL35:
  52:src/Riscv.cpp ****             set_sstatus(sstatus);
 827              		.loc 1 52 13 is_stmt 1
 828              	.LBB269:
 829              	.LBB270:
  60:src/../h/Riscv.hpp **** }
 830              		.loc 2 60 5
  60:src/../h/Riscv.hpp **** }
 831              		.loc 2 60 59 is_stmt 0
 832              	#APP
 833              	# 60 "src/../h/Riscv.hpp" 1
 834              		csrw sepc, s1
 835              	# 0 "" 2
 836              	.LVL36:
 837              	#NO_APP
 838              	.LBE270:
 839              	.LBE269:
  53:src/Riscv.cpp ****         }
 840              		.loc 1 53 13 is_stmt 1
 841              	.LBB271:
 842              	.LBB272:
  70:src/../h/Riscv.hpp **** }
 843              		.loc 2 70 5
  70:src/../h/Riscv.hpp **** }
 844              		.loc 2 70 65 is_stmt 0
GAS LISTING /tmp/ccIj1CqZ.s 			page 23


 845              	#APP
 846              	# 70 "src/../h/Riscv.hpp" 1
  71:src/../h/Riscv.hpp **** 
 847              		csrw sstatus, s2
 848              	# 0 "" 2
 849              		.loc 2 71 1
 850              	#NO_APP
 851 02ec 6FF05FFE 		j	.L19
 852              	.LVL37:
 853              	.L45:
 854              	.LBE272:
 855              	.LBE271:
 856              	.LBB273:
 857              	.LBB241:
  60:src/Riscv.cpp ****         if(irq==0x0a)
 858              		.loc 1 60 9 is_stmt 1
  60:src/Riscv.cpp ****         if(irq==0x0a)
 859              		.loc 1 60 29 is_stmt 0
 860 02f0 97000000 		call	plic_claim@plt
 860      E7800000 
 861              	.LVL38:
 862 02f8 93090500 		mv	s3,a0
 863              	.LVL39:
  61:src/Riscv.cpp ****         {
 864              		.loc 1 61 9 is_stmt 1
 865              	.LBB242:
 866 02fc 9307A000 		li	a5,10
 867 0300 630EF500 		beq	a0,a5,.L61
 868              	.LVL40:
 869              	.L22:
 870              	.LBE242:
  72:src/Riscv.cpp ****         set_sepc(sepc);
 871              		.loc 1 72 9
  72:src/Riscv.cpp ****         set_sepc(sepc);
 872              		.loc 1 72 22 is_stmt 0
 873 0304 13850900 		mv	a0,s3
 874 0308 97000000 		call	plic_complete@plt
 874      E7800000 
 875              	.LVL41:
  73:src/Riscv.cpp ****         set_sstatus(sstatus);
 876              		.loc 1 73 9 is_stmt 1
 877              	.LBB245:
 878              	.LBB246:
  60:src/../h/Riscv.hpp **** }
 879              		.loc 2 60 5
  60:src/../h/Riscv.hpp **** }
 880              		.loc 2 60 59 is_stmt 0
 881              	#APP
 882              	# 60 "src/../h/Riscv.hpp" 1
 883              		csrw sepc, s1
 884              	# 0 "" 2
 885              	.LVL42:
 886              	#NO_APP
 887              	.LBE246:
 888              	.LBE245:
  74:src/Riscv.cpp ****         //console_handler();
 889              		.loc 1 74 9 is_stmt 1
GAS LISTING /tmp/ccIj1CqZ.s 			page 24


 890              	.LBB247:
 891              	.LBB248:
  70:src/../h/Riscv.hpp **** }
 892              		.loc 2 70 5
  70:src/../h/Riscv.hpp **** }
 893              		.loc 2 70 65 is_stmt 0
 894              	#APP
 895              	# 70 "src/../h/Riscv.hpp" 1
  71:src/../h/Riscv.hpp **** 
 896              		csrw sstatus, s2
 897              	# 0 "" 2
 898              		.loc 2 71 1
 899              	#NO_APP
 900 0318 6F004008 		j	.L17
 901              	.LVL43:
 902              	.L61:
 903              	.LBE248:
 904              	.LBE247:
 905              	.LBB249:
 906              	.LBB243:
  63:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 907              		.loc 1 63 13 is_stmt 1
  63:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 908              		.loc 1 63 37 is_stmt 0
 909 031c 97070000 		la	a5,CONSOLE_STATUS
 909      83B70700 
 910 0324 03BA0700 		ld	s4,0(a5)
 911 0328 83470A00 		lbu	a5,0(s4)
  63:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 912              		.loc 1 63 27
 913 032c 2303F4FA 		sb	a5,-90(s0)
 914              	.LVL44:
 915              	.L23:
  64:src/Riscv.cpp ****             {
 916              		.loc 1 64 13 is_stmt 1
  64:src/Riscv.cpp ****             {
 917              		.loc 1 64 28
  64:src/Riscv.cpp ****             {
 918              		.loc 1 64 19 is_stmt 0
 919 0330 834764FA 		lbu	a5,-90(s0)
  64:src/Riscv.cpp ****             {
 920              		.loc 1 64 28
 921 0334 93F71700 		andi	a5,a5,1
 922 0338 E38607FC 		beqz	a5,.L22
 923              	.LBB244:
  66:src/Riscv.cpp ****                 INbuff->put(c);
 924              		.loc 1 66 17 is_stmt 1
  66:src/Riscv.cpp ****                 INbuff->put(c);
 925              		.loc 1 66 37 is_stmt 0
 926 033c 97070000 		la	a5,CONSOLE_RX_DATA
 926      83B70700 
 927 0344 83B70700 		ld	a5,0(a5)
 928 0348 83C70700 		lbu	a5,0(a5)
  66:src/Riscv.cpp ****                 INbuff->put(c);
 929              		.loc 1 66 32
 930 034c A303F4FA 		sb	a5,-89(s0)
  67:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
GAS LISTING /tmp/ccIj1CqZ.s 			page 25


 931              		.loc 1 67 17 is_stmt 1
  67:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
 932              		.loc 1 67 28 is_stmt 0
 933 0350 834574FA 		lbu	a1,-89(s0)
 934 0354 93F5F50F 		andi	a1,a1,0xff
 935 0358 17050000 		ld	a0,.LANCHOR0
 935      03350500 
 936 0360 97000000 		call	_ZN5BBuff3putEc@plt
 936      E7800000 
 937              	.LVL45:
  68:src/Riscv.cpp ****             }
 938              		.loc 1 68 17 is_stmt 1
  68:src/Riscv.cpp ****             }
 939              		.loc 1 68 27 is_stmt 0
 940 0368 83470A00 		lbu	a5,0(s4)
  68:src/Riscv.cpp ****             }
 941              		.loc 1 68 24
 942 036c 2303F4FA 		sb	a5,-90(s0)
 943              	.LBE244:
  64:src/Riscv.cpp ****             {
 944              		.loc 1 64 13
 945 0370 6FF01FFC 		j	.L23
 946              	.LVL46:
 947              	.L46:
 948              	.LBE243:
 949              	.LBE249:
 950              	.LBE241:
 951              	.LBB250:
 952              	.LBB222:
 953              	.LBB207:
  82:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
 954              		.loc 1 82 9 is_stmt 1
  83:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 955              		.loc 1 83 9
  83:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 956              		.loc 1 83 69 is_stmt 0
 957              	#APP
 958              	# 83 "src/Riscv.cpp" 1
 959              		mv s3, a1
 960              	# 0 "" 2
 961              	.LVL47:
  84:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 962              		.loc 1 84 9 is_stmt 1
  84:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 963              		.loc 1 84 59 is_stmt 0
 964              	#NO_APP
 965 0378 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 965      E7800000 
 966              	.LVL48:
 967 0380 93952900 		slli	a1,s3,2
 968 0384 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 968      E7800000 
 969              	.LVL49:
  85:src/Riscv.cpp ****     }
 970              		.loc 1 85 9 is_stmt 1
  85:src/Riscv.cpp ****     }
 971              		.loc 1 85 57 is_stmt 0
GAS LISTING /tmp/ccIj1CqZ.s 			page 26


 972              	#APP
 973              	# 85 "src/Riscv.cpp" 1
 974              		mv a0,a0
 975              	# 0 "" 2
 976              	.LVL50:
 977              	#NO_APP
 978              	.L25:
 979              	.LBE207:
 980              	.LBE222:
 192:src/Riscv.cpp ****         //getc();
 193:src/Riscv.cpp ****     }
 194:src/Riscv.cpp ****     set_sepc(sepc+4);
 981              		.loc 1 194 5 is_stmt 1
 982              		.loc 1 194 13 is_stmt 0
 983 0390 93844400 		addi	s1,s1,4
 984              	.LVL51:
 985              	.LBB223:
 986              	.LBB224:
  60:src/../h/Riscv.hpp **** }
 987              		.loc 2 60 5 is_stmt 1
  60:src/../h/Riscv.hpp **** }
 988              		.loc 2 60 59 is_stmt 0
 989              	#APP
 990              	# 60 "src/../h/Riscv.hpp" 1
 991              		csrw sepc, s1
 992              	# 0 "" 2
 993              	.LVL52:
 994              	#NO_APP
 995              	.LBE224:
 996              	.LBE223:
 195:src/Riscv.cpp ****     set_sstatus(sstatus);
 997              		.loc 1 195 5 is_stmt 1
 998              	.LBB225:
 999              	.LBB226:
  70:src/../h/Riscv.hpp **** }
 1000              		.loc 2 70 5
  70:src/../h/Riscv.hpp **** }
 1001              		.loc 2 70 65 is_stmt 0
 1002              	#APP
 1003              	# 70 "src/../h/Riscv.hpp" 1
 1004              		csrw sstatus, s2
 1005              	# 0 "" 2
 1006              	.LVL53:
 1007              	#NO_APP
 1008              	.L17:
 1009              	.LBE226:
 1010              	.LBE225:
 1011              	.LBE250:
 1012              	.LBE273:
 1013              	.LBE288:
 196:src/Riscv.cpp ****     }
 197:src/Riscv.cpp **** 
 198:src/Riscv.cpp **** 
 199:src/Riscv.cpp **** }...
 1014              		.loc 1 199 1
 1015 039c 83308105 		ld	ra,88(sp)
 1016              		.cfi_remember_state
GAS LISTING /tmp/ccIj1CqZ.s 			page 27


 1017              		.cfi_restore 1
 1018 03a0 03340105 		ld	s0,80(sp)
 1019              		.cfi_restore 8
 1020              		.cfi_def_cfa 2, 96
 1021 03a4 83348104 		ld	s1,72(sp)
 1022              		.cfi_restore 9
 1023 03a8 03390104 		ld	s2,64(sp)
 1024              		.cfi_restore 18
 1025              	.LVL54:
 1026 03ac 83398103 		ld	s3,56(sp)
 1027              		.cfi_restore 19
 1028 03b0 033A0103 		ld	s4,48(sp)
 1029              		.cfi_restore 20
 1030 03b4 833A8102 		ld	s5,40(sp)
 1031              		.cfi_restore 21
 1032 03b8 13010106 		addi	sp,sp,96
 1033              		.cfi_def_cfa_offset 0
 1034 03bc 67800000 		jr	ra
 1035              	.LVL55:
 1036              	.L47:
 1037              		.cfi_restore_state
 1038              	.LBB289:
 1039              	.LBB274:
 1040              	.LBB251:
 1041              	.LBB227:
 1042              	.LBB208:
 1043              	.LBB193:
  88:src/Riscv.cpp ****         void* ptr;
 1044              		.loc 1 88 9 is_stmt 1
  89:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 1045              		.loc 1 89 9
  89:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 1046              		.loc 1 89 58 is_stmt 0
 1047              	#APP
 1048              	# 89 "src/Riscv.cpp" 1
 1049              		mv s3, a1
 1050              	# 0 "" 2
 1051              	.LVL56:
  90:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 1052              		.loc 1 90 9 is_stmt 1
  90:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 1053              		.loc 1 90 46 is_stmt 0
 1054              	#NO_APP
 1055 03c4 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1055      E7800000 
 1056              	.LVL57:
 1057 03cc 93850900 		mv	a1,s3
 1058 03d0 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 1058      E7800000 
 1059              	.LVL58:
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 1060              		.loc 1 91 9 is_stmt 1
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 1061              		.loc 1 91 56 is_stmt 0
 1062 03d8 93070000 		li	a5,0
 1063              	#APP
 1064              	# 91 "src/Riscv.cpp" 1
GAS LISTING /tmp/ccIj1CqZ.s 			page 28


 1065              		mv a0, a5
 1066              	# 0 "" 2
 1067              	#NO_APP
 1068              	.LBE193:
 1069 03e0 6FF01FFB 		j	.L25
 1070              	.LVL59:
 1071              	.L48:
 1072              	.LBB194:
 1073              	.LBB178:
  94:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 1074              		.loc 1 94 9 is_stmt 1
  94:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 1075              		.loc 1 94 69 is_stmt 0
 1076 03e4 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1076      E7800000 
 1077              	.LVL60:
 1078              	.LBB179:
 1079              	.LBB180:
 1080              		.file 4 "src/../h/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/../h/MemoryAllocator.hpp **** 
   2:src/../h/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   4:src/../h/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   6:src/../h/../h/../h/MemoryAllocator.hpp **** 
   7:src/../h/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
   8:src/../h/../h/../h/MemoryAllocator.hpp **** public:
   9:src/../h/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator* Instance();
  10:src/../h/../h/../h/MemoryAllocator.hpp **** 
  11:src/../h/../h/../h/MemoryAllocator.hpp ****     void* mem_alloc(size_t size);//size in bytes
  12:src/../h/../h/../h/MemoryAllocator.hpp **** 
  13:src/../h/../h/../h/MemoryAllocator.hpp ****     void mem_free(void* ptr);
  14:src/../h/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/../h/MemoryAllocator.hpp ****     size_t getFreeMemSize() {
  16:src/../h/../h/../h/MemoryAllocator.hpp ****         return this->freeMemSize;
 1081              		.loc 4 16 9 is_stmt 1
 1082              		.loc 4 16 22 is_stmt 0
 1083 03ec 83378500 		ld	a5,8(a0)
 1084              	.LVL61:
 1085              	.LBE180:
 1086              	.LBE179:
  95:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 1087              		.loc 1 95 9 is_stmt 1
  95:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 1088              		.loc 1 95 62 is_stmt 0
 1089              	#APP
 1090              	# 95 "src/Riscv.cpp" 1
 1091              		mv a0, a5
 1092              	# 0 "" 2
 1093              	#NO_APP
 1094              	.LBE178:
 1095 03f4 6FF0DFF9 		j	.L25
 1096              	.LVL62:
 1097              	.L49:
 1098              	.LBB181:
 1099              	.LBB166:
  98:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
GAS LISTING /tmp/ccIj1CqZ.s 			page 29


 1100              		.loc 1 98 9 is_stmt 1
  98:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 1101              		.loc 1 98 79 is_stmt 0
 1102 03f8 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1102      E7800000 
 1103              	.LVL63:
 1104 0400 97000000 		call	_ZN15MemoryAllocator19getLargestFreeBlockEv@plt
 1104      E7800000 
 1105              	.LVL64:
  99:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 1106              		.loc 1 99 9 is_stmt 1
  99:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 1107              		.loc 1 99 67 is_stmt 0
 1108              	#APP
 1109              	# 99 "src/Riscv.cpp" 1
 1110              		mv a0, a0
 1111              	# 0 "" 2
 1112              	#NO_APP
 1113              	.LBE166:
 1114 040c 6FF05FF8 		j	.L25
 1115              	.LVL65:
 1116              	.L50:
 1117              	.LBB167:
 1118              	.LBB154:
 102:src/Riscv.cpp ****         thread_t* handle;
 1119              		.loc 1 102 9 is_stmt 1
 103:src/Riscv.cpp ****         Body start_routine;
 1120              		.loc 1 103 9
 104:src/Riscv.cpp ****         void* arg;
 1121              		.loc 1 104 9
 105:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1122              		.loc 1 105 9
 105:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1123              		.loc 1 105 61 is_stmt 0
 1124              	#APP
 1125              	# 105 "src/Riscv.cpp" 1
 1126              		mv s3, a1
 1127              	# 0 "" 2
 1128              	.LVL66:
 106:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 1129              		.loc 1 106 9 is_stmt 1
 106:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 1130              		.loc 1 106 68 is_stmt 0
 1131              	# 106 "src/Riscv.cpp" 1
 1132              		mv s4, a2
 1133              	# 0 "" 2
 1134              	.LVL67:
 107:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 1135              		.loc 1 107 9 is_stmt 1
 107:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 1136              		.loc 1 107 58 is_stmt 0
 1137              	# 107 "src/Riscv.cpp" 1
 1138              		mv s5, a3
 1139              	# 0 "" 2
 1140              	.LVL68:
 109:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 1141              		.loc 1 109 9 is_stmt 1
GAS LISTING /tmp/ccIj1CqZ.s 			page 30


 109:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 1142              		.loc 1 109 67 is_stmt 0
 1143              	#NO_APP
 1144 041c 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1144      E7800000 
 1145              	.LVL69:
 1146 0424 B7150000 		li	a1,4096
 1147 0428 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 1147      E7800000 
 1148              	.LVL70:
 1149 0430 13060500 		mv	a2,a0
 1150              	.LVL71:
 112:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1151              		.loc 1 112 9 is_stmt 1
 112:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1152              		.loc 1 112 34 is_stmt 0
 1153 0434 93850A00 		mv	a1,s5
 1154 0438 13050A00 		mv	a0,s4
 1155              	.LVL72:
 1156 043c 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 1156      E7800000 
 1157              	.LVL73:
 112:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1158              		.loc 1 112 16
 1159 0444 23B0A900 		sd	a0,0(s3)
 113:src/Riscv.cpp ****         int ret=0;
 1160              		.loc 1 113 9 is_stmt 1
 1161              	.LVL74:
 114:src/Riscv.cpp ****         if (*handle) {
 1162              		.loc 1 114 9
 1163 0448 63080500 		beqz	a0,.L41
 115:src/Riscv.cpp ****             ret=0;
 1164              		.loc 1 115 16 is_stmt 0
 1165 044c 93070000 		li	a5,0
 1166              	.L30:
 1167              	.LVL75:
 120:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1168              		.loc 1 120 9 is_stmt 1
 120:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1169              		.loc 1 120 58 is_stmt 0
 1170              	#APP
 1171              	# 120 "src/Riscv.cpp" 1
 1172              		mv a0, a5
 1173              	# 0 "" 2
 1174              	#NO_APP
 1175              	.LBE154:
 1176 0454 6FF0DFF3 		j	.L25
 1177              	.LVL76:
 1178              	.L41:
 1179              	.LBB155:
 118:src/Riscv.cpp ****             ret=1;
 1180              		.loc 1 118 16
 1181 0458 93071000 		li	a5,1
 1182 045c 6FF05FFF 		j	.L30
 1183              	.LVL77:
 1184              	.L51:
 1185              	.LBE155:
GAS LISTING /tmp/ccIj1CqZ.s 			page 31


 1186              	.LBB156:
 1187              	.LBB144:
 123:src/Riscv.cpp ****         int ret = TCB::exit();
 1188              		.loc 1 123 9 is_stmt 1
 123:src/Riscv.cpp ****         int ret = TCB::exit();
 1189              		.loc 1 123 28 is_stmt 0
 1190 0460 97000000 		call	_ZN3TCB4exitEv@plt
 1190      E7800000 
 1191              	.LVL78:
 124:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1192              		.loc 1 124 9 is_stmt 1
 124:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1193              		.loc 1 124 58 is_stmt 0
 1194              	#APP
 1195              	# 124 "src/Riscv.cpp" 1
 1196              		mv a0, a0
 1197              	# 0 "" 2
 1198              	#NO_APP
 1199              	.LBE144:
 1200 046c 6FF05FF2 		j	.L25
 1201              	.LVL79:
 1202              	.L52:
 1203              	.LBB145:
 127:src/Riscv.cpp ****         TCB::dispatch();
 1204              		.loc 1 127 9 is_stmt 1
 127:src/Riscv.cpp ****         TCB::dispatch();
 1205              		.loc 1 127 22 is_stmt 0
 1206 0470 97000000 		call	_ZN3TCB8dispatchEv@plt
 1206      E7800000 
 1207              	.LVL80:
 1208 0478 6FF09FF1 		j	.L25
 1209              	.LVL81:
 1210              	.L53:
 1211              	.LBB136:
 1212              	.LBB127:
 130:src/Riscv.cpp ****         sem_t* handle;
 1213              		.loc 1 130 9 is_stmt 1
 131:src/Riscv.cpp ****         unsigned init;
 1214              		.loc 1 131 9
 132:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1215              		.loc 1 132 9
 132:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1216              		.loc 1 132 61 is_stmt 0
 1217              	#APP
 1218              	# 132 "src/Riscv.cpp" 1
 1219              		mv s3, a1
 1220              	# 0 "" 2
 1221              	.LVL82:
 133:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 1222              		.loc 1 133 9 is_stmt 1
 133:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 1223              		.loc 1 133 59 is_stmt 0
 1224              	# 133 "src/Riscv.cpp" 1
 1225              		mv a0, a2
 1226              	# 0 "" 2
 1227              	.LVL83:
 135:src/Riscv.cpp ****         *handle=SEM::open(init);
GAS LISTING /tmp/ccIj1CqZ.s 			page 32


 1228              		.loc 1 135 9 is_stmt 1
 135:src/Riscv.cpp ****         *handle=SEM::open(init);
 1229              		.loc 1 135 26 is_stmt 0
 1230              	#NO_APP
 1231 0484 1B050500 		sext.w	a0,a0
 1232 0488 97000000 		call	_ZN3SEM4openEj@plt
 1232      E7800000 
 1233              	.LVL84:
 135:src/Riscv.cpp ****         *handle=SEM::open(init);
 1234              		.loc 1 135 16
 1235 0490 23B0A900 		sd	a0,0(s3)
 136:src/Riscv.cpp ****         int ret=0;
 1236              		.loc 1 136 9 is_stmt 1
 1237              	.LVL85:
 137:src/Riscv.cpp ****         if (*handle) {
 1238              		.loc 1 137 9
 1239 0494 63080500 		beqz	a0,.L42
 138:src/Riscv.cpp ****             ret=0;
 1240              		.loc 1 138 16 is_stmt 0
 1241 0498 93070000 		li	a5,0
 1242              	.L34:
 1243              	.LVL86:
 143:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1244              		.loc 1 143 9 is_stmt 1
 143:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1245              		.loc 1 143 58 is_stmt 0
 1246              	#APP
 1247              	# 143 "src/Riscv.cpp" 1
 1248              		mv a0, a5
 1249              	# 0 "" 2
 1250              	#NO_APP
 1251              	.LBE127:
 1252 04a0 6FF01FEF 		j	.L25
 1253              	.LVL87:
 1254              	.L42:
 1255              	.LBB128:
 141:src/Riscv.cpp ****             ret=1;
 1256              		.loc 1 141 16
 1257 04a4 93071000 		li	a5,1
 1258 04a8 6FF05FFF 		j	.L34
 1259              	.LVL88:
 1260              	.L54:
 1261              	.LBE128:
 1262              	.LBB129:
 1263              	.LBB120:
 146:src/Riscv.cpp ****         sem_t handle;
 1264              		.loc 1 146 9 is_stmt 1
 147:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1265              		.loc 1 147 9
 147:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1266              		.loc 1 147 61 is_stmt 0
 1267              	#APP
 1268              	# 147 "src/Riscv.cpp" 1
 1269              		mv a0, a1
 1270              	# 0 "" 2
 1271              	.LVL89:
 148:src/Riscv.cpp ****         int ret=handle->close();
GAS LISTING /tmp/ccIj1CqZ.s 			page 33


 1272              		.loc 1 148 9 is_stmt 1
 148:src/Riscv.cpp ****         int ret=handle->close();
 1273              		.loc 1 148 30 is_stmt 0
 1274              	#NO_APP
 1275 04b0 97000000 		call	_ZN3SEM5closeEv@plt
 1275      E7800000 
 1276              	.LVL90:
 149:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1277              		.loc 1 149 9 is_stmt 1
 149:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1278              		.loc 1 149 58 is_stmt 0
 1279              	#APP
 1280              	# 149 "src/Riscv.cpp" 1
 1281              		mv a0, a0
 1282              	# 0 "" 2
 1283              	#NO_APP
 1284              	.LBE120:
 1285 04bc 6FF05FED 		j	.L25
 1286              	.LVL91:
 1287              	.L55:
 1288              	.LBB121:
 1289              	.LBB114:
 152:src/Riscv.cpp ****         sem_t handle;
 1290              		.loc 1 152 9 is_stmt 1
 153:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1291              		.loc 1 153 9
 153:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1292              		.loc 1 153 61 is_stmt 0
 1293              	#APP
 1294              	# 153 "src/Riscv.cpp" 1
 1295              		mv a0, a1
 1296              	# 0 "" 2
 1297              	.LVL92:
 154:src/Riscv.cpp ****         int ret=handle->wait();
 1298              		.loc 1 154 9 is_stmt 1
 154:src/Riscv.cpp ****         int ret=handle->wait();
 1299              		.loc 1 154 29 is_stmt 0
 1300              	#NO_APP
 1301 04c4 97000000 		call	_ZN3SEM4waitEv@plt
 1301      E7800000 
 1302              	.LVL93:
 155:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1303              		.loc 1 155 9 is_stmt 1
 155:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1304              		.loc 1 155 58 is_stmt 0
 1305              	#APP
 1306              	# 155 "src/Riscv.cpp" 1
 1307              		mv a0, a0
 1308              	# 0 "" 2
 1309              	#NO_APP
 1310              	.LBE114:
 1311 04d0 6FF01FEC 		j	.L25
 1312              	.LVL94:
 1313              	.L56:
 1314              	.LBB115:
 1315              	.LBB109:
 158:src/Riscv.cpp ****         sem_t handle;
GAS LISTING /tmp/ccIj1CqZ.s 			page 34


 1316              		.loc 1 158 9 is_stmt 1
 159:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1317              		.loc 1 159 9
 159:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1318              		.loc 1 159 61 is_stmt 0
 1319              	#APP
 1320              	# 159 "src/Riscv.cpp" 1
 1321              		mv a0, a1
 1322              	# 0 "" 2
 1323              	.LVL95:
 160:src/Riscv.cpp ****         int ret=handle->signal();
 1324              		.loc 1 160 9 is_stmt 1
 160:src/Riscv.cpp ****         int ret=handle->signal();
 1325              		.loc 1 160 31 is_stmt 0
 1326              	#NO_APP
 1327 04d8 97000000 		call	_ZN3SEM6signalEv@plt
 1327      E7800000 
 1328              	.LVL96:
 161:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1329              		.loc 1 161 9 is_stmt 1
 161:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1330              		.loc 1 161 58 is_stmt 0
 1331              	#APP
 1332              	# 161 "src/Riscv.cpp" 1
 1333              		mv a0, a0
 1334              	# 0 "" 2
 1335              	#NO_APP
 1336              	.LBE109:
 1337 04e4 6FF0DFEA 		j	.L25
 1338              	.LVL97:
 1339              	.L57:
 1340              	.LBB110:
 1341              	.LBB105:
 164:src/Riscv.cpp ****         time_t sleepTime;
 1342              		.loc 1 164 9 is_stmt 1
 165:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 1343              		.loc 1 165 9
 165:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 1344              		.loc 1 165 64 is_stmt 0
 1345              	#APP
 1346              	# 165 "src/Riscv.cpp" 1
 1347              		mv a0, a1
 1348              	# 0 "" 2
 1349              	.LVL98:
 166:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 1350              		.loc 1 166 9 is_stmt 1
 166:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 1351              		.loc 1 166 27 is_stmt 0
 1352              	#NO_APP
 1353 04ec 97000000 		call	_ZN3TCB5sleepEm@plt
 1353      E7800000 
 1354              	.LVL99:
 167:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1355              		.loc 1 167 9 is_stmt 1
 167:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1356              		.loc 1 167 58 is_stmt 0
 1357              	#APP
GAS LISTING /tmp/ccIj1CqZ.s 			page 35


 1358              	# 167 "src/Riscv.cpp" 1
 1359              		mv a0, a0
 1360              	# 0 "" 2
 1361              	#NO_APP
 1362              	.LBE105:
 1363 04f8 6FF09FE9 		j	.L25
 1364              	.LVL100:
 1365              	.L58:
 1366              	.LBB106:
 1367              	.LBB102:
 170:src/Riscv.cpp ****         char c = INbuff->get();
 1368              		.loc 1 170 9 is_stmt 1
 170:src/Riscv.cpp ****         char c = INbuff->get();
 1369              		.loc 1 170 29 is_stmt 0
 1370 04fc 17050000 		ld	a0,.LANCHOR0
 1370      03350500 
 1371 0504 97000000 		call	_ZN5BBuff3getEv@plt
 1371      E7800000 
 1372              	.LVL101:
 171:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 1373              		.loc 1 171 9 is_stmt 1
 171:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 1374              		.loc 1 171 56 is_stmt 0
 1375              	#APP
 1376              	# 171 "src/Riscv.cpp" 1
 1377              		mv a0, a0
 1378              	# 0 "" 2
 1379              	#NO_APP
 1380              	.LBE102:
 1381 0510 6FF01FE8 		j	.L25
 1382              	.LVL102:
 1383              	.L59:
 1384              	.LBB103:
 1385              	.LBB101:
 174:src/Riscv.cpp ****         char c;
 1386              		.loc 1 174 9 is_stmt 1
 175:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 1387              		.loc 1 175 9
 175:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 1388              		.loc 1 175 56 is_stmt 0
 1389              	#APP
 1390              	# 175 "src/Riscv.cpp" 1
 1391              		mv a1, a1
 1392              	# 0 "" 2
 1393              	.LVL103:
 176:src/Riscv.cpp ****         OUTbuff->put(c);
 1394              		.loc 1 176 9 is_stmt 1
 176:src/Riscv.cpp ****         OUTbuff->put(c);
 1395              		.loc 1 176 21 is_stmt 0
 1396              	#NO_APP
 1397 0518 93F5F50F 		andi	a1,a1,0xff
 1398 051c 17050000 		ld	a0,.LANCHOR0+8
 1398      03350500 
 1399 0524 97000000 		call	_ZN5BBuff3putEc@plt
 1399      E7800000 
 1400              	.LVL104:
 1401              	.LBE101:
GAS LISTING /tmp/ccIj1CqZ.s 			page 36


 1402 052c 6FF05FE6 		j	.L25
 1403              	.LBE103:
 1404              	.LBE106:
 1405              	.LBE110:
 1406              	.LBE115:
 1407              	.LBE121:
 1408              	.LBE129:
 1409              	.LBE136:
 1410              	.LBE145:
 1411              	.LBE156:
 1412              	.LBE167:
 1413              	.LBE181:
 1414              	.LBE194:
 1415              	.LBE208:
 1416              	.LBE227:
 1417              	.LBE251:
 1418              	.LBE274:
 1419              	.LBE289:
 1420              		.cfi_endproc
 1421              	.LFE38:
 1423              		.globl	_ZN5Riscv7OUTbuffE
 1424              		.globl	_ZN5Riscv6INbuffE
 1425              		.bss
 1426              		.align	3
 1427              		.set	.LANCHOR0,. + 0
 1430              	_ZN5Riscv6INbuffE:
 1431 0000 00000000 		.zero	8
 1431      00000000 
 1434              	_ZN5Riscv7OUTbuffE:
 1435 0008 00000000 		.zero	8
 1435      00000000 
 1436              		.text
 1437              	.Letext0:
 1438              		.file 5 "src/../h/../lib/hw.h"
 1439              		.file 6 "src/../h/../h/../h/List.hpp"
 1440              		.file 7 "src/../h/../h/SEM.hpp"
 1441              		.file 8 "src/../h/../h/syscall_c.hpp"
 1442              		.file 9 "src/../h/BBuff.hpp"
 1443              		.file 10 "src/../h/SList.hpp"
 1444              		.file 11 "src/../h/print.hpp"
 5892              		.align	3
 5895              	DW.ref.__gxx_personality_v0:
 5896 0000 00000000 		.dword	__gxx_personality_v0
 5896      00000000 
 5897              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5898              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccIj1CqZ.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccIj1CqZ.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccIj1CqZ.s:13     .text:0000000000000000 .L0 
     /tmp/ccIj1CqZ.s:14     .text:0000000000000000 .L0 
     /tmp/ccIj1CqZ.s:15     .text:0000000000000004 .L0 
     /tmp/ccIj1CqZ.s:17     .text:0000000000000008 .L0 
     /tmp/ccIj1CqZ.s:19     .text:000000000000000c .L0 
     /tmp/ccIj1CqZ.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:14     .text:000000000000000c .L0 
     /tmp/ccIj1CqZ.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:15     .text:0000000000000010 .L0 
     /tmp/ccIj1CqZ.s:33     .text:0000000000000014 .L0 
     /tmp/ccIj1CqZ.s:34     .text:0000000000000018 .L0 
     /tmp/ccIj1CqZ.s:35     .text:0000000000000018 .L0 
     /tmp/ccIj1CqZ.s:37     .text:000000000000001c .L0 
     /tmp/ccIj1CqZ.s:39     .text:0000000000000020 .L0 
     /tmp/ccIj1CqZ.s:45     .text:0000000000000020 _ZN5Riscv10restoreSPPEv
     /tmp/ccIj1CqZ.s:48     .text:0000000000000020 .L0 
     /tmp/ccIj1CqZ.s:49     .text:0000000000000020 .L0 
     /tmp/ccIj1CqZ.s:50     .text:0000000000000024 .L0 
     /tmp/ccIj1CqZ.s:52     .text:0000000000000028 .L0 
     /tmp/ccIj1CqZ.s:54     .text:000000000000002c .L0 
     /tmp/ccIj1CqZ.s:56     .text:000000000000002c .L0 
     /tmp/ccIj1CqZ.s:57     .text:000000000000002c .L0 
     /tmp/ccIj1CqZ.s:61     .text:000000000000003c .L0 
     /tmp/ccIj1CqZ.s:67     .text:0000000000000040 .L0 
     /tmp/ccIj1CqZ.s:68     .text:0000000000000040 .L0 
     /tmp/ccIj1CqZ.s:69     .text:0000000000000040 .L0 
     /tmp/ccIj1CqZ.s:80     .text:0000000000000048 .L0 
     /tmp/ccIj1CqZ.s:81     .text:000000000000004c .L0 
     /tmp/ccIj1CqZ.s:82     .text:000000000000004c .L0 
     /tmp/ccIj1CqZ.s:83     .text:000000000000004c .L0 
     /tmp/ccIj1CqZ.s:85     .text:0000000000000050 .L0 
     /tmp/ccIj1CqZ.s:88     .text:0000000000000054 .L0 
     /tmp/ccIj1CqZ.s:93     .text:0000000000000054 .L0 
     /tmp/ccIj1CqZ.s:94     .text:0000000000000054 .L0 
     /tmp/ccIj1CqZ.s:95     .text:0000000000000054 .L0 
     /tmp/ccIj1CqZ.s:105    .text:000000000000005c .L0 
     /tmp/ccIj1CqZ.s:106    .text:0000000000000060 .L0 
     /tmp/ccIj1CqZ.s:112    .text:0000000000000060 _ZN5Riscv10InitBBuffsEv
     /tmp/ccIj1CqZ.s:115    .text:0000000000000060 .L0 
     /tmp/ccIj1CqZ.s:5895   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccIj1CqZ.s:118    .text:0000000000000060 .L0 
     /tmp/ccIj1CqZ.s:119    .text:0000000000000064 .L0 
     /tmp/ccIj1CqZ.s:124    .text:0000000000000074 .L0 
     /tmp/ccIj1CqZ.s:125    .text:0000000000000074 .L0 
     /tmp/ccIj1CqZ.s:126    .text:0000000000000074 .L0 
     /tmp/ccIj1CqZ.s:127    .text:0000000000000074 .L0 
     /tmp/ccIj1CqZ.s:129    .text:0000000000000078 .L0 
     /tmp/ccIj1CqZ.s:131    .text:0000000000000078 .L0 
     /tmp/ccIj1CqZ.s:132    .text:0000000000000078 .L0 
     /tmp/ccIj1CqZ.s:134    .text:0000000000000080 .L0 
     /tmp/ccIj1CqZ.s:137    .text:0000000000000084 .L0 
     /tmp/ccIj1CqZ.s:138    .text:0000000000000084 .L0 
     /tmp/ccIj1CqZ.s:140    .text:000000000000008c .L0 
     /tmp/ccIj1CqZ.s:143    .text:0000000000000090 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 38


     /tmp/ccIj1CqZ.s:144    .text:0000000000000094 .L0 
     /tmp/ccIj1CqZ.s:145    .text:0000000000000094 .L0 
     /tmp/ccIj1CqZ.s:147    .text:0000000000000098 .L0 
     /tmp/ccIj1CqZ.s:148    .text:0000000000000098 .L0 
     /tmp/ccIj1CqZ.s:150    .text:000000000000009c .L0 
     /tmp/ccIj1CqZ.s:152    .text:00000000000000a0 .L0 
     /tmp/ccIj1CqZ.s:154    .text:00000000000000a4 .L0 
     /tmp/ccIj1CqZ.s:157    .text:00000000000000a8 .L0 
     /tmp/ccIj1CqZ.s:159    .text:00000000000000a8 .L0 
     /tmp/ccIj1CqZ.s:160    .text:00000000000000a8 .L0 
     /tmp/ccIj1CqZ.s:172    .text:00000000000000c4 .L0 
     /tmp/ccIj1CqZ.s:176    .text:00000000000000d0 .L0 
     /tmp/ccIj1CqZ.s:177    .text:00000000000000d0 .L0 
     /tmp/ccIj1CqZ.s:189    .text:00000000000000ec .L0 
     /tmp/ccIj1CqZ.s:191    .text:00000000000000f4 .L0 
     /tmp/ccIj1CqZ.s:195    .text:00000000000000fc .L0 
     /tmp/ccIj1CqZ.s:205    .text:0000000000000118 .L0 
     /tmp/ccIj1CqZ.s:212    .text:0000000000000130 .L0 
     /tmp/ccIj1CqZ.s:260    .text:0000000000000130 _ZN5Riscv21SupervisorTrapHandlerEv
     /tmp/ccIj1CqZ.s:263    .text:0000000000000130 .L0 
     /tmp/ccIj1CqZ.s:264    .text:0000000000000130 .L0 
     /tmp/ccIj1CqZ.s:265    .text:0000000000000134 .L0 
     /tmp/ccIj1CqZ.s:273    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:274    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:275    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:276    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:277    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:278    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:279    .text:0000000000000150 .L0 
     /tmp/ccIj1CqZ.s:281    .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:283    .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:284    .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:287    .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:288    .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:289    .text:0000000000000154 .L0 
  src/../h/Riscv.hpp:81     .text:0000000000000154 .L0 
     /tmp/ccIj1CqZ.s:297    .text:000000000000015c .L0 
     /tmp/ccIj1CqZ.s:298    .text:000000000000015c .L0 
     /tmp/ccIj1CqZ.s:305    .text:0000000000000160 .L0 
     /tmp/ccIj1CqZ.s:306    .text:0000000000000160 .L0 
     /tmp/ccIj1CqZ.s:307    .text:0000000000000160 .L0 
  src/../h/Riscv.hpp:65     .text:0000000000000160 .L0 
     /tmp/ccIj1CqZ.s:317    .text:0000000000000164 .L0 
     /tmp/ccIj1CqZ.s:320    .text:0000000000000164 .L0 
     /tmp/ccIj1CqZ.s:321    .text:0000000000000164 .L0 
     /tmp/ccIj1CqZ.s:322    .text:0000000000000164 .L0 
  src/../h/Riscv.hpp:75     .text:0000000000000164 .L0 
     /tmp/ccIj1CqZ.s:332    .text:0000000000000168 .L0 
     /tmp/ccIj1CqZ.s:334    .text:0000000000000168 .L0 
     /tmp/ccIj1CqZ.s:342    .text:0000000000000178 .L0 
     /tmp/ccIj1CqZ.s:348    .text:0000000000000188 .L0 
     /tmp/ccIj1CqZ.s:349    .text:0000000000000188 .L0 
       src/Riscv.cpp:79     .text:0000000000000188 .L0 
     /tmp/ccIj1CqZ.s:358    .text:000000000000018c .L0 
     /tmp/ccIj1CqZ.s:371    .text:0000000000000194 .L0 
     /tmp/ccIj1CqZ.s:385    .text:000000000000019c .L0 
     /tmp/ccIj1CqZ.s:401    .text:00000000000001a4 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 39


     /tmp/ccIj1CqZ.s:419    .text:00000000000001ac .L0 
     /tmp/ccIj1CqZ.s:439    .text:00000000000001b4 .L0 
     /tmp/ccIj1CqZ.s:461    .text:00000000000001bc .L0 
     /tmp/ccIj1CqZ.s:485    .text:00000000000001c4 .L0 
     /tmp/ccIj1CqZ.s:511    .text:00000000000001cc .L0 
     /tmp/ccIj1CqZ.s:539    .text:00000000000001d4 .L0 
     /tmp/ccIj1CqZ.s:569    .text:00000000000001dc .L0 
     /tmp/ccIj1CqZ.s:601    .text:00000000000001e4 .L0 
     /tmp/ccIj1CqZ.s:635    .text:00000000000001ec .L0 
     /tmp/ccIj1CqZ.s:671    .text:00000000000001f4 .L0 
     /tmp/ccIj1CqZ.s:677    .text:00000000000001fc .L0 
     /tmp/ccIj1CqZ.s:678    .text:00000000000001fc .L0 
     /tmp/ccIj1CqZ.s:679    .text:00000000000001fc .L0 
  src/../h/Riscv.hpp:81     .text:00000000000001fc .L0 
     /tmp/ccIj1CqZ.s:688    .text:0000000000000204 .L0 
     /tmp/ccIj1CqZ.s:689    .text:0000000000000204 .L0 
     /tmp/ccIj1CqZ.s:696    .text:0000000000000208 .L0 
     /tmp/ccIj1CqZ.s:697    .text:0000000000000208 .L0 
     /tmp/ccIj1CqZ.s:698    .text:0000000000000208 .L0 
  src/../h/Riscv.hpp:86     .text:0000000000000208 .L0 
     /tmp/ccIj1CqZ.s:706    .text:0000000000000210 .L0 
     /tmp/ccIj1CqZ.s:707    .text:0000000000000210 .L0 
     /tmp/ccIj1CqZ.s:712    .text:0000000000000214 .L0 
     /tmp/ccIj1CqZ.s:713    .text:0000000000000214 .L0 
     /tmp/ccIj1CqZ.s:717    .text:0000000000000224 .L0 
     /tmp/ccIj1CqZ.s:718    .text:0000000000000224 .L0 
     /tmp/ccIj1CqZ.s:722    .text:0000000000000230 .L0 
     /tmp/ccIj1CqZ.s:723    .text:0000000000000230 .L0 
     /tmp/ccIj1CqZ.s:727    .text:0000000000000240 .L0 
     /tmp/ccIj1CqZ.s:728    .text:0000000000000240 .L0 
     /tmp/ccIj1CqZ.s:732    .text:0000000000000250 .L0 
     /tmp/ccIj1CqZ.s:733    .text:0000000000000250 .L0 
     /tmp/ccIj1CqZ.s:737    .text:000000000000025c .L0 
     /tmp/ccIj1CqZ.s:738    .text:000000000000025c .L0 
     /tmp/ccIj1CqZ.s:742    .text:000000000000026c .L0 
     /tmp/ccIj1CqZ.s:743    .text:000000000000026c .L0 
     /tmp/ccIj1CqZ.s:747    .text:000000000000027c .L0 
     /tmp/ccIj1CqZ.s:748    .text:000000000000027c .L0 
     /tmp/ccIj1CqZ.s:752    .text:0000000000000288 .L0 
     /tmp/ccIj1CqZ.s:753    .text:0000000000000288 .L0 
     /tmp/ccIj1CqZ.s:777    .text:000000000000029c .L0 
     /tmp/ccIj1CqZ.s:778    .text:000000000000029c .L0 
     /tmp/ccIj1CqZ.s:783    .text:00000000000002b0 .L0 
     /tmp/ccIj1CqZ.s:784    .text:00000000000002b0 .L0 
     /tmp/ccIj1CqZ.s:787    .text:00000000000002b8 .L0 
     /tmp/ccIj1CqZ.s:788    .text:00000000000002b8 .L0 
     /tmp/ccIj1CqZ.s:795    .text:00000000000002c4 .L0 
     /tmp/ccIj1CqZ.s:796    .text:00000000000002c4 .L0 
     /tmp/ccIj1CqZ.s:801    .text:00000000000002c8 .L0 
     /tmp/ccIj1CqZ.s:803    .text:00000000000002cc .L0 
     /tmp/ccIj1CqZ.s:809    .text:00000000000002d0 .L0 
     /tmp/ccIj1CqZ.s:810    .text:00000000000002d0 .L0 
     /tmp/ccIj1CqZ.s:811    .text:00000000000002d0 .L0 
     /tmp/ccIj1CqZ.s:818    .text:00000000000002d8 .L0 
     /tmp/ccIj1CqZ.s:824    .text:00000000000002dc .L0 
     /tmp/ccIj1CqZ.s:825    .text:00000000000002dc .L0 
     /tmp/ccIj1CqZ.s:830    .text:00000000000002e4 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 40


     /tmp/ccIj1CqZ.s:831    .text:00000000000002e4 .L0 
  src/../h/Riscv.hpp:60     .text:00000000000002e4 .L0 
     /tmp/ccIj1CqZ.s:843    .text:00000000000002e8 .L0 
     /tmp/ccIj1CqZ.s:844    .text:00000000000002e8 .L0 
  src/../h/Riscv.hpp:70     .text:00000000000002e8 .L0 
     /tmp/ccIj1CqZ.s:851    .text:00000000000002ec .L0 
     /tmp/ccIj1CqZ.s:859    .text:00000000000002f0 .L0 
     /tmp/ccIj1CqZ.s:860    .text:00000000000002f0 .L0 
     /tmp/ccIj1CqZ.s:866    .text:00000000000002fc .L0 
     /tmp/ccIj1CqZ.s:872    .text:0000000000000304 .L0 
     /tmp/ccIj1CqZ.s:873    .text:0000000000000304 .L0 
     /tmp/ccIj1CqZ.s:879    .text:0000000000000310 .L0 
     /tmp/ccIj1CqZ.s:880    .text:0000000000000310 .L0 
  src/../h/Riscv.hpp:60     .text:0000000000000310 .L0 
     /tmp/ccIj1CqZ.s:892    .text:0000000000000314 .L0 
     /tmp/ccIj1CqZ.s:893    .text:0000000000000314 .L0 
  src/../h/Riscv.hpp:70     .text:0000000000000314 .L0 
     /tmp/ccIj1CqZ.s:900    .text:0000000000000318 .L0 
     /tmp/ccIj1CqZ.s:908    .text:000000000000031c .L0 
     /tmp/ccIj1CqZ.s:909    .text:000000000000031c .L0 
     /tmp/ccIj1CqZ.s:913    .text:000000000000032c .L0 
     /tmp/ccIj1CqZ.s:917    .text:0000000000000330 .L0 
     /tmp/ccIj1CqZ.s:918    .text:0000000000000330 .L0 
     /tmp/ccIj1CqZ.s:919    .text:0000000000000330 .L0 
     /tmp/ccIj1CqZ.s:921    .text:0000000000000334 .L0 
     /tmp/ccIj1CqZ.s:925    .text:000000000000033c .L0 
     /tmp/ccIj1CqZ.s:926    .text:000000000000033c .L0 
     /tmp/ccIj1CqZ.s:930    .text:000000000000034c .L0 
     /tmp/ccIj1CqZ.s:932    .text:0000000000000350 .L0 
     /tmp/ccIj1CqZ.s:933    .text:0000000000000350 .L0 
     /tmp/ccIj1CqZ.s:939    .text:0000000000000368 .L0 
     /tmp/ccIj1CqZ.s:940    .text:0000000000000368 .L0 
     /tmp/ccIj1CqZ.s:942    .text:000000000000036c .L0 
     /tmp/ccIj1CqZ.s:945    .text:0000000000000370 .L0 
     /tmp/ccIj1CqZ.s:955    .text:0000000000000374 .L0 
     /tmp/ccIj1CqZ.s:956    .text:0000000000000374 .L0 
       src/Riscv.cpp:83     .text:0000000000000374 .L0 
     /tmp/ccIj1CqZ.s:963    .text:0000000000000378 .L0 
     /tmp/ccIj1CqZ.s:965    .text:0000000000000378 .L0 
     /tmp/ccIj1CqZ.s:971    .text:000000000000038c .L0 
       src/Riscv.cpp:85     .text:000000000000038c .L0 
     /tmp/ccIj1CqZ.s:982    .text:0000000000000390 .L0 
     /tmp/ccIj1CqZ.s:983    .text:0000000000000390 .L0 
     /tmp/ccIj1CqZ.s:988    .text:0000000000000394 .L0 
  src/../h/Riscv.hpp:60     .text:0000000000000394 .L0 
     /tmp/ccIj1CqZ.s:1000   .text:0000000000000398 .L0 
     /tmp/ccIj1CqZ.s:1001   .text:0000000000000398 .L0 
  src/../h/Riscv.hpp:70     .text:0000000000000398 .L0 
     /tmp/ccIj1CqZ.s:1015   .text:000000000000039c .L0 
     /tmp/ccIj1CqZ.s:1016   .text:00000000000003a0 .L0 
     /tmp/ccIj1CqZ.s:1017   .text:00000000000003a0 .L0 
     /tmp/ccIj1CqZ.s:1019   .text:00000000000003a4 .L0 
     /tmp/ccIj1CqZ.s:1020   .text:00000000000003a4 .L0 
     /tmp/ccIj1CqZ.s:1022   .text:00000000000003a8 .L0 
     /tmp/ccIj1CqZ.s:1024   .text:00000000000003ac .L0 
     /tmp/ccIj1CqZ.s:1027   .text:00000000000003b0 .L0 
     /tmp/ccIj1CqZ.s:1029   .text:00000000000003b4 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 41


     /tmp/ccIj1CqZ.s:1031   .text:00000000000003b8 .L0 
     /tmp/ccIj1CqZ.s:1033   .text:00000000000003bc .L0 
     /tmp/ccIj1CqZ.s:1037   .text:00000000000003c0 .L0 
     /tmp/ccIj1CqZ.s:1045   .text:00000000000003c0 .L0 
     /tmp/ccIj1CqZ.s:1046   .text:00000000000003c0 .L0 
       src/Riscv.cpp:89     .text:00000000000003c0 .L0 
     /tmp/ccIj1CqZ.s:1053   .text:00000000000003c4 .L0 
     /tmp/ccIj1CqZ.s:1055   .text:00000000000003c4 .L0 
     /tmp/ccIj1CqZ.s:1061   .text:00000000000003d8 .L0 
     /tmp/ccIj1CqZ.s:1062   .text:00000000000003d8 .L0 
     /tmp/ccIj1CqZ.s:1075   .text:00000000000003e4 .L0 
     /tmp/ccIj1CqZ.s:1076   .text:00000000000003e4 .L0 
     /tmp/ccIj1CqZ.s:1082   .text:00000000000003ec .L0 
     /tmp/ccIj1CqZ.s:1083   .text:00000000000003ec .L0 
     /tmp/ccIj1CqZ.s:1088   .text:00000000000003f0 .L0 
       src/Riscv.cpp:95     .text:00000000000003f0 .L0 
     /tmp/ccIj1CqZ.s:1101   .text:00000000000003f8 .L0 
     /tmp/ccIj1CqZ.s:1102   .text:00000000000003f8 .L0 
     /tmp/ccIj1CqZ.s:1107   .text:0000000000000408 .L0 
       src/Riscv.cpp:99     .text:0000000000000408 .L0 
     /tmp/ccIj1CqZ.s:1120   .text:0000000000000410 .L0 
     /tmp/ccIj1CqZ.s:1121   .text:0000000000000410 .L0 
     /tmp/ccIj1CqZ.s:1122   .text:0000000000000410 .L0 
     /tmp/ccIj1CqZ.s:1123   .text:0000000000000410 .L0 
       src/Riscv.cpp:105    .text:0000000000000410 .L0 
     /tmp/ccIj1CqZ.s:1130   .text:0000000000000414 .L0 
       src/Riscv.cpp:106    .text:0000000000000414 .L0 
     /tmp/ccIj1CqZ.s:1136   .text:0000000000000418 .L0 
       src/Riscv.cpp:107    .text:0000000000000418 .L0 
     /tmp/ccIj1CqZ.s:1142   .text:000000000000041c .L0 
     /tmp/ccIj1CqZ.s:1144   .text:000000000000041c .L0 
     /tmp/ccIj1CqZ.s:1152   .text:0000000000000434 .L0 
     /tmp/ccIj1CqZ.s:1153   .text:0000000000000434 .L0 
     /tmp/ccIj1CqZ.s:1159   .text:0000000000000444 .L0 
     /tmp/ccIj1CqZ.s:1162   .text:0000000000000448 .L0 
     /tmp/ccIj1CqZ.s:1163   .text:0000000000000448 .L0 
     /tmp/ccIj1CqZ.s:1165   .text:000000000000044c .L0 
     /tmp/ccIj1CqZ.s:1169   .text:0000000000000450 .L0 
       src/Riscv.cpp:120    .text:0000000000000450 .L0 
     /tmp/ccIj1CqZ.s:1181   .text:0000000000000458 .L0 
     /tmp/ccIj1CqZ.s:1189   .text:0000000000000460 .L0 
     /tmp/ccIj1CqZ.s:1190   .text:0000000000000460 .L0 
     /tmp/ccIj1CqZ.s:1193   .text:0000000000000468 .L0 
       src/Riscv.cpp:124    .text:0000000000000468 .L0 
     /tmp/ccIj1CqZ.s:1205   .text:0000000000000470 .L0 
     /tmp/ccIj1CqZ.s:1206   .text:0000000000000470 .L0 
     /tmp/ccIj1CqZ.s:1214   .text:000000000000047c .L0 
     /tmp/ccIj1CqZ.s:1215   .text:000000000000047c .L0 
     /tmp/ccIj1CqZ.s:1216   .text:000000000000047c .L0 
       src/Riscv.cpp:132    .text:000000000000047c .L0 
     /tmp/ccIj1CqZ.s:1223   .text:0000000000000480 .L0 
       src/Riscv.cpp:133    .text:0000000000000480 .L0 
     /tmp/ccIj1CqZ.s:1229   .text:0000000000000484 .L0 
     /tmp/ccIj1CqZ.s:1231   .text:0000000000000484 .L0 
     /tmp/ccIj1CqZ.s:1235   .text:0000000000000490 .L0 
     /tmp/ccIj1CqZ.s:1238   .text:0000000000000494 .L0 
     /tmp/ccIj1CqZ.s:1239   .text:0000000000000494 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 42


     /tmp/ccIj1CqZ.s:1241   .text:0000000000000498 .L0 
     /tmp/ccIj1CqZ.s:1245   .text:000000000000049c .L0 
       src/Riscv.cpp:143    .text:000000000000049c .L0 
     /tmp/ccIj1CqZ.s:1257   .text:00000000000004a4 .L0 
     /tmp/ccIj1CqZ.s:1265   .text:00000000000004ac .L0 
     /tmp/ccIj1CqZ.s:1266   .text:00000000000004ac .L0 
       src/Riscv.cpp:147    .text:00000000000004ac .L0 
     /tmp/ccIj1CqZ.s:1273   .text:00000000000004b0 .L0 
     /tmp/ccIj1CqZ.s:1275   .text:00000000000004b0 .L0 
     /tmp/ccIj1CqZ.s:1278   .text:00000000000004b8 .L0 
       src/Riscv.cpp:149    .text:00000000000004b8 .L0 
     /tmp/ccIj1CqZ.s:1291   .text:00000000000004c0 .L0 
     /tmp/ccIj1CqZ.s:1292   .text:00000000000004c0 .L0 
       src/Riscv.cpp:153    .text:00000000000004c0 .L0 
     /tmp/ccIj1CqZ.s:1299   .text:00000000000004c4 .L0 
     /tmp/ccIj1CqZ.s:1301   .text:00000000000004c4 .L0 
     /tmp/ccIj1CqZ.s:1304   .text:00000000000004cc .L0 
       src/Riscv.cpp:155    .text:00000000000004cc .L0 
     /tmp/ccIj1CqZ.s:1317   .text:00000000000004d4 .L0 
     /tmp/ccIj1CqZ.s:1318   .text:00000000000004d4 .L0 
       src/Riscv.cpp:159    .text:00000000000004d4 .L0 
     /tmp/ccIj1CqZ.s:1325   .text:00000000000004d8 .L0 
     /tmp/ccIj1CqZ.s:1327   .text:00000000000004d8 .L0 
     /tmp/ccIj1CqZ.s:1330   .text:00000000000004e0 .L0 
       src/Riscv.cpp:161    .text:00000000000004e0 .L0 
     /tmp/ccIj1CqZ.s:1343   .text:00000000000004e8 .L0 
     /tmp/ccIj1CqZ.s:1344   .text:00000000000004e8 .L0 
       src/Riscv.cpp:165    .text:00000000000004e8 .L0 
     /tmp/ccIj1CqZ.s:1351   .text:00000000000004ec .L0 
     /tmp/ccIj1CqZ.s:1353   .text:00000000000004ec .L0 
     /tmp/ccIj1CqZ.s:1356   .text:00000000000004f4 .L0 
       src/Riscv.cpp:167    .text:00000000000004f4 .L0 
     /tmp/ccIj1CqZ.s:1369   .text:00000000000004fc .L0 
     /tmp/ccIj1CqZ.s:1370   .text:00000000000004fc .L0 
     /tmp/ccIj1CqZ.s:1374   .text:000000000000050c .L0 
       src/Riscv.cpp:171    .text:000000000000050c .L0 
     /tmp/ccIj1CqZ.s:1387   .text:0000000000000514 .L0 
     /tmp/ccIj1CqZ.s:1388   .text:0000000000000514 .L0 
       src/Riscv.cpp:175    .text:0000000000000514 .L0 
     /tmp/ccIj1CqZ.s:1395   .text:0000000000000518 .L0 
     /tmp/ccIj1CqZ.s:1397   .text:0000000000000518 .L0 
     /tmp/ccIj1CqZ.s:1420   .text:0000000000000530 .L0 
     /tmp/ccIj1CqZ.s:1434   .bss:0000000000000008 _ZN5Riscv7OUTbuffE
     /tmp/ccIj1CqZ.s:1430   .bss:0000000000000000 _ZN5Riscv6INbuffE
     /tmp/ccIj1CqZ.s:1427   .bss:0000000000000000 .LANCHOR0
     /tmp/ccIj1CqZ.s:1445   .text:0000000000000530 .L0 
     /tmp/ccIj1CqZ.s:57     .text:000000000000002c .L0 
     /tmp/ccIj1CqZ.s:132    .text:0000000000000078 .L0 
     /tmp/ccIj1CqZ.s:138    .text:0000000000000084 .L0 
     /tmp/ccIj1CqZ.s:172    .text:00000000000000c4 .L0 
     /tmp/ccIj1CqZ.s:189    .text:00000000000000ec .L0 
     /tmp/ccIj1CqZ.s:245    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccIj1CqZ.s:713    .text:0000000000000214 .L0 
     /tmp/ccIj1CqZ.s:248    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccIj1CqZ.s:723    .text:0000000000000230 .L0 
     /tmp/ccIj1CqZ.s:251    .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccIj1CqZ.s:728    .text:0000000000000240 .L0 
GAS LISTING /tmp/ccIj1CqZ.s 			page 43


     /tmp/ccIj1CqZ.s:738    .text:000000000000025c .L0 
     /tmp/ccIj1CqZ.s:254    .rodata.str1.8:0000000000000018 .LC3
     /tmp/ccIj1CqZ.s:743    .text:000000000000026c .L0 
     /tmp/ccIj1CqZ.s:753    .text:0000000000000288 .L0 
     /tmp/ccIj1CqZ.s:778    .text:000000000000029c .L0 
     /tmp/ccIj1CqZ.s:788    .text:00000000000002b8 .L0 
     /tmp/ccIj1CqZ.s:909    .text:000000000000031c .L0 
     /tmp/ccIj1CqZ.s:926    .text:000000000000033c .L0 
     /tmp/ccIj1CqZ.s:935    .text:0000000000000358 .L0 
     /tmp/ccIj1CqZ.s:1370   .text:00000000000004fc .L0 
     /tmp/ccIj1CqZ.s:1398   .text:000000000000051c .L0 
     /tmp/ccIj1CqZ.s:87     .text:0000000000000054 .L4
     /tmp/ccIj1CqZ.s:76     .text:0000000000000048 .L3
     /tmp/ccIj1CqZ.s:156    .text:00000000000000a8 .L15
     /tmp/ccIj1CqZ.s:174    .text:00000000000000d0 .L16
     /tmp/ccIj1CqZ.s:135    .text:0000000000000084 .L8
     /tmp/ccIj1CqZ.s:141    .text:0000000000000090 .L7
     /tmp/ccIj1CqZ.s:758    .text:000000000000029c .L44
     /tmp/ccIj1CqZ.s:853    .text:00000000000002f0 .L45
     /tmp/ccIj1CqZ.s:947    .text:0000000000000374 .L46
     /tmp/ccIj1CqZ.s:1036   .text:00000000000003c0 .L47
     /tmp/ccIj1CqZ.s:1071   .text:00000000000003e4 .L48
     /tmp/ccIj1CqZ.s:1097   .text:00000000000003f8 .L49
     /tmp/ccIj1CqZ.s:1116   .text:0000000000000410 .L50
     /tmp/ccIj1CqZ.s:1184   .text:0000000000000460 .L51
     /tmp/ccIj1CqZ.s:1202   .text:0000000000000470 .L52
     /tmp/ccIj1CqZ.s:1210   .text:000000000000047c .L53
     /tmp/ccIj1CqZ.s:1260   .text:00000000000004ac .L54
     /tmp/ccIj1CqZ.s:1287   .text:00000000000004c0 .L55
     /tmp/ccIj1CqZ.s:1313   .text:00000000000004d4 .L56
     /tmp/ccIj1CqZ.s:1339   .text:00000000000004e8 .L57
     /tmp/ccIj1CqZ.s:1365   .text:00000000000004fc .L58
     /tmp/ccIj1CqZ.s:1383   .text:0000000000000514 .L59
     /tmp/ccIj1CqZ.s:978    .text:0000000000000390 .L25
     /tmp/ccIj1CqZ.s:820    .text:00000000000002dc .L60
     /tmp/ccIj1CqZ.s:1008   .text:000000000000039c .L17
     /tmp/ccIj1CqZ.s:804    .text:00000000000002d0 .L19
     /tmp/ccIj1CqZ.s:902    .text:000000000000031c .L61
     /tmp/ccIj1CqZ.s:869    .text:0000000000000304 .L22
     /tmp/ccIj1CqZ.s:915    .text:0000000000000330 .L23
     /tmp/ccIj1CqZ.s:1178   .text:0000000000000458 .L41
     /tmp/ccIj1CqZ.s:1166   .text:0000000000000450 .L30
     /tmp/ccIj1CqZ.s:1254   .text:00000000000004a4 .L42
     /tmp/ccIj1CqZ.s:1242   .text:000000000000049c .L34
     /tmp/ccIj1CqZ.s:161    .text:00000000000000ac .LEHB0
     /tmp/ccIj1CqZ.s:113    .text:0000000000000060 .LFB37
     /tmp/ccIj1CqZ.s:164    .text:00000000000000b4 .LEHE0
     /tmp/ccIj1CqZ.s:167    .text:00000000000000bc .LEHB1
     /tmp/ccIj1CqZ.s:170    .text:00000000000000c4 .LEHE1
     /tmp/ccIj1CqZ.s:192    .text:00000000000000f8 .L12
     /tmp/ccIj1CqZ.s:178    .text:00000000000000d4 .LEHB2
     /tmp/ccIj1CqZ.s:181    .text:00000000000000dc .LEHE2
     /tmp/ccIj1CqZ.s:184    .text:00000000000000e4 .LEHB3
     /tmp/ccIj1CqZ.s:187    .text:00000000000000ec .LEHE3
     /tmp/ccIj1CqZ.s:202    .text:0000000000000114 .L13
     /tmp/ccIj1CqZ.s:199    .text:000000000000010c .LEHB4
     /tmp/ccIj1CqZ.s:211    .text:0000000000000130 .LEHE4
GAS LISTING /tmp/ccIj1CqZ.s 			page 44


     /tmp/ccIj1CqZ.s:3836   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccIj1CqZ.s:5795   .debug_str:0000000000000972 .LASF205
     /tmp/ccIj1CqZ.s:5527   .debug_str:0000000000000211 .LASF206
     /tmp/ccIj1CqZ.s:5701   .debug_str:0000000000000718 .LASF207
     /tmp/ccIj1CqZ.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccIj1CqZ.s:1437   .text:0000000000000530 .Letext0
     /tmp/ccIj1CqZ.s:5455   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccIj1CqZ.s:5599   .debug_str:000000000000043c .LASF0
     /tmp/ccIj1CqZ.s:5625   .debug_str:0000000000000514 .LASF1
     /tmp/ccIj1CqZ.s:5709   .debug_str:000000000000075e .LASF2
     /tmp/ccIj1CqZ.s:5721   .debug_str:00000000000007b6 .LASF4
     /tmp/ccIj1CqZ.s:5603   .debug_str:000000000000045b .LASF3
     /tmp/ccIj1CqZ.s:5473   .debug_str:000000000000005f .LASF5
     /tmp/ccIj1CqZ.s:5689   .debug_str:00000000000006c4 .LASF6
     /tmp/ccIj1CqZ.s:5675   .debug_str:0000000000000662 .LASF7
     /tmp/ccIj1CqZ.s:5613   .debug_str:00000000000004b0 .LASF8
     /tmp/ccIj1CqZ.s:5577   .debug_str:00000000000003a4 .LASF9
     /tmp/ccIj1CqZ.s:5583   .debug_str:00000000000003d0 .LASF10
     /tmp/ccIj1CqZ.s:5511   .debug_str:00000000000001ae .LASF11
     /tmp/ccIj1CqZ.s:5565   .debug_str:000000000000036a .LASF12
     /tmp/ccIj1CqZ.s:5529   .debug_str:000000000000021f .LASF13
     /tmp/ccIj1CqZ.s:5509   .debug_str:000000000000019e .LASF14
     /tmp/ccIj1CqZ.s:5767   .debug_str:00000000000008cd .LASF15
     /tmp/ccIj1CqZ.s:5547   .debug_str:00000000000002a5 .LASF16
     /tmp/ccIj1CqZ.s:5749   .debug_str:000000000000085a .LASF17
     /tmp/ccIj1CqZ.s:5775   .debug_str:00000000000008f9 .LASF63
     /tmp/ccIj1CqZ.s:5877   .debug_str:0000000000000c4d .LASF18
     /tmp/ccIj1CqZ.s:5579   .debug_str:00000000000003b4 .LASF20
     /tmp/ccIj1CqZ.s:5467   .debug_str:000000000000003b .LASF45
     /tmp/ccIj1CqZ.s:5641   .debug_str:000000000000056c .LASF134
     /tmp/ccIj1CqZ.s:5723   .debug_str:00000000000007bd .LASF19
     /tmp/ccIj1CqZ.s:5471   .debug_str:0000000000000053 .LASF21
     /tmp/ccIj1CqZ.s:5765   .debug_str:00000000000008c0 .LASF22
     /tmp/ccIj1CqZ.s:5849   .debug_str:0000000000000b8b .LASF23
     /tmp/ccIj1CqZ.s:5669   .debug_str:0000000000000640 .LASF82
     /tmp/ccIj1CqZ.s:5541   .debug_str:0000000000000284 .LASF24
     /tmp/ccIj1CqZ.s:5521   .debug_str:00000000000001e4 .LASF26
     /tmp/ccIj1CqZ.s:5743   .debug_str:0000000000000845 .LASF67
     /tmp/ccIj1CqZ.s:5607   .debug_str:0000000000000476 .LASF69
     /tmp/ccIj1CqZ.s:5651   .debug_str:00000000000005c6 .LASF25
     /tmp/ccIj1CqZ.s:5499   .debug_str:000000000000012d .LASF27
     /tmp/ccIj1CqZ.s:5777   .debug_str:0000000000000901 .LASF32
     /tmp/ccIj1CqZ.s:5655   .debug_str:00000000000005dc .LASF34
     /tmp/ccIj1CqZ.s:5597   .debug_str:0000000000000436 .LASF28
     /tmp/ccIj1CqZ.s:5475   .debug_str:0000000000000066 .LASF29
     /tmp/ccIj1CqZ.s:5469   .debug_str:000000000000004b .LASF30
     /tmp/ccIj1CqZ.s:5667   .debug_str:000000000000062e .LASF31
     /tmp/ccIj1CqZ.s:5711   .debug_str:000000000000076c .LASF33
     /tmp/ccIj1CqZ.s:5503   .debug_str:0000000000000166 .LASF35
     /tmp/ccIj1CqZ.s:5631   .debug_str:0000000000000533 .LASF36
     /tmp/ccIj1CqZ.s:5825   .debug_str:0000000000000b1b .LASF37
     /tmp/ccIj1CqZ.s:5791   .debug_str:000000000000095d .LASF38
     /tmp/ccIj1CqZ.s:5683   .debug_str:000000000000069b .LASF39
     /tmp/ccIj1CqZ.s:5493   .debug_str:0000000000000105 .LASF40
     /tmp/ccIj1CqZ.s:5569   .debug_str:0000000000000386 .LASF41
     /tmp/ccIj1CqZ.s:5857   .debug_str:0000000000000bc1 .LASF42
     /tmp/ccIj1CqZ.s:5629   .debug_str:000000000000052d .LASF43
GAS LISTING /tmp/ccIj1CqZ.s 			page 45


     /tmp/ccIj1CqZ.s:5717   .debug_str:000000000000079e .LASF44
     /tmp/ccIj1CqZ.s:5863   .debug_str:0000000000000be1 .LASF93
     /tmp/ccIj1CqZ.s:5747   .debug_str:0000000000000851 .LASF46
     /tmp/ccIj1CqZ.s:5871   .debug_str:0000000000000c2a .LASF47
     /tmp/ccIj1CqZ.s:5811   .debug_str:0000000000000ab9 .LASF48
     /tmp/ccIj1CqZ.s:5465   .debug_str:0000000000000036 .LASF49
     /tmp/ccIj1CqZ.s:5663   .debug_str:0000000000000606 .LASF50
     /tmp/ccIj1CqZ.s:5803   .debug_str:0000000000000a85 .LASF51
     /tmp/ccIj1CqZ.s:5507   .debug_str:0000000000000193 .LASF208
     /tmp/ccIj1CqZ.s:5479   .debug_str:0000000000000097 .LASF209
     /tmp/ccIj1CqZ.s:5623   .debug_str:0000000000000503 .LASF170
     /tmp/ccIj1CqZ.s:5815   .debug_str:0000000000000ad6 .LASF172
     /tmp/ccIj1CqZ.s:5687   .debug_str:00000000000006b5 .LASF210
     /tmp/ccIj1CqZ.s:5531   .debug_str:000000000000022f .LASF211
     /tmp/ccIj1CqZ.s:5839   .debug_str:0000000000000b64 .LASF52
     /tmp/ccIj1CqZ.s:5823   .debug_str:0000000000000b16 .LASF212
     /tmp/ccIj1CqZ.s:5759   .debug_str:00000000000008a8 .LASF53
     /tmp/ccIj1CqZ.s:5659   .debug_str:00000000000005fc .LASF54
     /tmp/ccIj1CqZ.s:5653   .debug_str:00000000000005d7 .LASF55
     /tmp/ccIj1CqZ.s:5751   .debug_str:0000000000000870 .LASF56
     /tmp/ccIj1CqZ.s:5619   .debug_str:00000000000004eb .LASF57
     /tmp/ccIj1CqZ.s:5501   .debug_str:0000000000000149 .LASF58
     /tmp/ccIj1CqZ.s:5737   .debug_str:000000000000081d .LASF59
     /tmp/ccIj1CqZ.s:5611   .debug_str:0000000000000493 .LASF60
     /tmp/ccIj1CqZ.s:5533   .debug_str:000000000000024a .LASF61
     /tmp/ccIj1CqZ.s:5673   .debug_str:0000000000000652 .LASF62
     /tmp/ccIj1CqZ.s:5567   .debug_str:0000000000000379 .LASF64
     /tmp/ccIj1CqZ.s:5513   .debug_str:00000000000001bd .LASF65
     /tmp/ccIj1CqZ.s:5485   .debug_str:00000000000000cc .LASF66
     /tmp/ccIj1CqZ.s:5699   .debug_str:000000000000070f .LASF68
     /tmp/ccIj1CqZ.s:5665   .debug_str:000000000000060e .LASF70
     /tmp/ccIj1CqZ.s:5647   .debug_str:000000000000059b .LASF71
     /tmp/ccIj1CqZ.s:5477   .debug_str:0000000000000076 .LASF72
     /tmp/ccIj1CqZ.s:5591   .debug_str:0000000000000401 .LASF73
     /tmp/ccIj1CqZ.s:5649   .debug_str:00000000000005a5 .LASF74
     /tmp/ccIj1CqZ.s:5617   .debug_str:00000000000004dc .LASF75
     /tmp/ccIj1CqZ.s:5731   .debug_str:00000000000007d6 .LASF76
     /tmp/ccIj1CqZ.s:5563   .debug_str:0000000000000356 .LASF77
     /tmp/ccIj1CqZ.s:5555   .debug_str:0000000000000310 .LASF78
     /tmp/ccIj1CqZ.s:5483   .debug_str:00000000000000b3 .LASF79
     /tmp/ccIj1CqZ.s:5643   .debug_str:0000000000000579 .LASF80
     /tmp/ccIj1CqZ.s:5551   .debug_str:00000000000002d1 .LASF81
     /tmp/ccIj1CqZ.s:5883   .debug_str:0000000000000c69 .LASF83
     /tmp/ccIj1CqZ.s:5705   .debug_str:000000000000074e .LASF84
     /tmp/ccIj1CqZ.s:5543   .debug_str:000000000000028d .LASF85
     /tmp/ccIj1CqZ.s:5869   .debug_str:0000000000000c1b .LASF86
     /tmp/ccIj1CqZ.s:5771   .debug_str:00000000000008e1 .LASF87
     /tmp/ccIj1CqZ.s:5773   .debug_str:00000000000008e8 .LASF88
     /tmp/ccIj1CqZ.s:5661   .debug_str:0000000000000601 .LASF89
     /tmp/ccIj1CqZ.s:5821   .debug_str:0000000000000b07 .LASF90
     /tmp/ccIj1CqZ.s:5481   .debug_str:00000000000000ad .LASF91
     /tmp/ccIj1CqZ.s:5491   .debug_str:00000000000000f5 .LASF92
     /tmp/ccIj1CqZ.s:5787   .debug_str:0000000000000939 .LASF94
     /tmp/ccIj1CqZ.s:5841   .debug_str:0000000000000b6e .LASF95
     /tmp/ccIj1CqZ.s:5817   .debug_str:0000000000000af3 .LASF96
     /tmp/ccIj1CqZ.s:5761   .debug_str:00000000000008ad .LASF213
     /tmp/ccIj1CqZ.s:5887   .debug_str:0000000000000c83 .LASF97
GAS LISTING /tmp/ccIj1CqZ.s 			page 46


     /tmp/ccIj1CqZ.s:5573   .debug_str:0000000000000390 .LASF98
     /tmp/ccIj1CqZ.s:5755   .debug_str:000000000000088e .LASF99
     /tmp/ccIj1CqZ.s:5691   .debug_str:00000000000006cb .LASF100
     /tmp/ccIj1CqZ.s:5781   .debug_str:0000000000000911 .LASF101
     /tmp/ccIj1CqZ.s:5693   .debug_str:00000000000006e6 .LASF102
     /tmp/ccIj1CqZ.s:5537   .debug_str:000000000000025b .LASF103
     /tmp/ccIj1CqZ.s:5515   .debug_str:00000000000001c2 .LASF104
     /tmp/ccIj1CqZ.s:5523   .debug_str:00000000000001f7 .LASF105
     /tmp/ccIj1CqZ.s:5657   .debug_str:00000000000005f3 .LASF106
     /tmp/ccIj1CqZ.s:5783   .debug_str:000000000000091f .LASF107
     /tmp/ccIj1CqZ.s:5861   .debug_str:0000000000000bd6 .LASF108
     /tmp/ccIj1CqZ.s:5769   .debug_str:00000000000008d9 .LASF109
     /tmp/ccIj1CqZ.s:5809   .debug_str:0000000000000ab1 .LASF110
     /tmp/ccIj1CqZ.s:5837   .debug_str:0000000000000b5b .LASF111
     /tmp/ccIj1CqZ.s:5855   .debug_str:0000000000000bbb .LASF112
     /tmp/ccIj1CqZ.s:5517   .debug_str:00000000000001cb .LASF113
     /tmp/ccIj1CqZ.s:5525   .debug_str:0000000000000201 .LASF214
     /tmp/ccIj1CqZ.s:5581   .debug_str:00000000000003c0 .LASF215
     /tmp/ccIj1CqZ.s:5609   .debug_str:0000000000000485 .LASF114
     /tmp/ccIj1CqZ.s:5851   .debug_str:0000000000000bad .LASF115
     /tmp/ccIj1CqZ.s:5585   .debug_str:00000000000003de .LASF116
     /tmp/ccIj1CqZ.s:5819   .debug_str:0000000000000b00 .LASF117
     /tmp/ccIj1CqZ.s:5459   .debug_str:000000000000000b .LASF118
     /tmp/ccIj1CqZ.s:5729   .debug_str:00000000000007d1 .LASF119
     /tmp/ccIj1CqZ.s:5627   .debug_str:0000000000000527 .LASF120
     /tmp/ccIj1CqZ.s:5881   .debug_str:0000000000000c63 .LASF121
     /tmp/ccIj1CqZ.s:5461   .debug_str:000000000000001e .LASF122
     /tmp/ccIj1CqZ.s:5779   .debug_str:000000000000090c .LASF123
     /tmp/ccIj1CqZ.s:5843   .debug_str:0000000000000b75 .LASF124
     /tmp/ccIj1CqZ.s:5827   .debug_str:0000000000000b34 .LASF128
     /tmp/ccIj1CqZ.s:5559   .debug_str:0000000000000344 .LASF125
     /tmp/ccIj1CqZ.s:5793   .debug_str:0000000000000965 .LASF126
     /tmp/ccIj1CqZ.s:5535   .debug_str:000000000000024f .LASF127
     /tmp/ccIj1CqZ.s:5733   .debug_str:00000000000007fd .LASF129
     /tmp/ccIj1CqZ.s:5605   .debug_str:000000000000046d .LASF130
     /tmp/ccIj1CqZ.s:5553   .debug_str:0000000000000307 .LASF131
     /tmp/ccIj1CqZ.s:5859   .debug_str:0000000000000bcd .LASF132
     /tmp/ccIj1CqZ.s:5703   .debug_str:0000000000000744 .LASF133
     /tmp/ccIj1CqZ.s:5549   .debug_str:00000000000002bb .LASF135
     /tmp/ccIj1CqZ.s:5879   .debug_str:0000000000000c5a .LASF136
     /tmp/ccIj1CqZ.s:5735   .debug_str:0000000000000808 .LASF137
     /tmp/ccIj1CqZ.s:5497   .debug_str:0000000000000124 .LASF138
     /tmp/ccIj1CqZ.s:5867   .debug_str:0000000000000c06 .LASF139
     /tmp/ccIj1CqZ.s:5713   .debug_str:0000000000000776 .LASF140
     /tmp/ccIj1CqZ.s:5615   .debug_str:00000000000004c3 .LASF141
     /tmp/ccIj1CqZ.s:5487   .debug_str:00000000000000d1 .LASF142
     /tmp/ccIj1CqZ.s:5539   .debug_str:000000000000026b .LASF143
     /tmp/ccIj1CqZ.s:5753   .debug_str:0000000000000883 .LASF144
     /tmp/ccIj1CqZ.s:5505   .debug_str:000000000000017b .LASF145
     /tmp/ccIj1CqZ.s:5587   .debug_str:00000000000003ec .LASF146
     /tmp/ccIj1CqZ.s:5645   .debug_str:0000000000000585 .LASF147
     /tmp/ccIj1CqZ.s:5457   .debug_str:0000000000000000 .LASF148
     /tmp/ccIj1CqZ.s:5789   .debug_str:0000000000000945 .LASF149
     /tmp/ccIj1CqZ.s:5707   .debug_str:0000000000000753 .LASF150
     /tmp/ccIj1CqZ.s:5875   .debug_str:0000000000000c35 .LASF151
     /tmp/ccIj1CqZ.s:5727   .debug_str:00000000000007ca .LASF152
     /tmp/ccIj1CqZ.s:5519   .debug_str:00000000000001d1 .LASF153
GAS LISTING /tmp/ccIj1CqZ.s 			page 47


     /tmp/ccIj1CqZ.s:5745   .debug_str:000000000000084a .LASF154
     /tmp/ccIj1CqZ.s:5637   .debug_str:000000000000054e .LASF155
     /tmp/ccIj1CqZ.s:5575   .debug_str:0000000000000399 .LASF156
     /tmp/ccIj1CqZ.s:5799   .debug_str:0000000000000a4a .LASF157
     /tmp/ccIj1CqZ.s:5621   .debug_str:00000000000004f4 .LASF158
     /tmp/ccIj1CqZ.s:5715   .debug_str:0000000000000782 .LASF159
     /tmp/ccIj1CqZ.s:5589   .debug_str:00000000000003f6 .LASF160
     /tmp/ccIj1CqZ.s:5593   .debug_str:000000000000040a .LASF161
     /tmp/ccIj1CqZ.s:5739   .debug_str:0000000000000828 .LASF162
     /tmp/ccIj1CqZ.s:5801   .debug_str:0000000000000a62 .LASF163
     /tmp/ccIj1CqZ.s:5677   .debug_str:0000000000000675 .LASF164
     /tmp/ccIj1CqZ.s:5805   .debug_str:0000000000000a8f .LASF165
     /tmp/ccIj1CqZ.s:5741   .debug_str:000000000000083e .LASF166
     /tmp/ccIj1CqZ.s:5633   .debug_str:0000000000000540 .LASF167
     /tmp/ccIj1CqZ.s:5635   .debug_str:0000000000000548 .LASF168
     /tmp/ccIj1CqZ.s:5835   .debug_str:0000000000000b56 .LASF171
     /tmp/ccIj1CqZ.s:5807   .debug_str:0000000000000aa7 .LASF169
     /tmp/ccIj1CqZ.s:5697   .debug_str:00000000000006f7 .LASF173
     /tmp/ccIj1CqZ.s:5813   .debug_str:0000000000000ac1 .LASF174
     /tmp/ccIj1CqZ.s:5557   .debug_str:000000000000033c .LASF175
     /tmp/ccIj1CqZ.s:5797   .debug_str:0000000000000a36 .LASF176
     /tmp/ccIj1CqZ.s:5845   .debug_str:0000000000000b7b .LASF177
     /tmp/ccIj1CqZ.s:5495   .debug_str:0000000000000110 .LASF178
     /tmp/ccIj1CqZ.s:5601   .debug_str:0000000000000449 .LASF179
     /tmp/ccIj1CqZ.s:5545   .debug_str:0000000000000292 .LASF180
     /tmp/ccIj1CqZ.s:261    .text:0000000000000130 .LFB38
     /tmp/ccIj1CqZ.s:1421   .text:0000000000000530 .LFE38
     /tmp/ccIj1CqZ.s:5873   .debug_str:0000000000000c30 .LASF181
     /tmp/ccIj1CqZ.s:4992   .debug_loc:0000000000000000 .LLST2
     /tmp/ccIj1CqZ.s:5847   .debug_str:0000000000000b83 .LASF182
     /tmp/ccIj1CqZ.s:5009   .debug_loc:000000000000004b .LLST3
     /tmp/ccIj1CqZ.s:5757   .debug_str:00000000000008a1 .LASF183
     /tmp/ccIj1CqZ.s:5020   .debug_loc:0000000000000081 .LLST4
     /tmp/ccIj1CqZ.s:857    .text:00000000000002f0 .LBB241
     /tmp/ccIj1CqZ.s:950    .text:0000000000000374 .LBE241
     /tmp/ccIj1CqZ.s:5039   .debug_loc:00000000000000dd .LLST34
     /tmp/ccIj1CqZ.s:906    .text:000000000000031c .LBB243
     /tmp/ccIj1CqZ.s:948    .text:0000000000000374 .LBE243
     /tmp/ccIj1CqZ.s:5831   .debug_str:0000000000000b48 .LASF184
     /tmp/ccIj1CqZ.s:923    .text:000000000000033c .LBB244
     /tmp/ccIj1CqZ.s:943    .text:0000000000000370 .LBE244
     /tmp/ccIj1CqZ.s:937    .text:0000000000000368 .LVL45
     /tmp/ccIj1CqZ.s:877    .text:0000000000000310 .LBB245
     /tmp/ccIj1CqZ.s:888    .text:0000000000000314 .LBE245
     /tmp/ccIj1CqZ.s:5050   .debug_loc:0000000000000113 .LLST35
     /tmp/ccIj1CqZ.s:890    .text:0000000000000314 .LBB247
     /tmp/ccIj1CqZ.s:904    .text:000000000000031c .LBE247
     /tmp/ccIj1CqZ.s:5057   .debug_loc:0000000000000136 .LLST36
     /tmp/ccIj1CqZ.s:861    .text:00000000000002f8 .LVL38
     /tmp/ccIj1CqZ.s:875    .text:0000000000000310 .LVL41
     /tmp/ccIj1CqZ.s:5407   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccIj1CqZ.s:5719   .debug_str:00000000000007ae .LASF185
     /tmp/ccIj1CqZ.s:5064   .debug_loc:0000000000000159 .LLST5
     /tmp/ccIj1CqZ.s:953    .text:0000000000000374 .LBB207
     /tmp/ccIj1CqZ.s:979    .text:0000000000000390 .LBE207
     /tmp/ccIj1CqZ.s:5785   .debug_str:000000000000092a .LASF186
     /tmp/ccIj1CqZ.s:5127   .debug_loc:0000000000000286 .LLST30
GAS LISTING /tmp/ccIj1CqZ.s 			page 48


     /tmp/ccIj1CqZ.s:5134   .debug_loc:00000000000002a9 .LLST31
     /tmp/ccIj1CqZ.s:966    .text:0000000000000380 .LVL48
     /tmp/ccIj1CqZ.s:969    .text:000000000000038c .LVL49
     /tmp/ccIj1CqZ.s:1043   .text:00000000000003c0 .LBB193
     /tmp/ccIj1CqZ.s:1068   .text:00000000000003e0 .LBE193
     /tmp/ccIj1CqZ.s:5141   .debug_loc:00000000000002cc .LLST29
     /tmp/ccIj1CqZ.s:1056   .text:00000000000003cc .LVL57
     /tmp/ccIj1CqZ.s:1059   .text:00000000000003d8 .LVL58
     /tmp/ccIj1CqZ.s:1073   .text:00000000000003e4 .LBB178
     /tmp/ccIj1CqZ.s:1094   .text:00000000000003f4 .LBE178
     /tmp/ccIj1CqZ.s:5725   .debug_str:00000000000007c2 .LASF187
     /tmp/ccIj1CqZ.s:5148   .debug_loc:00000000000002ef .LLST27
     /tmp/ccIj1CqZ.s:1078   .text:00000000000003ec .LBB179
     /tmp/ccIj1CqZ.s:1086   .text:00000000000003f0 .LBE179
     /tmp/ccIj1CqZ.s:5155   .debug_loc:0000000000000312 .LLST28
     /tmp/ccIj1CqZ.s:1077   .text:00000000000003ec .LVL60
     /tmp/ccIj1CqZ.s:1099   .text:00000000000003f8 .LBB166
     /tmp/ccIj1CqZ.s:1113   .text:000000000000040c .LBE166
     /tmp/ccIj1CqZ.s:5671   .debug_str:0000000000000645 .LASF188
     /tmp/ccIj1CqZ.s:5162   .debug_loc:0000000000000335 .LLST26
     /tmp/ccIj1CqZ.s:1103   .text:0000000000000400 .LVL63
     /tmp/ccIj1CqZ.s:1105   .text:0000000000000408 .LVL64
     /tmp/ccIj1CqZ.s:5853   .debug_str:0000000000000bb4 .LASF189
     /tmp/ccIj1CqZ.s:5169   .debug_loc:0000000000000358 .LLST21
     /tmp/ccIj1CqZ.s:5885   .debug_str:0000000000000c75 .LASF190
     /tmp/ccIj1CqZ.s:5176   .debug_loc:000000000000037b .LLST22
     /tmp/ccIj1CqZ.s:5183   .debug_loc:000000000000039e .LLST23
     /tmp/ccIj1CqZ.s:5190   .debug_loc:00000000000003c1 .LLST24
     /tmp/ccIj1CqZ.s:5201   .debug_loc:00000000000003f7 .LLST25
     /tmp/ccIj1CqZ.s:1145   .text:0000000000000424 .LVL69
     /tmp/ccIj1CqZ.s:1148   .text:0000000000000430 .LVL70
     /tmp/ccIj1CqZ.s:1157   .text:0000000000000444 .LVL73
     /tmp/ccIj1CqZ.s:1187   .text:0000000000000460 .LBB144
     /tmp/ccIj1CqZ.s:1199   .text:000000000000046c .LBE144
     /tmp/ccIj1CqZ.s:5218   .debug_loc:0000000000000442 .LLST20
     /tmp/ccIj1CqZ.s:1191   .text:0000000000000468 .LVL78
     /tmp/ccIj1CqZ.s:5225   .debug_loc:0000000000000465 .LLST17
     /tmp/ccIj1CqZ.s:5695   .debug_str:00000000000006f2 .LASF191
     /tmp/ccIj1CqZ.s:5232   .debug_loc:0000000000000488 .LLST18
     /tmp/ccIj1CqZ.s:5239   .debug_loc:00000000000004ab .LLST19
     /tmp/ccIj1CqZ.s:1233   .text:0000000000000490 .LVL84
     /tmp/ccIj1CqZ.s:1263   .text:00000000000004ac .LBB120
     /tmp/ccIj1CqZ.s:1284   .text:00000000000004bc .LBE120
     /tmp/ccIj1CqZ.s:5256   .debug_loc:00000000000004f6 .LLST15
     /tmp/ccIj1CqZ.s:5263   .debug_loc:0000000000000519 .LLST16
     /tmp/ccIj1CqZ.s:1276   .text:00000000000004b8 .LVL90
     /tmp/ccIj1CqZ.s:1289   .text:00000000000004c0 .LBB114
     /tmp/ccIj1CqZ.s:1310   .text:00000000000004d0 .LBE114
     /tmp/ccIj1CqZ.s:5270   .debug_loc:000000000000053c .LLST13
     /tmp/ccIj1CqZ.s:5277   .debug_loc:000000000000055f .LLST14
     /tmp/ccIj1CqZ.s:1302   .text:00000000000004cc .LVL93
     /tmp/ccIj1CqZ.s:1315   .text:00000000000004d4 .LBB109
     /tmp/ccIj1CqZ.s:1336   .text:00000000000004e4 .LBE109
     /tmp/ccIj1CqZ.s:5284   .debug_loc:0000000000000582 .LLST11
     /tmp/ccIj1CqZ.s:5291   .debug_loc:00000000000005a5 .LLST12
     /tmp/ccIj1CqZ.s:1328   .text:00000000000004e0 .LVL96
     /tmp/ccIj1CqZ.s:1341   .text:00000000000004e8 .LBB105
GAS LISTING /tmp/ccIj1CqZ.s 			page 49


     /tmp/ccIj1CqZ.s:1362   .text:00000000000004f8 .LBE105
     /tmp/ccIj1CqZ.s:5298   .debug_loc:00000000000005c8 .LLST9
     /tmp/ccIj1CqZ.s:5305   .debug_loc:00000000000005eb .LLST10
     /tmp/ccIj1CqZ.s:1354   .text:00000000000004f4 .LVL99
     /tmp/ccIj1CqZ.s:1367   .text:00000000000004fc .LBB102
     /tmp/ccIj1CqZ.s:1380   .text:0000000000000510 .LBE102
     /tmp/ccIj1CqZ.s:5312   .debug_loc:000000000000060e .LLST8
     /tmp/ccIj1CqZ.s:1372   .text:000000000000050c .LVL101
     /tmp/ccIj1CqZ.s:1385   .text:0000000000000514 .LBB101
     /tmp/ccIj1CqZ.s:1401   .text:000000000000052c .LBE101
     /tmp/ccIj1CqZ.s:5319   .debug_loc:0000000000000631 .LLST7
     /tmp/ccIj1CqZ.s:1400   .text:000000000000052c .LVL104
     /tmp/ccIj1CqZ.s:673    .text:00000000000001fc .LBB96
     /tmp/ccIj1CqZ.s:759    .text:000000000000029c .LBE96
     /tmp/ccIj1CqZ.s:5763   .debug_str:00000000000008ba .LASF192
     /tmp/ccIj1CqZ.s:5326   .debug_loc:0000000000000654 .LLST6
     /tmp/ccIj1CqZ.s:675    .text:00000000000001fc .LBB97
     /tmp/ccIj1CqZ.s:692    .text:0000000000000208 .LBE97
     /tmp/ccIj1CqZ.s:694    .text:0000000000000208 .LBB99
     /tmp/ccIj1CqZ.s:710    .text:0000000000000214 .LBE99
     /tmp/ccIj1CqZ.s:715    .text:0000000000000224 .LVL20
     /tmp/ccIj1CqZ.s:720    .text:0000000000000230 .LVL21
     /tmp/ccIj1CqZ.s:725    .text:0000000000000240 .LVL22
     /tmp/ccIj1CqZ.s:730    .text:0000000000000250 .LVL23
     /tmp/ccIj1CqZ.s:735    .text:000000000000025c .LVL24
     /tmp/ccIj1CqZ.s:740    .text:000000000000026c .LVL25
     /tmp/ccIj1CqZ.s:745    .text:000000000000027c .LVL26
     /tmp/ccIj1CqZ.s:750    .text:0000000000000288 .LVL27
     /tmp/ccIj1CqZ.s:755    .text:0000000000000298 .LVL28
     /tmp/ccIj1CqZ.s:985    .text:0000000000000394 .LBB223
     /tmp/ccIj1CqZ.s:996    .text:0000000000000398 .LBE223
     /tmp/ccIj1CqZ.s:5333   .debug_loc:0000000000000677 .LLST32
     /tmp/ccIj1CqZ.s:998    .text:0000000000000398 .LBB225
     /tmp/ccIj1CqZ.s:1010   .text:000000000000039c .LBE225
     /tmp/ccIj1CqZ.s:5340   .debug_loc:000000000000069a .LLST33
     /tmp/ccIj1CqZ.s:1207   .text:0000000000000478 .LVL80
     /tmp/ccIj1CqZ.s:285    .text:0000000000000154 .LBB73
     /tmp/ccIj1CqZ.s:301    .text:0000000000000160 .LBE73
     /tmp/ccIj1CqZ.s:303    .text:0000000000000160 .LBB75
     /tmp/ccIj1CqZ.s:316    .text:0000000000000164 .LBE75
     /tmp/ccIj1CqZ.s:318    .text:0000000000000164 .LBB77
     /tmp/ccIj1CqZ.s:331    .text:0000000000000168 .LBE77
     /tmp/ccIj1CqZ.s:791    .text:00000000000002c4 .LBB265
     /tmp/ccIj1CqZ.s:799    .text:00000000000002c8 .LBE265
     /tmp/ccIj1CqZ.s:5347   .debug_loc:00000000000006bd .LLST37
     /tmp/ccIj1CqZ.s:807    .text:00000000000002d0 .LBB267
     /tmp/ccIj1CqZ.s:822    .text:00000000000002dc .LBE267
     /tmp/ccIj1CqZ.s:5354   .debug_loc:00000000000006e0 .LLST38
     /tmp/ccIj1CqZ.s:828    .text:00000000000002e4 .LBB269
     /tmp/ccIj1CqZ.s:839    .text:00000000000002e8 .LBE269
     /tmp/ccIj1CqZ.s:5362   .debug_loc:0000000000000704 .LLST39
     /tmp/ccIj1CqZ.s:841    .text:00000000000002e8 .LBB271
     /tmp/ccIj1CqZ.s:855    .text:00000000000002f0 .LBE271
     /tmp/ccIj1CqZ.s:5369   .debug_loc:0000000000000727 .LLST40
     /tmp/ccIj1CqZ.s:785    .text:00000000000002b8 .LVL30
     /tmp/ccIj1CqZ.s:826    .text:00000000000002e4 .LVL35
     /tmp/ccIj1CqZ.s:213    .text:0000000000000130 .LFE37
GAS LISTING /tmp/ccIj1CqZ.s 			page 50


     /tmp/ccIj1CqZ.s:163    .text:00000000000000b4 .LVL4
     /tmp/ccIj1CqZ.s:169    .text:00000000000000c4 .LVL5
     /tmp/ccIj1CqZ.s:180    .text:00000000000000dc .LVL6
     /tmp/ccIj1CqZ.s:186    .text:00000000000000ec .LVL7
     /tmp/ccIj1CqZ.s:197    .text:0000000000000108 .LVL8
     /tmp/ccIj1CqZ.s:201    .text:0000000000000114 .LVL9
     /tmp/ccIj1CqZ.s:207    .text:0000000000000124 .LVL10
     /tmp/ccIj1CqZ.s:210    .text:0000000000000130 .LVL11
     /tmp/ccIj1CqZ.s:46     .text:0000000000000020 .LFB36
     /tmp/ccIj1CqZ.s:107    .text:0000000000000060 .LFE36
     /tmp/ccIj1CqZ.s:64     .text:0000000000000040 .LBB69
     /tmp/ccIj1CqZ.s:78     .text:0000000000000048 .LBE69
     /tmp/ccIj1CqZ.s:5376   .debug_loc:000000000000074a .LLST0
     /tmp/ccIj1CqZ.s:91     .text:0000000000000054 .LBB71
     /tmp/ccIj1CqZ.s:103    .text:000000000000005c .LBE71
     /tmp/ccIj1CqZ.s:5385   .debug_loc:0000000000000770 .LLST1
     /tmp/ccIj1CqZ.s:10     .text:0000000000000000 .LFB35
     /tmp/ccIj1CqZ.s:40     .text:0000000000000020 .LFE35
     /tmp/ccIj1CqZ.s:5829   .debug_str:0000000000000b43 .LASF193
     /tmp/ccIj1CqZ.s:5571   .debug_str:000000000000038b .LASF194
     /tmp/ccIj1CqZ.s:5639   .debug_str:0000000000000561 .LASF195
     /tmp/ccIj1CqZ.s:5679   .debug_str:0000000000000680 .LASF196
     /tmp/ccIj1CqZ.s:5595   .debug_str:0000000000000422 .LASF197
     /tmp/ccIj1CqZ.s:5685   .debug_str:00000000000006a8 .LASF198
     /tmp/ccIj1CqZ.s:5463   .debug_str:0000000000000024 .LASF199
     /tmp/ccIj1CqZ.s:5681   .debug_str:000000000000068e .LASF200
     /tmp/ccIj1CqZ.s:5561   .debug_str:0000000000000350 .LASF201
     /tmp/ccIj1CqZ.s:5833   .debug_str:0000000000000b4f .LASF202
     /tmp/ccIj1CqZ.s:5865   .debug_str:0000000000000bf7 .LASF203
     /tmp/ccIj1CqZ.s:5489   .debug_str:00000000000000dd .LASF204
     /tmp/ccIj1CqZ.s:312    .text:0000000000000164 .LVL13
     /tmp/ccIj1CqZ.s:984    .text:0000000000000394 .LVL51
     /tmp/ccIj1CqZ.s:1006   .text:000000000000039c .LVL53
     /tmp/ccIj1CqZ.s:1035   .text:00000000000003c0 .LVL55
     /tmp/ccIj1CqZ.s:327    .text:0000000000000168 .LVL14
     /tmp/ccIj1CqZ.s:1025   .text:00000000000003ac .LVL54
     /tmp/ccIj1CqZ.s:299    .text:0000000000000160 .LVL12
     /tmp/ccIj1CqZ.s:359    .text:0000000000000190 .LVL16
     /tmp/ccIj1CqZ.s:690    .text:0000000000000208 .LVL18
     /tmp/ccIj1CqZ.s:757    .text:000000000000029c .LVL29
     /tmp/ccIj1CqZ.s:852    .text:00000000000002f0 .LVL37
     /tmp/ccIj1CqZ.s:863    .text:00000000000002fc .LVL39
     /tmp/ccIj1CqZ.s:868    .text:0000000000000304 .LVL40
     /tmp/ccIj1CqZ.s:901    .text:000000000000031c .LVL43
     /tmp/ccIj1CqZ.s:914    .text:0000000000000330 .LVL44
     /tmp/ccIj1CqZ.s:885    .text:0000000000000314 .LVL42
     /tmp/ccIj1CqZ.s:354    .text:000000000000018c .LVL15
     /tmp/ccIj1CqZ.s:684    .text:0000000000000200 .LVL17
     /tmp/ccIj1CqZ.s:946    .text:0000000000000374 .LVL46
     /tmp/ccIj1CqZ.s:1070   .text:00000000000003e4 .LVL59
     /tmp/ccIj1CqZ.s:1096   .text:00000000000003f8 .LVL62
     /tmp/ccIj1CqZ.s:1115   .text:0000000000000410 .LVL65
     /tmp/ccIj1CqZ.s:1183   .text:0000000000000460 .LVL77
     /tmp/ccIj1CqZ.s:1201   .text:0000000000000470 .LVL79
     /tmp/ccIj1CqZ.s:1209   .text:000000000000047c .LVL81
     /tmp/ccIj1CqZ.s:1259   .text:00000000000004ac .LVL88
     /tmp/ccIj1CqZ.s:1286   .text:00000000000004c0 .LVL91
GAS LISTING /tmp/ccIj1CqZ.s 			page 51


     /tmp/ccIj1CqZ.s:1312   .text:00000000000004d4 .LVL94
     /tmp/ccIj1CqZ.s:1338   .text:00000000000004e8 .LVL97
     /tmp/ccIj1CqZ.s:1364   .text:00000000000004fc .LVL100
     /tmp/ccIj1CqZ.s:1382   .text:0000000000000514 .LVL102
     /tmp/ccIj1CqZ.s:961    .text:0000000000000378 .LVL47
     /tmp/ccIj1CqZ.s:976    .text:0000000000000390 .LVL50
     /tmp/ccIj1CqZ.s:1051   .text:00000000000003c4 .LVL56
     /tmp/ccIj1CqZ.s:1084   .text:00000000000003f0 .LVL61
     /tmp/ccIj1CqZ.s:1128   .text:0000000000000414 .LVL66
     /tmp/ccIj1CqZ.s:1134   .text:0000000000000418 .LVL67
     /tmp/ccIj1CqZ.s:1140   .text:000000000000041c .LVL68
     /tmp/ccIj1CqZ.s:1150   .text:0000000000000434 .LVL71
     /tmp/ccIj1CqZ.s:1155   .text:000000000000043c .LVL72
     /tmp/ccIj1CqZ.s:1161   .text:0000000000000448 .LVL74
     /tmp/ccIj1CqZ.s:1167   .text:0000000000000450 .LVL75
     /tmp/ccIj1CqZ.s:1177   .text:0000000000000458 .LVL76
     /tmp/ccIj1CqZ.s:1221   .text:0000000000000480 .LVL82
     /tmp/ccIj1CqZ.s:1227   .text:0000000000000484 .LVL83
     /tmp/ccIj1CqZ.s:1237   .text:0000000000000494 .LVL85
     /tmp/ccIj1CqZ.s:1243   .text:000000000000049c .LVL86
     /tmp/ccIj1CqZ.s:1253   .text:00000000000004a4 .LVL87
     /tmp/ccIj1CqZ.s:1271   .text:00000000000004b0 .LVL89
     /tmp/ccIj1CqZ.s:1297   .text:00000000000004c4 .LVL92
     /tmp/ccIj1CqZ.s:1323   .text:00000000000004d8 .LVL95
     /tmp/ccIj1CqZ.s:1349   .text:00000000000004ec .LVL98
     /tmp/ccIj1CqZ.s:1393   .text:0000000000000518 .LVL103
     /tmp/ccIj1CqZ.s:708    .text:0000000000000214 .LVL19
     /tmp/ccIj1CqZ.s:993    .text:0000000000000398 .LVL52
     /tmp/ccIj1CqZ.s:790    .text:00000000000002c4 .LVL31
     /tmp/ccIj1CqZ.s:797    .text:00000000000002c8 .LVL32
     /tmp/ccIj1CqZ.s:806    .text:00000000000002d0 .LVL33
     /tmp/ccIj1CqZ.s:819    .text:00000000000002dc .LVL34
     /tmp/ccIj1CqZ.s:836    .text:00000000000002e8 .LVL36
     /tmp/ccIj1CqZ.s:63     .text:0000000000000040 .LVL0
     /tmp/ccIj1CqZ.s:74     .text:0000000000000048 .LVL1
     /tmp/ccIj1CqZ.s:90     .text:0000000000000054 .LVL2
     /tmp/ccIj1CqZ.s:100    .text:000000000000005c .LVL3
     /tmp/ccIj1CqZ.s:1446   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccIj1CqZ.s:346    .text:0000000000000188 .LBB81
     /tmp/ccIj1CqZ.s:362    .text:0000000000000194 .LBE81
     /tmp/ccIj1CqZ.s:368    .text:0000000000000194 .LBB228
     /tmp/ccIj1CqZ.s:375    .text:000000000000019c .LBE228
     /tmp/ccIj1CqZ.s:381    .text:000000000000019c .LBB229
     /tmp/ccIj1CqZ.s:390    .text:00000000000001a4 .LBE229
     /tmp/ccIj1CqZ.s:396    .text:00000000000001a4 .LBB230
     /tmp/ccIj1CqZ.s:407    .text:00000000000001ac .LBE230
     /tmp/ccIj1CqZ.s:413    .text:00000000000001ac .LBB231
     /tmp/ccIj1CqZ.s:426    .text:00000000000001b4 .LBE231
     /tmp/ccIj1CqZ.s:432    .text:00000000000001b4 .LBB232
     /tmp/ccIj1CqZ.s:447    .text:00000000000001bc .LBE232
     /tmp/ccIj1CqZ.s:453    .text:00000000000001bc .LBB233
     /tmp/ccIj1CqZ.s:470    .text:00000000000001c4 .LBE233
     /tmp/ccIj1CqZ.s:476    .text:00000000000001c4 .LBB234
     /tmp/ccIj1CqZ.s:495    .text:00000000000001cc .LBE234
     /tmp/ccIj1CqZ.s:501    .text:00000000000001cc .LBB235
     /tmp/ccIj1CqZ.s:522    .text:00000000000001d4 .LBE235
     /tmp/ccIj1CqZ.s:528    .text:00000000000001d4 .LBB236
GAS LISTING /tmp/ccIj1CqZ.s 			page 52


     /tmp/ccIj1CqZ.s:551    .text:00000000000001dc .LBE236
     /tmp/ccIj1CqZ.s:557    .text:00000000000001dc .LBB237
     /tmp/ccIj1CqZ.s:582    .text:00000000000001e4 .LBE237
     /tmp/ccIj1CqZ.s:588    .text:00000000000001e4 .LBB238
     /tmp/ccIj1CqZ.s:615    .text:00000000000001ec .LBE238
     /tmp/ccIj1CqZ.s:621    .text:00000000000001ec .LBB239
     /tmp/ccIj1CqZ.s:650    .text:00000000000001f4 .LBE239
     /tmp/ccIj1CqZ.s:656    .text:00000000000001f4 .LBB240
     /tmp/ccIj1CqZ.s:774    .text:000000000000029c .LBE240
     /tmp/ccIj1CqZ.s:951    .text:0000000000000374 .LBB250
     /tmp/ccIj1CqZ.s:1011   .text:000000000000039c .LBE250
     /tmp/ccIj1CqZ.s:1040   .text:00000000000003c0 .LBB251
     /tmp/ccIj1CqZ.s:1417   .text:0000000000000530 .LBE251
     /tmp/ccIj1CqZ.s:1212   .text:000000000000047c .LBB127
     /tmp/ccIj1CqZ.s:1251   .text:00000000000004a0 .LBE127
     /tmp/ccIj1CqZ.s:1255   .text:00000000000004a4 .LBB128
     /tmp/ccIj1CqZ.s:1261   .text:00000000000004ac .LBE128
     /tmp/ccIj1CqZ.s:1118   .text:0000000000000410 .LBB154
     /tmp/ccIj1CqZ.s:1175   .text:0000000000000454 .LBE154
     /tmp/ccIj1CqZ.s:1179   .text:0000000000000458 .LBB155
     /tmp/ccIj1CqZ.s:1185   .text:0000000000000460 .LBE155
     /tmp/ccIj1CqZ.s:216    .gcc_except_table:0000000000000000 .LLSDA37

UNDEFINED SYMBOLS
_ZN3TCB7runningE
_Znwm
_ZN5BBuffC1Ei
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_Z12pprintStringPKc
_Z12printIntegerm
_ZN3TCB11timeCounterE
_ZN5SList7oneTickEv
_ZN3TCB8dispatchEv
plic_claim
plic_complete
CONSOLE_STATUS
CONSOLE_RX_DATA
_ZN5BBuff3putEc
_ZN15MemoryAllocator8InstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN15MemoryAllocator19getLargestFreeBlockEv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB4exitEv
_ZN3SEM4openEj
_ZN3SEM5closeEv
_ZN3SEM4waitEv
_ZN3SEM6signalEv
_ZN3TCB5sleepEm
_ZN5BBuff3getEv

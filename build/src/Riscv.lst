GAS LISTING /tmp/ccCIXKNu.s 			page 1


   1              		.file	"Riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB35:
  11              		.file 1 "src/Riscv.cpp"
   1:src/Riscv.cpp **** //
   2:src/Riscv.cpp **** // Created by os on 9/8/25.
   3:src/Riscv.cpp **** //
   4:src/Riscv.cpp **** 
   5:src/Riscv.cpp **** #include "../h/Riscv.hpp"
   6:src/Riscv.cpp **** #include "../lib/console.h"
   7:src/Riscv.cpp **** #include "../h/syscall_c.hpp"
   8:src/Riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   9:src/Riscv.cpp **** #include  "../h/print.hpp"
  10:src/Riscv.cpp **** #include "../h/SList.hpp"
  11:src/Riscv.cpp **** using Body=void(*)(void*);
  12:src/Riscv.cpp **** 
  13:src/Riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 13 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
  14:src/Riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 14 5
  21              		.loc 1 14 38 is_stmt 0
  22              	#APP
  23              	# 14 "src/Riscv.cpp" 1
  15              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 15 5 is_stmt 1
  27              		.loc 1 15 29 is_stmt 0
  28              	# 15 "src/Riscv.cpp" 1
  16              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 16 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE35:
  42              		.align	2
  43              		.globl	_ZN5Riscv10InitBBuffsEv
GAS LISTING /tmp/ccCIXKNu.s 			page 2


  45              	_ZN5Riscv10InitBBuffsEv:
  46              	.LFB36:
  17:src/Riscv.cpp **** 
  18:src/Riscv.cpp **** 
  19:src/Riscv.cpp **** BBuff* Riscv::INbuff = nullptr;
  20:src/Riscv.cpp **** BBuff* Riscv::OUTbuff = nullptr;
  21:src/Riscv.cpp **** 
  22:src/Riscv.cpp **** void Riscv::InitBBuffs() {
  47              		.loc 1 22 26 is_stmt 1
  48              		.cfi_startproc
  49              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
  50              		.cfi_lsda 0x1b,.LLSDA36
  51 0020 130101FE 		addi	sp,sp,-32
  52              		.cfi_def_cfa_offset 32
  53 0024 233C1100 		sd	ra,24(sp)
  54 0028 23388100 		sd	s0,16(sp)
  55 002c 23349100 		sd	s1,8(sp)
  56 0030 23302101 		sd	s2,0(sp)
  57              		.cfi_offset 1, -8
  58              		.cfi_offset 8, -16
  59              		.cfi_offset 9, -24
  60              		.cfi_offset 18, -32
  61 0034 13040102 		addi	s0,sp,32
  62              		.cfi_def_cfa 8, 0
  23:src/Riscv.cpp ****     if (INbuff==nullptr) {
  63              		.loc 1 23 5
  64              		.loc 1 23 15 is_stmt 0
  65 0038 97070000 		ld	a5,.LANCHOR0
  65      83B70700 
  66              		.loc 1 23 5
  67 0040 63840702 		beqz	a5,.L11
  68              	.L4:
  24:src/Riscv.cpp ****         INbuff=new BBuff(256);
  25:src/Riscv.cpp ****     }
  26:src/Riscv.cpp ****     if (OUTbuff==nullptr) {
  69              		.loc 1 26 5 is_stmt 1
  70              		.loc 1 26 16 is_stmt 0
  71 0044 97070000 		ld	a5,.LANCHOR0+8
  71      83B70700 
  72              		.loc 1 26 5
  73 004c 63820704 		beqz	a5,.L12
  74              	.L3:
  27:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
  28:src/Riscv.cpp ****     }
  29:src/Riscv.cpp **** }
  75              		.loc 1 29 1
  76 0050 83308101 		ld	ra,24(sp)
  77              		.cfi_remember_state
  78              		.cfi_restore 1
  79 0054 03340101 		ld	s0,16(sp)
  80              		.cfi_restore 8
  81              		.cfi_def_cfa 2, 32
  82 0058 83348100 		ld	s1,8(sp)
  83              		.cfi_restore 9
  84 005c 03390100 		ld	s2,0(sp)
  85              		.cfi_restore 18
  86 0060 13010102 		addi	sp,sp,32
GAS LISTING /tmp/ccCIXKNu.s 			page 3


  87              		.cfi_def_cfa_offset 0
  88 0064 67800000 		jr	ra
  89              	.L11:
  90              		.cfi_restore_state
  24:src/Riscv.cpp ****         INbuff=new BBuff(256);
  91              		.loc 1 24 9 is_stmt 1
  24:src/Riscv.cpp ****         INbuff=new BBuff(256);
  92              		.loc 1 24 29 is_stmt 0
  93 0068 13050003 		li	a0,48
  94              	.LEHB0:
  95 006c 97000000 		call	_Znwm@plt
  95      E7800000 
  96              	.LVL0:
  97              	.LEHE0:
  98 0074 93040500 		mv	s1,a0
  99 0078 93050010 		li	a1,256
 100              	.LEHB1:
 101 007c 97000000 		call	_ZN5BBuffC1Ei@plt
 101      E7800000 
 102              	.LVL1:
 103              	.LEHE1:
  24:src/Riscv.cpp ****         INbuff=new BBuff(256);
 104              		.loc 1 24 15 discriminator 2
 105 0084 97070000 		sd	s1,.LANCHOR0,a5
 105      23B09700 
 106 008c 6FF09FFB 		j	.L4
 107              	.L12:
  27:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 108              		.loc 1 27 9 is_stmt 1
  27:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 109              		.loc 1 27 30 is_stmt 0
 110 0090 13050003 		li	a0,48
 111              	.LEHB2:
 112 0094 97000000 		call	_Znwm@plt
 112      E7800000 
 113              	.LVL2:
 114              	.LEHE2:
 115 009c 93040500 		mv	s1,a0
 116 00a0 93050010 		li	a1,256
 117              	.LEHB3:
 118 00a4 97000000 		call	_ZN5BBuffC1Ei@plt
 118      E7800000 
 119              	.LVL3:
 120              	.LEHE3:
  27:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 121              		.loc 1 27 16 discriminator 2
 122 00ac 97070000 		sd	s1,.LANCHOR0+8,a5
 122      23B09700 
 123              		.loc 1 29 1 discriminator 2
 124 00b4 6FF0DFF9 		j	.L3
 125              	.L8:
 126 00b8 13090500 		mv	s2,a0
  24:src/Riscv.cpp ****         INbuff=new BBuff(256);
 127              		.loc 1 24 29
 128 00bc 13850400 		mv	a0,s1
 129 00c0 97000000 		call	_ZdlPv@plt
 129      E7800000 
GAS LISTING /tmp/ccCIXKNu.s 			page 4


 130              	.LVL4:
 131 00c8 13050900 		mv	a0,s2
 132              	.LEHB4:
 133 00cc 97000000 		call	_Unwind_Resume@plt
 133      E7800000 
 134              	.LVL5:
 135              	.L9:
 136 00d4 13090500 		mv	s2,a0
  27:src/Riscv.cpp ****         OUTbuff=new BBuff(256);
 137              		.loc 1 27 30
 138 00d8 13850400 		mv	a0,s1
 139 00dc 97000000 		call	_ZdlPv@plt
 139      E7800000 
 140              	.LVL6:
 141 00e4 13050900 		mv	a0,s2
 142 00e8 97000000 		call	_Unwind_Resume@plt
 142      E7800000 
 143              	.LVL7:
 144              	.LEHE4:
 145              		.cfi_endproc
 146              	.LFE36:
 147              		.globl	__gxx_personality_v0
 148              		.section	.gcc_except_table,"a",@progbits
 149              	.LLSDA36:
 150 0000 FF       		.byte	0xff
 151 0001 FF       		.byte	0xff
 152 0002 03       		.byte	0x3
 153 0003 41       		.byte	0x41
 154 0004 00000000 		.4byte	.LEHB0-.LFB36
 155 0008 00000000 		.4byte	.LEHE0-.LEHB0
 156 000c 00000000 		.4byte	0
 157 0010 00       		.byte	0
 158 0011 00000000 		.4byte	.LEHB1-.LFB36
 159 0015 00000000 		.4byte	.LEHE1-.LEHB1
 160 0019 00000000 		.4byte	.L8-.LFB36
 161 001d 00       		.byte	0
 162 001e 00000000 		.4byte	.LEHB2-.LFB36
 163 0022 00000000 		.4byte	.LEHE2-.LEHB2
 164 0026 00000000 		.4byte	0
 165 002a 00       		.byte	0
 166 002b 00000000 		.4byte	.LEHB3-.LFB36
 167 002f 00000000 		.4byte	.LEHE3-.LEHB3
 168 0033 00000000 		.4byte	.L9-.LFB36
 169 0037 00       		.byte	0
 170 0038 00000000 		.4byte	.LEHB4-.LFB36
 171 003c 00000000 		.4byte	.LEHE4-.LEHB4
 172 0040 00000000 		.4byte	0
 173 0044 00       		.byte	0
 174              		.text
 176              		.section	.rodata.str1.8,"aMS",@progbits,1
 177              		.align	3
 178              	.LC0:
 179 0000 73636175 		.string	"scause:"
 179      73653A00 
 180              		.align	3
 181              	.LC1:
 182 0008 0A00     		.string	"\n"
GAS LISTING /tmp/ccCIXKNu.s 			page 5


 183 000a 00000000 		.align	3
 183      0000
 184              	.LC2:
 185 0010 73747661 		.string	"stval:"
 185      6C3A00
 186 0017 00       		.align	3
 187              	.LC3:
 188 0018 73657063 		.string	"sepc:"
 188      3A00
 189              		.text
 190              		.align	2
 191              		.globl	_ZN5Riscv21SupervisorTrapHandlerEv
 193              	_ZN5Riscv21SupervisorTrapHandlerEv:
 194              	.LFB37:
  30:src/Riscv.cpp **** 
  31:src/Riscv.cpp **** void Riscv::SupervisorTrapHandler() {
 195              		.loc 1 31 37 is_stmt 1
 196              		.cfi_startproc
 197 00f0 130101FA 		addi	sp,sp,-96
 198              		.cfi_def_cfa_offset 96
 199 00f4 233C1104 		sd	ra,88(sp)
 200 00f8 23388104 		sd	s0,80(sp)
 201 00fc 23349104 		sd	s1,72(sp)
 202 0100 23302105 		sd	s2,64(sp)
 203 0104 233C3103 		sd	s3,56(sp)
 204 0108 23384103 		sd	s4,48(sp)
 205 010c 23345103 		sd	s5,40(sp)
 206              		.cfi_offset 1, -8
 207              		.cfi_offset 8, -16
 208              		.cfi_offset 9, -24
 209              		.cfi_offset 18, -32
 210              		.cfi_offset 19, -40
 211              		.cfi_offset 20, -48
 212              		.cfi_offset 21, -56
 213 0110 13040106 		addi	s0,sp,96
 214              		.cfi_def_cfa 8, 0
  32:src/Riscv.cpp ****     uint64 sepc;
 215              		.loc 1 32 5
  33:src/Riscv.cpp ****     uint64 sstatus;
 216              		.loc 1 33 5
  34:src/Riscv.cpp ****     uint64 scause=get_scause();
 217              		.loc 1 34 5
 218              	.LBB65:
 219              	.LBB66:
 220              		.file 2 "src/../h/Riscv.hpp"
   1:src/../h/Riscv.hpp **** //
   2:src/../h/Riscv.hpp **** // Created by os on 9/8/25.
   3:src/../h/Riscv.hpp **** //
   4:src/../h/Riscv.hpp **** 
   5:src/../h/Riscv.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_RISCV_HPP
   6:src/../h/Riscv.hpp **** #define PROJECT_BASE_V1_1_COPY_RISCV_HPP
   7:src/../h/Riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/Riscv.hpp **** #include "BBuff.hpp"
   9:src/../h/Riscv.hpp **** class Riscv {
  10:src/../h/Riscv.hpp **** public:
  11:src/../h/Riscv.hpp ****     static void set_stvec(uint64 stvec);
  12:src/../h/Riscv.hpp ****     static void set_sepc(uint64 sepc);
GAS LISTING /tmp/ccCIXKNu.s 			page 6


  13:src/../h/Riscv.hpp ****     static uint64 get_sepc();
  14:src/../h/Riscv.hpp ****     static void set_sstatus(uint64 sstatus);
  15:src/../h/Riscv.hpp ****     static uint64 get_sstatus();
  16:src/../h/Riscv.hpp ****     static uint64 get_scause();
  17:src/../h/Riscv.hpp ****     static uint64 get_stval();
  18:src/../h/Riscv.hpp ****     static void ms_sstatus(uint64 mask);
  19:src/../h/Riscv.hpp ****     static void mc_sstatus(uint64 mask);
  20:src/../h/Riscv.hpp ****     static void mc_sip(uint64 mask);
  21:src/../h/Riscv.hpp ****     static void ms_sie(uint64 mask);
  22:src/../h/Riscv.hpp **** 
  23:src/../h/Riscv.hpp ****     static void InitBBuffs();
  24:src/../h/Riscv.hpp ****     enum BitMaskSstatus
  25:src/../h/Riscv.hpp ****     {
  26:src/../h/Riscv.hpp ****         SSTATUS_SIE=(1UL<<1),
  27:src/../h/Riscv.hpp ****         SSTATUS_SPIE=(1UL<<5),
  28:src/../h/Riscv.hpp ****         SSTATUS_SPP=(1UL<<8)
  29:src/../h/Riscv.hpp ****     };
  30:src/../h/Riscv.hpp ****     enum BitMaskSip: uint64
  31:src/../h/Riscv.hpp ****     {
  32:src/../h/Riscv.hpp ****         SIP_SSIP=(1UL<<1),
  33:src/../h/Riscv.hpp ****         SIP_STIP=(1UL<<5),
  34:src/../h/Riscv.hpp ****         SIP_SEIP=(1UL<<9)
  35:src/../h/Riscv.hpp ****     };
  36:src/../h/Riscv.hpp ****     enum BitMaskSie: uint64
  37:src/../h/Riscv.hpp ****     {
  38:src/../h/Riscv.hpp ****         SIE_SSIE=(1UL<<1),
  39:src/../h/Riscv.hpp ****         SIE_SEIE=(1UL<<9)
  40:src/../h/Riscv.hpp ****     };
  41:src/../h/Riscv.hpp **** 
  42:src/../h/Riscv.hpp **** 
  43:src/../h/Riscv.hpp ****     static void SupervisorTrap();
  44:src/../h/Riscv.hpp ****     static void popSppSpie();
  45:src/../h/Riscv.hpp ****     static void SupervisorTrapHandler();
  46:src/../h/Riscv.hpp **** 
  47:src/../h/Riscv.hpp ****     static BBuff* INbuff;
  48:src/../h/Riscv.hpp ****     static BBuff* OUTbuff;
  49:src/../h/Riscv.hpp **** 
  50:src/../h/Riscv.hpp **** };
  51:src/../h/Riscv.hpp **** 
  52:src/../h/Riscv.hpp **** 
  53:src/../h/Riscv.hpp **** inline void Riscv::set_stvec(uint64 stvec) {
  54:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw stvec, %[x]" :: [x] "r" (stvec));
  55:src/../h/Riscv.hpp **** }
  56:src/../h/Riscv.hpp **** 
  57:src/../h/Riscv.hpp **** inline void Riscv::set_sepc(uint64 sepc) {
  58:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sepc, %[x]" :: [x] "r" (sepc));
  59:src/../h/Riscv.hpp **** }
  60:src/../h/Riscv.hpp **** 
  61:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sepc() {
  62:src/../h/Riscv.hpp ****     uint64 sepc;
  63:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
  64:src/../h/Riscv.hpp ****     return sepc;
  65:src/../h/Riscv.hpp **** }
  66:src/../h/Riscv.hpp **** 
  67:src/../h/Riscv.hpp **** inline void Riscv::set_sstatus(uint64 sstatus) {
  68:src/../h/Riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[x]" :: [x] "r" (sstatus));
  69:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccCIXKNu.s 			page 7


  70:src/../h/Riscv.hpp **** 
  71:src/../h/Riscv.hpp **** inline uint64 Riscv::get_sstatus() {
  72:src/../h/Riscv.hpp ****     uint64 sstatus;
  73:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
  74:src/../h/Riscv.hpp ****     return sstatus;
  75:src/../h/Riscv.hpp **** }
  76:src/../h/Riscv.hpp **** 
  77:src/../h/Riscv.hpp **** inline uint64 Riscv::get_scause() {
  78:src/../h/Riscv.hpp ****     uint64 volatile scause;
 221              		.loc 2 78 5
  79:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 222              		.loc 2 79 5
 223              		.loc 2 79 68 is_stmt 0
 224              	#APP
 225              	# 79 "src/../h/Riscv.hpp" 1
  80              	    return scause;
 226              		csrr a5, scause
 227              	# 0 "" 2
 228              	#NO_APP
 229 0118 2334F4FA 		sd	a5,-88(s0)
 230              		.loc 2 80 5 is_stmt 1
 231              		.loc 2 80 12 is_stmt 0
 232 011c 033784FA 		ld	a4,-88(s0)
 233              	.LVL8:
 234              	.LBE66:
 235              	.LBE65:
  35:src/Riscv.cpp ****     sepc=get_sepc();
 236              		.loc 1 35 5 is_stmt 1
 237              	.LBB67:
 238              	.LBB68:
  62:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sepc" : [x] "=r" (sepc));
 239              		.loc 2 62 5
  63:src/../h/Riscv.hpp ****     return sepc;
 240              		.loc 2 63 5
  63:src/../h/Riscv.hpp ****     return sepc;
 241              		.loc 2 63 58 is_stmt 0
 242              	#APP
 243              	# 63 "src/../h/Riscv.hpp" 1
 244              		csrr s1,sepc
 245              	# 0 "" 2
 246              	.LVL9:
  64:src/../h/Riscv.hpp **** }
 247              		.loc 2 64 5 is_stmt 1
 248              	#NO_APP
 249              	.LBE68:
 250              	.LBE67:
  36:src/Riscv.cpp ****     sstatus=get_sstatus();
 251              		.loc 1 36 5
 252              	.LBB69:
 253              	.LBB70:
  72:src/../h/Riscv.hpp ****     __asm__ volatile ("csrr %[x],sstatus" : [x] "=r" (sstatus));
 254              		.loc 2 72 5
  73:src/../h/Riscv.hpp ****     return sstatus;
 255              		.loc 2 73 5
  73:src/../h/Riscv.hpp ****     return sstatus;
 256              		.loc 2 73 64 is_stmt 0
 257              	#APP
GAS LISTING /tmp/ccCIXKNu.s 			page 8


 258              	# 73 "src/../h/Riscv.hpp" 1
 259              		csrr s2,sstatus
 260              	# 0 "" 2
 261              	.LVL10:
  74:src/../h/Riscv.hpp **** }
 262              		.loc 2 74 5 is_stmt 1
 263              	#NO_APP
 264              	.LBE70:
 265              	.LBE69:
  37:src/Riscv.cpp ****     if (scause == 0x8000000000000001UL) {
 266              		.loc 1 37 5
 267              	.LBB71:
 268 0128 9307F0FF 		li	a5,-1
 269 012c 9397F703 		slli	a5,a5,63
 270 0130 93871700 		addi	a5,a5,1
 271 0134 6308F712 		beq	a4,a5,.L40
 272              	.LBE71:
  38:src/Riscv.cpp ****         // interrupt from timer
  39:src/Riscv.cpp **** 
  40:src/Riscv.cpp ****         TCB::timeCounter++;
  41:src/Riscv.cpp ****         SList::oneTick();
  42:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
  43:src/Riscv.cpp ****             TCB::dispatch();
  44:src/Riscv.cpp ****             set_sepc(sepc);
  45:src/Riscv.cpp ****             set_sstatus(sstatus);
  46:src/Riscv.cpp ****         }
  47:src/Riscv.cpp ****         mc_sip(SIP_SSIP);
  48:src/Riscv.cpp ****     }
  49:src/Riscv.cpp ****     else if (scause == 0x8000000000000009UL) {
 273              		.loc 1 49 10
 274              	.LBB267:
 275              	.LBB72:
 276 0138 9307F0FF 		li	a5,-1
 277 013c 9397F703 		slli	a5,a5,63
 278 0140 93879700 		addi	a5,a5,9
 279 0144 630AF716 		beq	a4,a5,.L41
 280              	.LBB73:
  50:src/Riscv.cpp ****         // interrupt from keyboard
  51:src/Riscv.cpp **** 
  52:src/Riscv.cpp ****         int irq = plic_claim();
  53:src/Riscv.cpp ****         if(irq==0x0a)
  54:src/Riscv.cpp ****         {
  55:src/Riscv.cpp ****             volatile char status = (*(char*)CONSOLE_STATUS);
  56:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
  57:src/Riscv.cpp ****             {
  58:src/Riscv.cpp ****                 volatile  char c = (*(char*)CONSOLE_RX_DATA);
  59:src/Riscv.cpp ****                 INbuff->put(c);
  60:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
  61:src/Riscv.cpp ****             }
  62:src/Riscv.cpp **** 
  63:src/Riscv.cpp ****         }
  64:src/Riscv.cpp ****         plic_complete(irq);
  65:src/Riscv.cpp ****         set_sepc(sepc);
  66:src/Riscv.cpp ****         set_sstatus(sstatus);
  67:src/Riscv.cpp ****         //console_handler();
  68:src/Riscv.cpp ****     }
  69:src/Riscv.cpp ****     else {
GAS LISTING /tmp/ccCIXKNu.s 			page 9


  70:src/Riscv.cpp ****         uint64 syscode;
 281              		.loc 1 70 9
  71:src/Riscv.cpp ****     __asm__ volatile ("mv %[x], a0" : [x] "=r" (syscode));
 282              		.loc 1 71 5
 283              		.loc 1 71 58 is_stmt 0
 284              	#APP
 285              	# 71 "src/Riscv.cpp" 1
  72              	
 286              		mv a5, a0
 287              	# 0 "" 2
 288              	.LVL11:
  73:src/Riscv.cpp ****     if (syscode==MEM_ALLOC) {
 289              		.loc 1 73 5 is_stmt 1
 290              	#NO_APP
 291              	.LBB74:
 292 014c 13071000 		li	a4,1
 293              	.LVL12:
 294 0150 6386E71E 		beq	a5,a4,.L42
 295              	.LBE74:
 296              	.LBE73:
 297              	.LBE72:
 298              	.LBE267:
  74:src/Riscv.cpp ****         size_t size_in_blocks;
  75:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
  76:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
  77:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
  78:src/Riscv.cpp ****     }
  79:src/Riscv.cpp ****     else if (syscode==MEM_FREE) {
 299              		.loc 1 79 10
 300              	.LBB268:
 301              	.LBB244:
 302              	.LBB220:
 303              	.LBB201:
 304              	.LBB75:
 305 0154 13072000 		li	a4,2
 306 0158 6388E722 		beq	a5,a4,.L43
 307              	.LBE75:
 308              	.LBE201:
 309              	.LBE220:
 310              	.LBE244:
 311              	.LBE268:
  80:src/Riscv.cpp ****         void* ptr;
  81:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
  82:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
  84:src/Riscv.cpp ****     }
  85:src/Riscv.cpp ****     else if (syscode==MEM_GET_FREE_SPACE) {
 312              		.loc 1 85 10
 313              	.LBB269:
 314              	.LBB245:
 315              	.LBB221:
 316              	.LBB202:
 317              	.LBB187:
 318              	.LBB76:
 319 015c 13073000 		li	a4,3
 320 0160 6386E724 		beq	a5,a4,.L44
 321              	.LBE76:
GAS LISTING /tmp/ccCIXKNu.s 			page 10


 322              	.LBE187:
 323              	.LBE202:
 324              	.LBE221:
 325              	.LBE245:
 326              	.LBE269:
  86:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
  88:src/Riscv.cpp ****     }
  89:src/Riscv.cpp ****     else if (syscode==MEM_GET_LARGEST_FREE_BLOCK) {
 327              		.loc 1 89 10
 328              	.LBB270:
 329              	.LBB246:
 330              	.LBB222:
 331              	.LBB203:
 332              	.LBB188:
 333              	.LBB174:
 334              	.LBB77:
 335 0164 13074000 		li	a4,4
 336 0168 638CE724 		beq	a5,a4,.L45
 337              	.LBE77:
 338              	.LBE174:
 339              	.LBE188:
 340              	.LBE203:
 341              	.LBE222:
 342              	.LBE246:
 343              	.LBE270:
  90:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
  92:src/Riscv.cpp ****     }
  93:src/Riscv.cpp ****     else if (syscode==THREAD_CREATE) {
 344              		.loc 1 93 10
 345              	.LBB271:
 346              	.LBB247:
 347              	.LBB223:
 348              	.LBB204:
 349              	.LBB189:
 350              	.LBB175:
 351              	.LBB160:
 352              	.LBB78:
 353 016c 13071001 		li	a4,17
 354 0170 6384E726 		beq	a5,a4,.L46
 355              	.LBE78:
 356              	.LBE160:
 357              	.LBE175:
 358              	.LBE189:
 359              	.LBE204:
 360              	.LBE223:
 361              	.LBE247:
 362              	.LBE271:
  94:src/Riscv.cpp ****         thread_t* handle;
  95:src/Riscv.cpp ****         Body start_routine;
  96:src/Riscv.cpp ****         void* arg;
  97:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
  98:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
  99:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 100:src/Riscv.cpp **** 
 101:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
GAS LISTING /tmp/ccCIXKNu.s 			page 11


 102:src/Riscv.cpp **** 
 103:src/Riscv.cpp **** 
 104:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 105:src/Riscv.cpp ****         int ret=0;
 106:src/Riscv.cpp ****         if (*handle) {
 107:src/Riscv.cpp ****             ret=0;
 108:src/Riscv.cpp ****         }
 109:src/Riscv.cpp ****         else {
 110:src/Riscv.cpp ****             ret=1;
 111:src/Riscv.cpp ****         }
 112:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 113:src/Riscv.cpp ****     }
 114:src/Riscv.cpp ****     else if (syscode==THREAD_EXIT) {
 363              		.loc 1 114 10
 364              	.LBB272:
 365              	.LBB248:
 366              	.LBB224:
 367              	.LBB205:
 368              	.LBB190:
 369              	.LBB176:
 370              	.LBB161:
 371              	.LBB149:
 372              	.LBB79:
 373 0174 13072001 		li	a4,18
 374 0178 6388E72A 		beq	a5,a4,.L47
 375              	.LBE79:
 376              	.LBE149:
 377              	.LBE161:
 378              	.LBE176:
 379              	.LBE190:
 380              	.LBE205:
 381              	.LBE224:
 382              	.LBE248:
 383              	.LBE272:
 115:src/Riscv.cpp ****         int ret = TCB::exit();
 116:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 117:src/Riscv.cpp ****     }
 118:src/Riscv.cpp ****     else if (syscode==THREAD_DISPATCH) {
 384              		.loc 1 118 10
 385              	.LBB273:
 386              	.LBB249:
 387              	.LBB225:
 388              	.LBB206:
 389              	.LBB191:
 390              	.LBB177:
 391              	.LBB162:
 392              	.LBB150:
 393              	.LBB138:
 394              	.LBB80:
 395 017c 13073001 		li	a4,19
 396 0180 638CE72A 		beq	a5,a4,.L48
 397              	.LBE80:
 398              	.LBE138:
 399              	.LBE150:
 400              	.LBE162:
 401              	.LBE177:
 402              	.LBE191:
GAS LISTING /tmp/ccCIXKNu.s 			page 12


 403              	.LBE206:
 404              	.LBE225:
 405              	.LBE249:
 406              	.LBE273:
 119:src/Riscv.cpp ****         TCB::dispatch();
 120:src/Riscv.cpp ****     }
 121:src/Riscv.cpp ****     else if (syscode==SEM_OPEN) {
 407              		.loc 1 121 10
 408              	.LBB274:
 409              	.LBB250:
 410              	.LBB226:
 411              	.LBB207:
 412              	.LBB192:
 413              	.LBB178:
 414              	.LBB163:
 415              	.LBB151:
 416              	.LBB139:
 417              	.LBB129:
 418              	.LBB81:
 419 0184 13071002 		li	a4,33
 420 0188 638EE72A 		beq	a5,a4,.L49
 421              	.LBE81:
 422              	.LBE129:
 423              	.LBE139:
 424              	.LBE151:
 425              	.LBE163:
 426              	.LBE178:
 427              	.LBE192:
 428              	.LBE207:
 429              	.LBE226:
 430              	.LBE250:
 431              	.LBE274:
 122:src/Riscv.cpp ****         sem_t* handle;
 123:src/Riscv.cpp ****         unsigned init;
 124:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 125:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 126:src/Riscv.cpp **** 
 127:src/Riscv.cpp ****         *handle=SEM::open(init);
 128:src/Riscv.cpp ****         int ret=0;
 129:src/Riscv.cpp ****         if (*handle) {
 130:src/Riscv.cpp ****             ret=0;
 131:src/Riscv.cpp ****         }
 132:src/Riscv.cpp ****         else {
 133:src/Riscv.cpp ****             ret=1;
 134:src/Riscv.cpp ****         }
 135:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 136:src/Riscv.cpp ****     }
 137:src/Riscv.cpp ****     else if (syscode==SEM_CLOSE) {
 432              		.loc 1 137 10
 433              	.LBB275:
 434              	.LBB251:
 435              	.LBB227:
 436              	.LBB208:
 437              	.LBB193:
 438              	.LBB179:
 439              	.LBB164:
 440              	.LBB152:
GAS LISTING /tmp/ccCIXKNu.s 			page 13


 441              	.LBB140:
 442              	.LBB130:
 443              	.LBB122:
 444              	.LBB82:
 445 018c 13072002 		li	a4,34
 446 0190 6382E72E 		beq	a5,a4,.L50
 447              	.LBE82:
 448              	.LBE122:
 449              	.LBE130:
 450              	.LBE140:
 451              	.LBE152:
 452              	.LBE164:
 453              	.LBE179:
 454              	.LBE193:
 455              	.LBE208:
 456              	.LBE227:
 457              	.LBE251:
 458              	.LBE275:
 138:src/Riscv.cpp ****         sem_t handle;
 139:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 140:src/Riscv.cpp ****         int ret=handle->close();
 141:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 142:src/Riscv.cpp ****     }
 143:src/Riscv.cpp ****     else if (syscode==SEM_WAIT) {
 459              		.loc 1 143 10
 460              	.LBB276:
 461              	.LBB252:
 462              	.LBB228:
 463              	.LBB209:
 464              	.LBB194:
 465              	.LBB180:
 466              	.LBB165:
 467              	.LBB153:
 468              	.LBB141:
 469              	.LBB131:
 470              	.LBB123:
 471              	.LBB114:
 472              	.LBB83:
 473 0194 13073002 		li	a4,35
 474 0198 6388E72E 		beq	a5,a4,.L51
 475              	.LBE83:
 476              	.LBE114:
 477              	.LBE123:
 478              	.LBE131:
 479              	.LBE141:
 480              	.LBE153:
 481              	.LBE165:
 482              	.LBE180:
 483              	.LBE194:
 484              	.LBE209:
 485              	.LBE228:
 486              	.LBE252:
 487              	.LBE276:
 144:src/Riscv.cpp ****         sem_t handle;
 145:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 146:src/Riscv.cpp ****         int ret=handle->wait();
 147:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
GAS LISTING /tmp/ccCIXKNu.s 			page 14


 148:src/Riscv.cpp ****     }
 149:src/Riscv.cpp ****     else if (syscode==SEM_SIGNAL) {
 488              		.loc 1 149 10
 489              	.LBB277:
 490              	.LBB253:
 491              	.LBB229:
 492              	.LBB210:
 493              	.LBB195:
 494              	.LBB181:
 495              	.LBB166:
 496              	.LBB154:
 497              	.LBB142:
 498              	.LBB132:
 499              	.LBB124:
 500              	.LBB115:
 501              	.LBB108:
 502              	.LBB84:
 503 019c 13074002 		li	a4,36
 504 01a0 638EE72E 		beq	a5,a4,.L52
 505              	.LBE84:
 506              	.LBE108:
 507              	.LBE115:
 508              	.LBE124:
 509              	.LBE132:
 510              	.LBE142:
 511              	.LBE154:
 512              	.LBE166:
 513              	.LBE181:
 514              	.LBE195:
 515              	.LBE210:
 516              	.LBE229:
 517              	.LBE253:
 518              	.LBE277:
 150:src/Riscv.cpp ****         sem_t handle;
 151:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 152:src/Riscv.cpp ****         int ret=handle->signal();
 153:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 154:src/Riscv.cpp ****     }
 155:src/Riscv.cpp ****     else if (syscode==TIME_SLEEP) {
 519              		.loc 1 155 10
 520              	.LBB278:
 521              	.LBB254:
 522              	.LBB230:
 523              	.LBB211:
 524              	.LBB196:
 525              	.LBB182:
 526              	.LBB167:
 527              	.LBB155:
 528              	.LBB143:
 529              	.LBB133:
 530              	.LBB125:
 531              	.LBB116:
 532              	.LBB109:
 533              	.LBB103:
 534              	.LBB85:
 535 01a4 13071003 		li	a4,49
 536 01a8 6384E730 		beq	a5,a4,.L53
GAS LISTING /tmp/ccCIXKNu.s 			page 15


 537              	.LBE85:
 538              	.LBE103:
 539              	.LBE109:
 540              	.LBE116:
 541              	.LBE125:
 542              	.LBE133:
 543              	.LBE143:
 544              	.LBE155:
 545              	.LBE167:
 546              	.LBE182:
 547              	.LBE196:
 548              	.LBE211:
 549              	.LBE230:
 550              	.LBE254:
 551              	.LBE278:
 156:src/Riscv.cpp ****         time_t sleepTime;
 157:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 158:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 159:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 160:src/Riscv.cpp ****     }
 161:src/Riscv.cpp ****     else if (syscode==GETCHAR) {
 552              		.loc 1 161 10
 553              	.LBB279:
 554              	.LBB255:
 555              	.LBB231:
 556              	.LBB212:
 557              	.LBB197:
 558              	.LBB183:
 559              	.LBB168:
 560              	.LBB156:
 561              	.LBB144:
 562              	.LBB134:
 563              	.LBB126:
 564              	.LBB117:
 565              	.LBB110:
 566              	.LBB104:
 567              	.LBB99:
 568              	.LBB86:
 569 01ac 13071004 		li	a4,65
 570 01b0 638AE730 		beq	a5,a4,.L54
 571              	.LBE86:
 572              	.LBE99:
 573              	.LBE104:
 574              	.LBE110:
 575              	.LBE117:
 576              	.LBE126:
 577              	.LBE134:
 578              	.LBE144:
 579              	.LBE156:
 580              	.LBE168:
 581              	.LBE183:
 582              	.LBE197:
 583              	.LBE212:
 584              	.LBE231:
 585              	.LBE255:
 586              	.LBE279:
 162:src/Riscv.cpp ****         char c = INbuff->get();
GAS LISTING /tmp/ccCIXKNu.s 			page 16


 163:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 164:src/Riscv.cpp ****     }
 165:src/Riscv.cpp ****     else if (syscode==PUTCHAR) {
 587              		.loc 1 165 10
 588              	.LBB280:
 589              	.LBB256:
 590              	.LBB232:
 591              	.LBB213:
 592              	.LBB198:
 593              	.LBB184:
 594              	.LBB169:
 595              	.LBB157:
 596              	.LBB145:
 597              	.LBB135:
 598              	.LBB127:
 599              	.LBB118:
 600              	.LBB111:
 601              	.LBB105:
 602              	.LBB100:
 603              	.LBB96:
 604              	.LBB87:
 605 01b4 13072004 		li	a4,66
 606 01b8 6382E732 		beq	a5,a4,.L55
 607              	.LBB88:
 166:src/Riscv.cpp ****         char c;
 167:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 168:src/Riscv.cpp ****         OUTbuff->put(c);
 169:src/Riscv.cpp ****     }
 170:src/Riscv.cpp ****     else {
 171:src/Riscv.cpp ****         scause= get_scause();
 608              		.loc 1 171 9
 609              	.LBB89:
 610              	.LBB90:
  78:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[scause], scause":[scause]"=r"(scause));
 611              		.loc 2 78 5
  79:src/../h/Riscv.hpp ****     return scause;
 612              		.loc 2 79 5
  79:src/../h/Riscv.hpp ****     return scause;
 613              		.loc 2 79 68 is_stmt 0
 614              	#APP
 615              	# 79 "src/../h/Riscv.hpp" 1
 616              		csrr a5, scause
 617              	# 0 "" 2
 618              	.LVL13:
 619              	#NO_APP
 620 01c0 233CF4FA 		sd	a5,-72(s0)
 621              		.loc 2 80 5 is_stmt 1
 622              		.loc 2 80 12 is_stmt 0
 623 01c4 033A84FB 		ld	s4,-72(s0)
 624              	.LVL14:
 625              	.LBE90:
 626              	.LBE89:
 172:src/Riscv.cpp ****         uint64 stval= get_stval();
 627              		.loc 1 172 9 is_stmt 1
 628              	.LBB91:
 629              	.LBB92:
  81:src/../h/Riscv.hpp **** }
GAS LISTING /tmp/ccCIXKNu.s 			page 17


  82:src/../h/Riscv.hpp **** inline uint64 Riscv::get_stval() {
  83:src/../h/Riscv.hpp ****     uint64 volatile stval;
 630              		.loc 2 83 5
  84:src/../h/Riscv.hpp ****     __asm__ volatile("csrr %[stval], stval":[stval]"=r"(stval));
 631              		.loc 2 84 5
 632              		.loc 2 84 64 is_stmt 0
 633              	#APP
 634              	# 84 "src/../h/Riscv.hpp" 1
  85              	    return stval;
 635              		csrr a5, stval
 636              	# 0 "" 2
 637              	#NO_APP
 638 01cc 2338F4FA 		sd	a5,-80(s0)
 639              		.loc 2 85 5 is_stmt 1
 640              		.loc 2 85 12 is_stmt 0
 641 01d0 833904FB 		ld	s3,-80(s0)
 642              	.LVL15:
 643              	.LBE92:
 644              	.LBE91:
 173:src/Riscv.cpp ****         pprintString("scause:");
 645              		.loc 1 173 9 is_stmt 1
 646              		.loc 1 173 21 is_stmt 0
 647 01d4 17050000 		lla	a0,.LC0
 647      13050500 
 648 01dc 97000000 		call	_Z12pprintStringPKc@plt
 648      E7800000 
 649              	.LVL16:
 174:src/Riscv.cpp ****         printInteger(scause);
 650              		.loc 1 174 9 is_stmt 1
 651              		.loc 1 174 21 is_stmt 0
 652 01e4 13050A00 		mv	a0,s4
 653 01e8 97000000 		call	_Z12printIntegerm@plt
 653      E7800000 
 654              	.LVL17:
 175:src/Riscv.cpp ****         pprintString("\n");
 655              		.loc 1 175 9 is_stmt 1
 656              		.loc 1 175 21 is_stmt 0
 657 01f0 17050000 		lla	a0,.LC1
 657      13050500 
 658 01f8 97000000 		call	_Z12pprintStringPKc@plt
 658      E7800000 
 659              	.LVL18:
 176:src/Riscv.cpp **** 
 177:src/Riscv.cpp ****         pprintString("stval:");
 660              		.loc 1 177 9 is_stmt 1
 661              		.loc 1 177 21 is_stmt 0
 662 0200 17050000 		lla	a0,.LC2
 662      13050500 
 663 0208 97000000 		call	_Z12pprintStringPKc@plt
 663      E7800000 
 664              	.LVL19:
 178:src/Riscv.cpp ****         printInteger(stval);
 665              		.loc 1 178 9 is_stmt 1
 666              		.loc 1 178 21 is_stmt 0
 667 0210 13850900 		mv	a0,s3
 668 0214 97000000 		call	_Z12printIntegerm@plt
 668      E7800000 
GAS LISTING /tmp/ccCIXKNu.s 			page 18


 669              	.LVL20:
 179:src/Riscv.cpp ****         pprintString("\n");
 670              		.loc 1 179 9 is_stmt 1
 671              		.loc 1 179 21 is_stmt 0
 672 021c 17050000 		lla	a0,.LC1
 672      13050500 
 673 0224 97000000 		call	_Z12pprintStringPKc@plt
 673      E7800000 
 674              	.LVL21:
 180:src/Riscv.cpp **** 
 181:src/Riscv.cpp ****         pprintString("sepc:");
 675              		.loc 1 181 9 is_stmt 1
 676              		.loc 1 181 21 is_stmt 0
 677 022c 17050000 		lla	a0,.LC3
 677      13050500 
 678 0234 97000000 		call	_Z12pprintStringPKc@plt
 678      E7800000 
 679              	.LVL22:
 182:src/Riscv.cpp ****         printInteger(sepc);
 680              		.loc 1 182 9 is_stmt 1
 681              		.loc 1 182 21 is_stmt 0
 682 023c 13850400 		mv	a0,s1
 683 0240 97000000 		call	_Z12printIntegerm@plt
 683      E7800000 
 684              	.LVL23:
 183:src/Riscv.cpp ****         pprintString("\n");
 685              		.loc 1 183 9 is_stmt 1
 686              		.loc 1 183 21 is_stmt 0
 687 0248 17050000 		lla	a0,.LC1
 687      13050500 
 688 0250 97000000 		call	_Z12pprintStringPKc@plt
 688      E7800000 
 689              	.LVL24:
 184:src/Riscv.cpp ****         getc();
 690              		.loc 1 184 9 is_stmt 1
 691              		.loc 1 184 13 is_stmt 0
 692 0258 97000000 		call	_Z4getcv@plt
 692      E7800000 
 693              	.LVL25:
 694 0260 6F00800F 		j	.L21
 695              	.LVL26:
 696              	.L40:
 697              	.LBE88:
 698              	.LBE87:
 699              	.LBE96:
 700              	.LBE100:
 701              	.LBE105:
 702              	.LBE111:
 703              	.LBE118:
 704              	.LBE127:
 705              	.LBE135:
 706              	.LBE145:
 707              	.LBE157:
 708              	.LBE169:
 709              	.LBE184:
 710              	.LBE198:
 711              	.LBE213:
GAS LISTING /tmp/ccCIXKNu.s 			page 19


 712              	.LBE232:
 713              	.LBE256:
  40:src/Riscv.cpp ****         SList::oneTick();
 714              		.loc 1 40 9 is_stmt 1
  40:src/Riscv.cpp ****         SList::oneTick();
 715              		.loc 1 40 25 is_stmt 0
 716 0264 97090000 		la	s3,_ZN3TCB11timeCounterE
 716      83B90900 
 717 026c 83B70900 		ld	a5,0(s3)
 718 0270 93871700 		addi	a5,a5,1
 719 0274 23B0F900 		sd	a5,0(s3)
  41:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
 720              		.loc 1 41 9 is_stmt 1
  41:src/Riscv.cpp ****         if (TCB::timeCounter >= TCB::running->getTimeSlice()) {
 721              		.loc 1 41 23 is_stmt 0
 722 0278 97000000 		call	_ZN5SList7oneTickEv@plt
 722      E7800000 
 723              	.LVL27:
  42:src/Riscv.cpp ****             TCB::dispatch();
 724              		.loc 1 42 9 is_stmt 1
  42:src/Riscv.cpp ****             TCB::dispatch();
 725              		.loc 1 42 59 is_stmt 0
 726 0280 97070000 		la	a5,_ZN3TCB7runningE
 726      83B70700 
 727 0288 83B70700 		ld	a5,0(a5)
 728              	.LVL28:
 729              	.LBB257:
 730              	.LBB258:
 731              		.file 3 "src/../h/../h/TCB.hpp"
   1:src/../h/../h/TCB.hpp **** //
   2:src/../h/../h/TCB.hpp **** // Created by os on 9/23/25.
   3:src/../h/../h/TCB.hpp **** //
   4:src/../h/../h/TCB.hpp **** 
   5:src/../h/../h/TCB.hpp **** #ifndef PROJECT_BASE_V1_1_COPY_TCB_HPP
   6:src/../h/../h/TCB.hpp **** #define PROJECT_BASE_V1_1_COPY_TCB_HPP
   7:src/../h/../h/TCB.hpp **** #include "../lib/hw.h"
   8:src/../h/../h/TCB.hpp **** #include "../h/Scheduler.hpp"
   9:src/../h/../h/TCB.hpp **** #include "../h/MemoryAllocator.hpp"
  10:src/../h/../h/TCB.hpp **** 
  11:src/../h/../h/TCB.hpp **** class TCB
  12:src/../h/../h/TCB.hpp **** {
  13:src/../h/../h/TCB.hpp **** public:
  14:src/../h/../h/TCB.hpp ****     void* operator new(size_t size)
  15:src/../h/../h/TCB.hpp **** {
  16:src/../h/../h/TCB.hpp ****     return MemoryAllocator::Instance()->mem_alloc(size);
  17:src/../h/../h/TCB.hpp **** }
  18:src/../h/../h/TCB.hpp **** 
  19:src/../h/../h/TCB.hpp ****     void operator delete(void* ptr)
  20:src/../h/../h/TCB.hpp ****     {
  21:src/../h/../h/TCB.hpp ****         return MemoryAllocator::Instance()->mem_free(ptr);
  22:src/../h/../h/TCB.hpp ****     }
  23:src/../h/../h/TCB.hpp **** 
  24:src/../h/../h/TCB.hpp **** 
  25:src/../h/../h/TCB.hpp ****     using Body=void(*)(void*);
  26:src/../h/../h/TCB.hpp **** 
  27:src/../h/../h/TCB.hpp ****     ~TCB()
  28:src/../h/../h/TCB.hpp ****     {
GAS LISTING /tmp/ccCIXKNu.s 			page 20


  29:src/../h/../h/TCB.hpp ****         delete stack;
  30:src/../h/../h/TCB.hpp ****     }
  31:src/../h/../h/TCB.hpp **** 
  32:src/../h/../h/TCB.hpp ****     static TCB* createThread(Body body, void* arg, uint64* stack);
  33:src/../h/../h/TCB.hpp **** 
  34:src/../h/../h/TCB.hpp ****     static void dispatch();
  35:src/../h/../h/TCB.hpp ****     static int exit();
  36:src/../h/../h/TCB.hpp ****     static void InitOutputThread();
  37:src/../h/../h/TCB.hpp **** 
  38:src/../h/../h/TCB.hpp **** 
  39:src/../h/../h/TCB.hpp ****     bool isFinished() const { return finished;}
  40:src/../h/../h/TCB.hpp ****     void block() { this->blocked = true; }
  41:src/../h/../h/TCB.hpp ****     void unblock() { this->blocked = false; }
  42:src/../h/../h/TCB.hpp ****     bool isBlocked() const { return blocked; }
  43:src/../h/../h/TCB.hpp ****     time_t getTimeSlice() const { return timeSlice; }
 732              		.loc 3 43 35 is_stmt 1
 733              		.loc 3 43 42 is_stmt 0
 734 028c 83B78703 		ld	a5,56(a5)
 735              	.LVL29:
 736              	.LBE258:
 737              	.LBE257:
  42:src/Riscv.cpp ****             TCB::dispatch();
 738              		.loc 1 42 30
 739 0290 03B70900 		ld	a4,0(s3)
  42:src/Riscv.cpp ****             TCB::dispatch();
 740              		.loc 1 42 9
 741 0294 6378F700 		bgeu	a4,a5,.L56
 742              	.L15:
  47:src/Riscv.cpp ****     }
 743              		.loc 1 47 9 is_stmt 1
 744              	.LVL30:
 745              	.LBB259:
 746              	.LBB260:
  86:src/../h/Riscv.hpp **** }
  87:src/../h/Riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
  88:src/../h/Riscv.hpp ****     __asm__ volatile("csrs sstatus,%[mask]"::[mask]"r"(mask));
  89:src/../h/Riscv.hpp **** }
  90:src/../h/Riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask) {
  91:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sstatus,%[mask]"::[mask]"r"(mask));
  92:src/../h/Riscv.hpp **** }
  93:src/../h/Riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
  94:src/../h/Riscv.hpp **** {
  95:src/../h/Riscv.hpp ****     __asm__ volatile("csrc sip, %[mask]":: [mask]"r"(mask));
 747              		.loc 2 95 5
 748              		.loc 2 95 60 is_stmt 0
 749 0298 93072000 		li	a5,2
 750              	#APP
 751              	# 95 "src/../h/Riscv.hpp" 1
  96              	}
 752              		csrc sip, a5
 753              	# 0 "" 2
 754              		.loc 2 96 1
 755              	#NO_APP
 756 02a0 6F00400C 		j	.L13
 757              	.LVL31:
 758              	.L56:
 759              	.LBE260:
GAS LISTING /tmp/ccCIXKNu.s 			page 21


 760              	.LBE259:
  43:src/Riscv.cpp ****             set_sepc(sepc);
 761              		.loc 1 43 13 is_stmt 1
  43:src/Riscv.cpp ****             set_sepc(sepc);
 762              		.loc 1 43 26 is_stmt 0
 763 02a4 97000000 		call	_ZN3TCB8dispatchEv@plt
 763      E7800000 
 764              	.LVL32:
  44:src/Riscv.cpp ****             set_sstatus(sstatus);
 765              		.loc 1 44 13 is_stmt 1
 766              	.LBB261:
 767              	.LBB262:
  58:src/../h/Riscv.hpp **** }
 768              		.loc 2 58 5
  58:src/../h/Riscv.hpp **** }
 769              		.loc 2 58 59 is_stmt 0
 770              	#APP
 771              	# 58 "src/../h/Riscv.hpp" 1
 772              		csrw sepc, s1
 773              	# 0 "" 2
 774              	.LVL33:
 775              	#NO_APP
 776              	.LBE262:
 777              	.LBE261:
  45:src/Riscv.cpp ****         }
 778              		.loc 1 45 13 is_stmt 1
 779              	.LBB263:
 780              	.LBB264:
  68:src/../h/Riscv.hpp **** }
 781              		.loc 2 68 5
  68:src/../h/Riscv.hpp **** }
 782              		.loc 2 68 65 is_stmt 0
 783              	#APP
 784              	# 68 "src/../h/Riscv.hpp" 1
  69:src/../h/Riscv.hpp **** 
 785              		csrw sstatus, s2
 786              	# 0 "" 2
 787              		.loc 2 69 1
 788              	#NO_APP
 789 02b4 6FF05FFE 		j	.L15
 790              	.LVL34:
 791              	.L41:
 792              	.LBE264:
 793              	.LBE263:
 794              	.LBB265:
 795              	.LBB233:
  52:src/Riscv.cpp ****         if(irq==0x0a)
 796              		.loc 1 52 9 is_stmt 1
  52:src/Riscv.cpp ****         if(irq==0x0a)
 797              		.loc 1 52 29 is_stmt 0
 798 02b8 97000000 		call	plic_claim@plt
 798      E7800000 
 799              	.LVL35:
 800 02c0 93090500 		mv	s3,a0
 801              	.LVL36:
  53:src/Riscv.cpp ****         {
 802              		.loc 1 53 9 is_stmt 1
GAS LISTING /tmp/ccCIXKNu.s 			page 22


 803              	.LBB234:
 804 02c4 9307A000 		li	a5,10
 805 02c8 630EF500 		beq	a0,a5,.L57
 806              	.LVL37:
 807              	.L18:
 808              	.LBE234:
  64:src/Riscv.cpp ****         set_sepc(sepc);
 809              		.loc 1 64 9
  64:src/Riscv.cpp ****         set_sepc(sepc);
 810              		.loc 1 64 22 is_stmt 0
 811 02cc 13850900 		mv	a0,s3
 812 02d0 97000000 		call	plic_complete@plt
 812      E7800000 
 813              	.LVL38:
  65:src/Riscv.cpp ****         set_sstatus(sstatus);
 814              		.loc 1 65 9 is_stmt 1
 815              	.LBB237:
 816              	.LBB238:
  58:src/../h/Riscv.hpp **** }
 817              		.loc 2 58 5
  58:src/../h/Riscv.hpp **** }
 818              		.loc 2 58 59 is_stmt 0
 819              	#APP
 820              	# 58 "src/../h/Riscv.hpp" 1
 821              		csrw sepc, s1
 822              	# 0 "" 2
 823              	.LVL39:
 824              	#NO_APP
 825              	.LBE238:
 826              	.LBE237:
  66:src/Riscv.cpp ****         //console_handler();
 827              		.loc 1 66 9 is_stmt 1
 828              	.LBB239:
 829              	.LBB240:
  68:src/../h/Riscv.hpp **** }
 830              		.loc 2 68 5
  68:src/../h/Riscv.hpp **** }
 831              		.loc 2 68 65 is_stmt 0
 832              	#APP
 833              	# 68 "src/../h/Riscv.hpp" 1
  69:src/../h/Riscv.hpp **** 
 834              		csrw sstatus, s2
 835              	# 0 "" 2
 836              		.loc 2 69 1
 837              	#NO_APP
 838 02e0 6F004008 		j	.L13
 839              	.LVL40:
 840              	.L57:
 841              	.LBE240:
 842              	.LBE239:
 843              	.LBB241:
 844              	.LBB235:
  55:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 845              		.loc 1 55 13 is_stmt 1
  55:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 846              		.loc 1 55 37 is_stmt 0
 847 02e4 97070000 		la	a5,CONSOLE_STATUS
GAS LISTING /tmp/ccCIXKNu.s 			page 23


 847      83B70700 
 848 02ec 03BA0700 		ld	s4,0(a5)
 849 02f0 83470A00 		lbu	a5,0(s4)
  55:src/Riscv.cpp ****             while(status & CONSOLE_RX_STATUS_BIT)
 850              		.loc 1 55 27
 851 02f4 2303F4FA 		sb	a5,-90(s0)
 852              	.LVL41:
 853              	.L19:
  56:src/Riscv.cpp ****             {
 854              		.loc 1 56 13 is_stmt 1
  56:src/Riscv.cpp ****             {
 855              		.loc 1 56 28
  56:src/Riscv.cpp ****             {
 856              		.loc 1 56 19 is_stmt 0
 857 02f8 834764FA 		lbu	a5,-90(s0)
  56:src/Riscv.cpp ****             {
 858              		.loc 1 56 28
 859 02fc 93F71700 		andi	a5,a5,1
 860 0300 E38607FC 		beqz	a5,.L18
 861              	.LBB236:
  58:src/Riscv.cpp ****                 INbuff->put(c);
 862              		.loc 1 58 17 is_stmt 1
  58:src/Riscv.cpp ****                 INbuff->put(c);
 863              		.loc 1 58 37 is_stmt 0
 864 0304 97070000 		la	a5,CONSOLE_RX_DATA
 864      83B70700 
 865 030c 83B70700 		ld	a5,0(a5)
 866 0310 83C70700 		lbu	a5,0(a5)
  58:src/Riscv.cpp ****                 INbuff->put(c);
 867              		.loc 1 58 32
 868 0314 A303F4FA 		sb	a5,-89(s0)
  59:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
 869              		.loc 1 59 17 is_stmt 1
  59:src/Riscv.cpp ****                 status = (*(char*)CONSOLE_STATUS);
 870              		.loc 1 59 28 is_stmt 0
 871 0318 834574FA 		lbu	a1,-89(s0)
 872 031c 93F5F50F 		andi	a1,a1,0xff
 873 0320 17050000 		ld	a0,.LANCHOR0
 873      03350500 
 874 0328 97000000 		call	_ZN5BBuff3putEc@plt
 874      E7800000 
 875              	.LVL42:
  60:src/Riscv.cpp ****             }
 876              		.loc 1 60 17 is_stmt 1
  60:src/Riscv.cpp ****             }
 877              		.loc 1 60 27 is_stmt 0
 878 0330 83470A00 		lbu	a5,0(s4)
  60:src/Riscv.cpp ****             }
 879              		.loc 1 60 24
 880 0334 2303F4FA 		sb	a5,-90(s0)
 881              	.LBE236:
  56:src/Riscv.cpp ****             {
 882              		.loc 1 56 13
 883 0338 6FF01FFC 		j	.L19
 884              	.LVL43:
 885              	.L42:
 886              	.LBE235:
GAS LISTING /tmp/ccCIXKNu.s 			page 24


 887              	.LBE241:
 888              	.LBE233:
 889              	.LBB242:
 890              	.LBB214:
 891              	.LBB199:
  74:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (size_in_blocks));
 892              		.loc 1 74 9 is_stmt 1
  75:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 893              		.loc 1 75 9
  75:src/Riscv.cpp ****         void* ptr = MemoryAllocator::Instance()->mem_alloc(size_in_blocks * MEM_BLOCK_SIZE);
 894              		.loc 1 75 69 is_stmt 0
 895              	#APP
 896              	# 75 "src/Riscv.cpp" 1
 897              		mv s3, a1
 898              	# 0 "" 2
 899              	.LVL44:
  76:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 900              		.loc 1 76 9 is_stmt 1
  76:src/Riscv.cpp ****         __asm__ volatile ("mv a0,%[x]" :: [x] "r" (ptr));
 901              		.loc 1 76 59 is_stmt 0
 902              	#NO_APP
 903 0340 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 903      E7800000 
 904              	.LVL45:
 905 0348 93952900 		slli	a1,s3,2
 906 034c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 906      E7800000 
 907              	.LVL46:
  77:src/Riscv.cpp ****     }
 908              		.loc 1 77 9 is_stmt 1
  77:src/Riscv.cpp ****     }
 909              		.loc 1 77 57 is_stmt 0
 910              	#APP
 911              	# 77 "src/Riscv.cpp" 1
 912              		mv a0,a0
 913              	# 0 "" 2
 914              	.LVL47:
 915              	#NO_APP
 916              	.L21:
 917              	.LBE199:
 918              	.LBE214:
 185:src/Riscv.cpp ****     }
 186:src/Riscv.cpp ****     set_sepc(sepc+4);
 919              		.loc 1 186 5 is_stmt 1
 920              		.loc 1 186 13 is_stmt 0
 921 0358 93844400 		addi	s1,s1,4
 922              	.LVL48:
 923              	.LBB215:
 924              	.LBB216:
  58:src/../h/Riscv.hpp **** }
 925              		.loc 2 58 5 is_stmt 1
  58:src/../h/Riscv.hpp **** }
 926              		.loc 2 58 59 is_stmt 0
 927              	#APP
 928              	# 58 "src/../h/Riscv.hpp" 1
 929              		csrw sepc, s1
 930              	# 0 "" 2
GAS LISTING /tmp/ccCIXKNu.s 			page 25


 931              	.LVL49:
 932              	#NO_APP
 933              	.LBE216:
 934              	.LBE215:
 187:src/Riscv.cpp ****     set_sstatus(sstatus);
 935              		.loc 1 187 5 is_stmt 1
 936              	.LBB217:
 937              	.LBB218:
  68:src/../h/Riscv.hpp **** }
 938              		.loc 2 68 5
  68:src/../h/Riscv.hpp **** }
 939              		.loc 2 68 65 is_stmt 0
 940              	#APP
 941              	# 68 "src/../h/Riscv.hpp" 1
 942              		csrw sstatus, s2
 943              	# 0 "" 2
 944              	.LVL50:
 945              	#NO_APP
 946              	.L13:
 947              	.LBE218:
 948              	.LBE217:
 949              	.LBE242:
 950              	.LBE265:
 951              	.LBE280:
 188:src/Riscv.cpp ****     }
 189:src/Riscv.cpp **** 
 190:src/Riscv.cpp **** 
 191:src/Riscv.cpp **** }...
 952              		.loc 1 191 1
 953 0364 83308105 		ld	ra,88(sp)
 954              		.cfi_remember_state
 955              		.cfi_restore 1
 956 0368 03340105 		ld	s0,80(sp)
 957              		.cfi_restore 8
 958              		.cfi_def_cfa 2, 96
 959 036c 83348104 		ld	s1,72(sp)
 960              		.cfi_restore 9
 961 0370 03390104 		ld	s2,64(sp)
 962              		.cfi_restore 18
 963              	.LVL51:
 964 0374 83398103 		ld	s3,56(sp)
 965              		.cfi_restore 19
 966 0378 033A0103 		ld	s4,48(sp)
 967              		.cfi_restore 20
 968 037c 833A8102 		ld	s5,40(sp)
 969              		.cfi_restore 21
 970 0380 13010106 		addi	sp,sp,96
 971              		.cfi_def_cfa_offset 0
 972 0384 67800000 		jr	ra
 973              	.LVL52:
 974              	.L43:
 975              		.cfi_restore_state
 976              	.LBB281:
 977              	.LBB266:
 978              	.LBB243:
 979              	.LBB219:
 980              	.LBB200:
GAS LISTING /tmp/ccCIXKNu.s 			page 26


 981              	.LBB185:
  80:src/Riscv.cpp ****         void* ptr;
 982              		.loc 1 80 9 is_stmt 1
  81:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 983              		.loc 1 81 9
  81:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (ptr));
 984              		.loc 1 81 58 is_stmt 0
 985              	#APP
 986              	# 81 "src/Riscv.cpp" 1
 987              		mv s3, a1
 988              	# 0 "" 2
 989              	.LVL53:
  82:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 990              		.loc 1 82 9 is_stmt 1
  82:src/Riscv.cpp ****         MemoryAllocator::Instance()->mem_free(ptr);
 991              		.loc 1 82 46 is_stmt 0
 992              	#NO_APP
 993 038c 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 993      E7800000 
 994              	.LVL54:
 995 0394 93850900 		mv	a1,s3
 996 0398 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 996      E7800000 
 997              	.LVL55:
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 998              		.loc 1 83 9 is_stmt 1
  83:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (0));
 999              		.loc 1 83 56 is_stmt 0
 1000 03a0 93070000 		li	a5,0
 1001              	#APP
 1002              	# 83 "src/Riscv.cpp" 1
 1003              		mv a0, a5
 1004              	# 0 "" 2
 1005              	#NO_APP
 1006              	.LBE185:
 1007 03a8 6FF01FFB 		j	.L21
 1008              	.LVL56:
 1009              	.L44:
 1010              	.LBB186:
 1011              	.LBB170:
  86:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 1012              		.loc 1 86 9 is_stmt 1
  86:src/Riscv.cpp ****         size_t freeMem = MemoryAllocator::Instance()->getFreeMemSize();
 1013              		.loc 1 86 69 is_stmt 0
 1014 03ac 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1014      E7800000 
 1015              	.LVL57:
 1016              	.LBB171:
 1017              	.LBB172:
 1018              		.file 4 "src/../h/../h/../h/MemoryAllocator.hpp"
   1:src/../h/../h/../h/MemoryAllocator.hpp **** 
   2:src/../h/../h/../h/MemoryAllocator.hpp **** #ifndef PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   3:src/../h/../h/../h/MemoryAllocator.hpp **** #define PROJECT_BASE_V1_1_MEMORYALLOCATOR_HPP
   4:src/../h/../h/../h/MemoryAllocator.hpp **** 
   5:src/../h/../h/../h/MemoryAllocator.hpp **** #include "../lib/hw.h"
   6:src/../h/../h/../h/MemoryAllocator.hpp **** 
   7:src/../h/../h/../h/MemoryAllocator.hpp **** class MemoryAllocator {
GAS LISTING /tmp/ccCIXKNu.s 			page 27


   8:src/../h/../h/../h/MemoryAllocator.hpp **** public:
   9:src/../h/../h/../h/MemoryAllocator.hpp ****     static MemoryAllocator* Instance();
  10:src/../h/../h/../h/MemoryAllocator.hpp **** 
  11:src/../h/../h/../h/MemoryAllocator.hpp ****     void* mem_alloc(size_t size);//size in bytes
  12:src/../h/../h/../h/MemoryAllocator.hpp **** 
  13:src/../h/../h/../h/MemoryAllocator.hpp ****     void mem_free(void* ptr);
  14:src/../h/../h/../h/MemoryAllocator.hpp **** 
  15:src/../h/../h/../h/MemoryAllocator.hpp ****     size_t getFreeMemSize() {
  16:src/../h/../h/../h/MemoryAllocator.hpp ****         return this->freeMemSize;
 1019              		.loc 4 16 9 is_stmt 1
 1020              		.loc 4 16 22 is_stmt 0
 1021 03b4 83378500 		ld	a5,8(a0)
 1022              	.LVL58:
 1023              	.LBE172:
 1024              	.LBE171:
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 1025              		.loc 1 87 9 is_stmt 1
  87:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (freeMem));
 1026              		.loc 1 87 62 is_stmt 0
 1027              	#APP
 1028              	# 87 "src/Riscv.cpp" 1
 1029              		mv a0, a5
 1030              	# 0 "" 2
 1031              	#NO_APP
 1032              	.LBE170:
 1033 03bc 6FF0DFF9 		j	.L21
 1034              	.LVL59:
 1035              	.L45:
 1036              	.LBB173:
 1037              	.LBB158:
  90:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 1038              		.loc 1 90 9 is_stmt 1
  90:src/Riscv.cpp ****         size_t largestBlock = MemoryAllocator::Instance()->getLargestFreeBlock();
 1039              		.loc 1 90 79 is_stmt 0
 1040 03c0 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1040      E7800000 
 1041              	.LVL60:
 1042 03c8 97000000 		call	_ZN15MemoryAllocator19getLargestFreeBlockEv@plt
 1042      E7800000 
 1043              	.LVL61:
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 1044              		.loc 1 91 9 is_stmt 1
  91:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (largestBlock));
 1045              		.loc 1 91 67 is_stmt 0
 1046              	#APP
 1047              	# 91 "src/Riscv.cpp" 1
 1048              		mv a0, a0
 1049              	# 0 "" 2
 1050              	#NO_APP
 1051              	.LBE158:
 1052 03d4 6FF05FF8 		j	.L21
 1053              	.LVL62:
 1054              	.L46:
 1055              	.LBB159:
 1056              	.LBB146:
  94:src/Riscv.cpp ****         thread_t* handle;
 1057              		.loc 1 94 9 is_stmt 1
GAS LISTING /tmp/ccCIXKNu.s 			page 28


  95:src/Riscv.cpp ****         Body start_routine;
 1058              		.loc 1 95 9
  96:src/Riscv.cpp ****         void* arg;
 1059              		.loc 1 96 9
  97:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1060              		.loc 1 97 9
  97:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1061              		.loc 1 97 61 is_stmt 0
 1062              	#APP
 1063              	# 97 "src/Riscv.cpp" 1
 1064              		mv s3, a1
 1065              	# 0 "" 2
 1066              	.LVL63:
  98:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 1067              		.loc 1 98 9 is_stmt 1
  98:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (start_routine));
 1068              		.loc 1 98 68 is_stmt 0
 1069              	# 98 "src/Riscv.cpp" 1
 1070              		mv s4, a2
 1071              	# 0 "" 2
 1072              	.LVL64:
  99:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 1073              		.loc 1 99 9 is_stmt 1
  99:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a3" : [x] "=r" (arg));
 1074              		.loc 1 99 58 is_stmt 0
 1075              	# 99 "src/Riscv.cpp" 1
 1076              		mv s5, a3
 1077              	# 0 "" 2
 1078              	.LVL65:
 101:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 1079              		.loc 1 101 9 is_stmt 1
 101:src/Riscv.cpp ****         uint64 *sp=(uint64*)MemoryAllocator::Instance()->mem_alloc(DEFAULT_STACK_SIZE);
 1080              		.loc 1 101 67 is_stmt 0
 1081              	#NO_APP
 1082 03e4 97000000 		call	_ZN15MemoryAllocator8InstanceEv@plt
 1082      E7800000 
 1083              	.LVL66:
 1084 03ec B7150000 		li	a1,4096
 1085 03f0 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 1085      E7800000 
 1086              	.LVL67:
 1087 03f8 13060500 		mv	a2,a0
 1088              	.LVL68:
 104:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1089              		.loc 1 104 9 is_stmt 1
 104:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1090              		.loc 1 104 34 is_stmt 0
 1091 03fc 93850A00 		mv	a1,s5
 1092 0400 13050A00 		mv	a0,s4
 1093              	.LVL69:
 1094 0404 97000000 		call	_ZN3TCB12createThreadEPFvPvES0_Pm@plt
 1094      E7800000 
 1095              	.LVL70:
 104:src/Riscv.cpp ****         *handle=TCB::createThread( start_routine, arg,sp);
 1096              		.loc 1 104 16
 1097 040c 23B0A900 		sd	a0,0(s3)
 105:src/Riscv.cpp ****         int ret=0;
GAS LISTING /tmp/ccCIXKNu.s 			page 29


 1098              		.loc 1 105 9 is_stmt 1
 1099              	.LVL71:
 106:src/Riscv.cpp ****         if (*handle) {
 1100              		.loc 1 106 9
 1101 0410 63080500 		beqz	a0,.L37
 107:src/Riscv.cpp ****             ret=0;
 1102              		.loc 1 107 16 is_stmt 0
 1103 0414 93070000 		li	a5,0
 1104              	.L26:
 1105              	.LVL72:
 112:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1106              		.loc 1 112 9 is_stmt 1
 112:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1107              		.loc 1 112 58 is_stmt 0
 1108              	#APP
 1109              	# 112 "src/Riscv.cpp" 1
 1110              		mv a0, a5
 1111              	# 0 "" 2
 1112              	#NO_APP
 1113              	.LBE146:
 1114 041c 6FF0DFF3 		j	.L21
 1115              	.LVL73:
 1116              	.L37:
 1117              	.LBB147:
 110:src/Riscv.cpp ****             ret=1;
 1118              		.loc 1 110 16
 1119 0420 93071000 		li	a5,1
 1120 0424 6FF05FFF 		j	.L26
 1121              	.LVL74:
 1122              	.L47:
 1123              	.LBE147:
 1124              	.LBB148:
 1125              	.LBB136:
 115:src/Riscv.cpp ****         int ret = TCB::exit();
 1126              		.loc 1 115 9 is_stmt 1
 115:src/Riscv.cpp ****         int ret = TCB::exit();
 1127              		.loc 1 115 28 is_stmt 0
 1128 0428 97000000 		call	_ZN3TCB4exitEv@plt
 1128      E7800000 
 1129              	.LVL75:
 116:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1130              		.loc 1 116 9 is_stmt 1
 116:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1131              		.loc 1 116 58 is_stmt 0
 1132              	#APP
 1133              	# 116 "src/Riscv.cpp" 1
 1134              		mv a0, a0
 1135              	# 0 "" 2
 1136              	#NO_APP
 1137              	.LBE136:
 1138 0434 6FF05FF2 		j	.L21
 1139              	.LVL76:
 1140              	.L48:
 1141              	.LBB137:
 119:src/Riscv.cpp ****         TCB::dispatch();
 1142              		.loc 1 119 9 is_stmt 1
 119:src/Riscv.cpp ****         TCB::dispatch();
GAS LISTING /tmp/ccCIXKNu.s 			page 30


 1143              		.loc 1 119 22 is_stmt 0
 1144 0438 97000000 		call	_ZN3TCB8dispatchEv@plt
 1144      E7800000 
 1145              	.LVL77:
 1146 0440 6FF09FF1 		j	.L21
 1147              	.LVL78:
 1148              	.L49:
 1149              	.LBB128:
 1150              	.LBB119:
 122:src/Riscv.cpp ****         sem_t* handle;
 1151              		.loc 1 122 9 is_stmt 1
 123:src/Riscv.cpp ****         unsigned init;
 1152              		.loc 1 123 9
 124:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1153              		.loc 1 124 9
 124:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1154              		.loc 1 124 61 is_stmt 0
 1155              	#APP
 1156              	# 124 "src/Riscv.cpp" 1
 1157              		mv s3, a1
 1158              	# 0 "" 2
 1159              	.LVL79:
 125:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 1160              		.loc 1 125 9 is_stmt 1
 125:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a2" : [x] "=r" (init));
 1161              		.loc 1 125 59 is_stmt 0
 1162              	# 125 "src/Riscv.cpp" 1
 1163              		mv a0, a2
 1164              	# 0 "" 2
 1165              	.LVL80:
 127:src/Riscv.cpp ****         *handle=SEM::open(init);
 1166              		.loc 1 127 9 is_stmt 1
 127:src/Riscv.cpp ****         *handle=SEM::open(init);
 1167              		.loc 1 127 26 is_stmt 0
 1168              	#NO_APP
 1169 044c 1B050500 		sext.w	a0,a0
 1170 0450 97000000 		call	_ZN3SEM4openEj@plt
 1170      E7800000 
 1171              	.LVL81:
 127:src/Riscv.cpp ****         *handle=SEM::open(init);
 1172              		.loc 1 127 16
 1173 0458 23B0A900 		sd	a0,0(s3)
 128:src/Riscv.cpp ****         int ret=0;
 1174              		.loc 1 128 9 is_stmt 1
 1175              	.LVL82:
 129:src/Riscv.cpp ****         if (*handle) {
 1176              		.loc 1 129 9
 1177 045c 63080500 		beqz	a0,.L38
 130:src/Riscv.cpp ****             ret=0;
 1178              		.loc 1 130 16 is_stmt 0
 1179 0460 93070000 		li	a5,0
 1180              	.L30:
 1181              	.LVL83:
 135:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1182              		.loc 1 135 9 is_stmt 1
 135:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1183              		.loc 1 135 58 is_stmt 0
GAS LISTING /tmp/ccCIXKNu.s 			page 31


 1184              	#APP
 1185              	# 135 "src/Riscv.cpp" 1
 1186              		mv a0, a5
 1187              	# 0 "" 2
 1188              	#NO_APP
 1189              	.LBE119:
 1190 0468 6FF01FEF 		j	.L21
 1191              	.LVL84:
 1192              	.L38:
 1193              	.LBB120:
 133:src/Riscv.cpp ****             ret=1;
 1194              		.loc 1 133 16
 1195 046c 93071000 		li	a5,1
 1196 0470 6FF05FFF 		j	.L30
 1197              	.LVL85:
 1198              	.L50:
 1199              	.LBE120:
 1200              	.LBB121:
 1201              	.LBB112:
 138:src/Riscv.cpp ****         sem_t handle;
 1202              		.loc 1 138 9 is_stmt 1
 139:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1203              		.loc 1 139 9
 139:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1204              		.loc 1 139 61 is_stmt 0
 1205              	#APP
 1206              	# 139 "src/Riscv.cpp" 1
 1207              		mv a0, a1
 1208              	# 0 "" 2
 1209              	.LVL86:
 140:src/Riscv.cpp ****         int ret=handle->close();
 1210              		.loc 1 140 9 is_stmt 1
 140:src/Riscv.cpp ****         int ret=handle->close();
 1211              		.loc 1 140 30 is_stmt 0
 1212              	#NO_APP
 1213 0478 97000000 		call	_ZN3SEM5closeEv@plt
 1213      E7800000 
 1214              	.LVL87:
 141:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1215              		.loc 1 141 9 is_stmt 1
 141:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1216              		.loc 1 141 58 is_stmt 0
 1217              	#APP
 1218              	# 141 "src/Riscv.cpp" 1
 1219              		mv a0, a0
 1220              	# 0 "" 2
 1221              	#NO_APP
 1222              	.LBE112:
 1223 0484 6FF05FED 		j	.L21
 1224              	.LVL88:
 1225              	.L51:
 1226              	.LBB113:
 1227              	.LBB106:
 144:src/Riscv.cpp ****         sem_t handle;
 1228              		.loc 1 144 9 is_stmt 1
 145:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1229              		.loc 1 145 9
GAS LISTING /tmp/ccCIXKNu.s 			page 32


 145:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1230              		.loc 1 145 61 is_stmt 0
 1231              	#APP
 1232              	# 145 "src/Riscv.cpp" 1
 1233              		mv a0, a1
 1234              	# 0 "" 2
 1235              	.LVL89:
 146:src/Riscv.cpp ****         int ret=handle->wait();
 1236              		.loc 1 146 9 is_stmt 1
 146:src/Riscv.cpp ****         int ret=handle->wait();
 1237              		.loc 1 146 29 is_stmt 0
 1238              	#NO_APP
 1239 048c 97000000 		call	_ZN3SEM4waitEv@plt
 1239      E7800000 
 1240              	.LVL90:
 147:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1241              		.loc 1 147 9 is_stmt 1
 147:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1242              		.loc 1 147 58 is_stmt 0
 1243              	#APP
 1244              	# 147 "src/Riscv.cpp" 1
 1245              		mv a0, a0
 1246              	# 0 "" 2
 1247              	#NO_APP
 1248              	.LBE106:
 1249 0498 6FF01FEC 		j	.L21
 1250              	.LVL91:
 1251              	.L52:
 1252              	.LBB107:
 1253              	.LBB101:
 150:src/Riscv.cpp ****         sem_t handle;
 1254              		.loc 1 150 9 is_stmt 1
 151:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1255              		.loc 1 151 9
 151:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (handle));
 1256              		.loc 1 151 61 is_stmt 0
 1257              	#APP
 1258              	# 151 "src/Riscv.cpp" 1
 1259              		mv a0, a1
 1260              	# 0 "" 2
 1261              	.LVL92:
 152:src/Riscv.cpp ****         int ret=handle->signal();
 1262              		.loc 1 152 9 is_stmt 1
 152:src/Riscv.cpp ****         int ret=handle->signal();
 1263              		.loc 1 152 31 is_stmt 0
 1264              	#NO_APP
 1265 04a0 97000000 		call	_ZN3SEM6signalEv@plt
 1265      E7800000 
 1266              	.LVL93:
 153:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1267              		.loc 1 153 9 is_stmt 1
 153:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1268              		.loc 1 153 58 is_stmt 0
 1269              	#APP
 1270              	# 153 "src/Riscv.cpp" 1
 1271              		mv a0, a0
 1272              	# 0 "" 2
GAS LISTING /tmp/ccCIXKNu.s 			page 33


 1273              	#NO_APP
 1274              	.LBE101:
 1275 04ac 6FF0DFEA 		j	.L21
 1276              	.LVL94:
 1277              	.L53:
 1278              	.LBB102:
 1279              	.LBB97:
 156:src/Riscv.cpp ****         time_t sleepTime;
 1280              		.loc 1 156 9 is_stmt 1
 157:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 1281              		.loc 1 157 9
 157:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (sleepTime));
 1282              		.loc 1 157 64 is_stmt 0
 1283              	#APP
 1284              	# 157 "src/Riscv.cpp" 1
 1285              		mv a0, a1
 1286              	# 0 "" 2
 1287              	.LVL95:
 158:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 1288              		.loc 1 158 9 is_stmt 1
 158:src/Riscv.cpp ****         int ret=TCB::sleep(sleepTime);
 1289              		.loc 1 158 27 is_stmt 0
 1290              	#NO_APP
 1291 04b4 97000000 		call	_ZN3TCB5sleepEm@plt
 1291      E7800000 
 1292              	.LVL96:
 159:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1293              		.loc 1 159 9 is_stmt 1
 159:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (ret));
 1294              		.loc 1 159 58 is_stmt 0
 1295              	#APP
 1296              	# 159 "src/Riscv.cpp" 1
 1297              		mv a0, a0
 1298              	# 0 "" 2
 1299              	#NO_APP
 1300              	.LBE97:
 1301 04c0 6FF09FE9 		j	.L21
 1302              	.LVL97:
 1303              	.L54:
 1304              	.LBB98:
 1305              	.LBB94:
 162:src/Riscv.cpp ****         char c = INbuff->get();
 1306              		.loc 1 162 9 is_stmt 1
 162:src/Riscv.cpp ****         char c = INbuff->get();
 1307              		.loc 1 162 29 is_stmt 0
 1308 04c4 17050000 		ld	a0,.LANCHOR0
 1308      03350500 
 1309 04cc 97000000 		call	_ZN5BBuff3getEv@plt
 1309      E7800000 
 1310              	.LVL98:
 163:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 1311              		.loc 1 163 9 is_stmt 1
 163:src/Riscv.cpp ****         __asm__ volatile ("mv a0, %[x]" :: [x] "r" (c));
 1312              		.loc 1 163 56 is_stmt 0
 1313              	#APP
 1314              	# 163 "src/Riscv.cpp" 1
 1315              		mv a0, a0
GAS LISTING /tmp/ccCIXKNu.s 			page 34


 1316              	# 0 "" 2
 1317              	#NO_APP
 1318              	.LBE94:
 1319 04d8 6FF01FE8 		j	.L21
 1320              	.LVL99:
 1321              	.L55:
 1322              	.LBB95:
 1323              	.LBB93:
 166:src/Riscv.cpp ****         char c;
 1324              		.loc 1 166 9 is_stmt 1
 167:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 1325              		.loc 1 167 9
 167:src/Riscv.cpp ****         __asm__ volatile ("mv %[x], a1" : [x] "=r" (c));
 1326              		.loc 1 167 56 is_stmt 0
 1327              	#APP
 1328              	# 167 "src/Riscv.cpp" 1
 1329              		mv a1, a1
 1330              	# 0 "" 2
 1331              	.LVL100:
 168:src/Riscv.cpp ****         OUTbuff->put(c);
 1332              		.loc 1 168 9 is_stmt 1
 168:src/Riscv.cpp ****         OUTbuff->put(c);
 1333              		.loc 1 168 21 is_stmt 0
 1334              	#NO_APP
 1335 04e0 93F5F50F 		andi	a1,a1,0xff
 1336 04e4 17050000 		ld	a0,.LANCHOR0+8
 1336      03350500 
 1337 04ec 97000000 		call	_ZN5BBuff3putEc@plt
 1337      E7800000 
 1338              	.LVL101:
 1339              	.LBE93:
 1340 04f4 6FF05FE6 		j	.L21
 1341              	.LBE95:
 1342              	.LBE98:
 1343              	.LBE102:
 1344              	.LBE107:
 1345              	.LBE113:
 1346              	.LBE121:
 1347              	.LBE128:
 1348              	.LBE137:
 1349              	.LBE148:
 1350              	.LBE159:
 1351              	.LBE173:
 1352              	.LBE186:
 1353              	.LBE200:
 1354              	.LBE219:
 1355              	.LBE243:
 1356              	.LBE266:
 1357              	.LBE281:
 1358              		.cfi_endproc
 1359              	.LFE37:
 1361              		.globl	_ZN5Riscv7OUTbuffE
 1362              		.globl	_ZN5Riscv6INbuffE
 1363              		.bss
 1364              		.align	3
 1365              		.set	.LANCHOR0,. + 0
 1368              	_ZN5Riscv6INbuffE:
GAS LISTING /tmp/ccCIXKNu.s 			page 35


 1369 0000 00000000 		.zero	8
 1369      00000000 
 1372              	_ZN5Riscv7OUTbuffE:
 1373 0008 00000000 		.zero	8
 1373      00000000 
 1374              		.text
 1375              	.Letext0:
 1376              		.file 5 "src/../h/../lib/hw.h"
 1377              		.file 6 "src/../h/../h/../h/List.hpp"
 1378              		.file 7 "src/../h/../h/SEM.hpp"
 1379              		.file 8 "src/../h/../h/syscall_c.hpp"
 1380              		.file 9 "src/../h/BBuff.hpp"
 1381              		.file 10 "src/../h/SList.hpp"
 1382              		.file 11 "src/../h/print.hpp"
 5683              		.align	3
 5686              	DW.ref.__gxx_personality_v0:
 5687 0000 00000000 		.dword	__gxx_personality_v0
 5687      00000000 
 5688              		.ident	"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04) 9.4.0"
 5689              		.section	.note.GNU-stack,"",@progbits
GAS LISTING /tmp/ccCIXKNu.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Riscv.cpp
     /tmp/ccCIXKNu.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccCIXKNu.s:13     .text:0000000000000000 .L0 
     /tmp/ccCIXKNu.s:14     .text:0000000000000000 .L0 
     /tmp/ccCIXKNu.s:15     .text:0000000000000004 .L0 
     /tmp/ccCIXKNu.s:17     .text:0000000000000008 .L0 
     /tmp/ccCIXKNu.s:19     .text:000000000000000c .L0 
     /tmp/ccCIXKNu.s:21     .text:000000000000000c .L0 
       src/Riscv.cpp:14     .text:000000000000000c .L0 
     /tmp/ccCIXKNu.s:27     .text:0000000000000010 .L0 
       src/Riscv.cpp:15     .text:0000000000000010 .L0 
     /tmp/ccCIXKNu.s:33     .text:0000000000000014 .L0 
     /tmp/ccCIXKNu.s:34     .text:0000000000000018 .L0 
     /tmp/ccCIXKNu.s:35     .text:0000000000000018 .L0 
     /tmp/ccCIXKNu.s:37     .text:000000000000001c .L0 
     /tmp/ccCIXKNu.s:39     .text:0000000000000020 .L0 
     /tmp/ccCIXKNu.s:45     .text:0000000000000020 _ZN5Riscv10InitBBuffsEv
     /tmp/ccCIXKNu.s:48     .text:0000000000000020 .L0 
     /tmp/ccCIXKNu.s:5686   .data.rel.local.DW.ref.__gxx_personality_v0:0000000000000000 DW.ref.__gxx_personality_v0
     /tmp/ccCIXKNu.s:51     .text:0000000000000020 .L0 
     /tmp/ccCIXKNu.s:52     .text:0000000000000024 .L0 
     /tmp/ccCIXKNu.s:57     .text:0000000000000034 .L0 
     /tmp/ccCIXKNu.s:58     .text:0000000000000034 .L0 
     /tmp/ccCIXKNu.s:59     .text:0000000000000034 .L0 
     /tmp/ccCIXKNu.s:60     .text:0000000000000034 .L0 
     /tmp/ccCIXKNu.s:62     .text:0000000000000038 .L0 
     /tmp/ccCIXKNu.s:64     .text:0000000000000038 .L0 
     /tmp/ccCIXKNu.s:65     .text:0000000000000038 .L0 
     /tmp/ccCIXKNu.s:67     .text:0000000000000040 .L0 
     /tmp/ccCIXKNu.s:70     .text:0000000000000044 .L0 
     /tmp/ccCIXKNu.s:71     .text:0000000000000044 .L0 
     /tmp/ccCIXKNu.s:73     .text:000000000000004c .L0 
     /tmp/ccCIXKNu.s:76     .text:0000000000000050 .L0 
     /tmp/ccCIXKNu.s:77     .text:0000000000000054 .L0 
     /tmp/ccCIXKNu.s:78     .text:0000000000000054 .L0 
     /tmp/ccCIXKNu.s:80     .text:0000000000000058 .L0 
     /tmp/ccCIXKNu.s:81     .text:0000000000000058 .L0 
     /tmp/ccCIXKNu.s:83     .text:000000000000005c .L0 
     /tmp/ccCIXKNu.s:85     .text:0000000000000060 .L0 
     /tmp/ccCIXKNu.s:87     .text:0000000000000064 .L0 
     /tmp/ccCIXKNu.s:90     .text:0000000000000068 .L0 
     /tmp/ccCIXKNu.s:92     .text:0000000000000068 .L0 
     /tmp/ccCIXKNu.s:93     .text:0000000000000068 .L0 
     /tmp/ccCIXKNu.s:105    .text:0000000000000084 .L0 
     /tmp/ccCIXKNu.s:109    .text:0000000000000090 .L0 
     /tmp/ccCIXKNu.s:110    .text:0000000000000090 .L0 
     /tmp/ccCIXKNu.s:122    .text:00000000000000ac .L0 
     /tmp/ccCIXKNu.s:124    .text:00000000000000b4 .L0 
     /tmp/ccCIXKNu.s:128    .text:00000000000000bc .L0 
     /tmp/ccCIXKNu.s:138    .text:00000000000000d8 .L0 
     /tmp/ccCIXKNu.s:145    .text:00000000000000f0 .L0 
     /tmp/ccCIXKNu.s:193    .text:00000000000000f0 _ZN5Riscv21SupervisorTrapHandlerEv
     /tmp/ccCIXKNu.s:196    .text:00000000000000f0 .L0 
     /tmp/ccCIXKNu.s:197    .text:00000000000000f0 .L0 
     /tmp/ccCIXKNu.s:198    .text:00000000000000f4 .L0 
     /tmp/ccCIXKNu.s:206    .text:0000000000000110 .L0 
GAS LISTING /tmp/ccCIXKNu.s 			page 37


     /tmp/ccCIXKNu.s:207    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:208    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:209    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:210    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:211    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:212    .text:0000000000000110 .L0 
     /tmp/ccCIXKNu.s:214    .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:216    .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:217    .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:221    .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:222    .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:223    .text:0000000000000114 .L0 
  src/../h/Riscv.hpp:79     .text:0000000000000114 .L0 
     /tmp/ccCIXKNu.s:231    .text:000000000000011c .L0 
     /tmp/ccCIXKNu.s:232    .text:000000000000011c .L0 
     /tmp/ccCIXKNu.s:239    .text:0000000000000120 .L0 
     /tmp/ccCIXKNu.s:240    .text:0000000000000120 .L0 
     /tmp/ccCIXKNu.s:241    .text:0000000000000120 .L0 
  src/../h/Riscv.hpp:63     .text:0000000000000120 .L0 
     /tmp/ccCIXKNu.s:251    .text:0000000000000124 .L0 
     /tmp/ccCIXKNu.s:254    .text:0000000000000124 .L0 
     /tmp/ccCIXKNu.s:255    .text:0000000000000124 .L0 
     /tmp/ccCIXKNu.s:256    .text:0000000000000124 .L0 
  src/../h/Riscv.hpp:73     .text:0000000000000124 .L0 
     /tmp/ccCIXKNu.s:266    .text:0000000000000128 .L0 
     /tmp/ccCIXKNu.s:268    .text:0000000000000128 .L0 
     /tmp/ccCIXKNu.s:276    .text:0000000000000138 .L0 
     /tmp/ccCIXKNu.s:282    .text:0000000000000148 .L0 
     /tmp/ccCIXKNu.s:283    .text:0000000000000148 .L0 
       src/Riscv.cpp:71     .text:0000000000000148 .L0 
     /tmp/ccCIXKNu.s:292    .text:000000000000014c .L0 
     /tmp/ccCIXKNu.s:305    .text:0000000000000154 .L0 
     /tmp/ccCIXKNu.s:319    .text:000000000000015c .L0 
     /tmp/ccCIXKNu.s:335    .text:0000000000000164 .L0 
     /tmp/ccCIXKNu.s:353    .text:000000000000016c .L0 
     /tmp/ccCIXKNu.s:373    .text:0000000000000174 .L0 
     /tmp/ccCIXKNu.s:395    .text:000000000000017c .L0 
     /tmp/ccCIXKNu.s:419    .text:0000000000000184 .L0 
     /tmp/ccCIXKNu.s:445    .text:000000000000018c .L0 
     /tmp/ccCIXKNu.s:473    .text:0000000000000194 .L0 
     /tmp/ccCIXKNu.s:503    .text:000000000000019c .L0 
     /tmp/ccCIXKNu.s:535    .text:00000000000001a4 .L0 
     /tmp/ccCIXKNu.s:569    .text:00000000000001ac .L0 
     /tmp/ccCIXKNu.s:605    .text:00000000000001b4 .L0 
     /tmp/ccCIXKNu.s:611    .text:00000000000001bc .L0 
     /tmp/ccCIXKNu.s:612    .text:00000000000001bc .L0 
     /tmp/ccCIXKNu.s:613    .text:00000000000001bc .L0 
  src/../h/Riscv.hpp:79     .text:00000000000001bc .L0 
     /tmp/ccCIXKNu.s:622    .text:00000000000001c4 .L0 
     /tmp/ccCIXKNu.s:623    .text:00000000000001c4 .L0 
     /tmp/ccCIXKNu.s:630    .text:00000000000001c8 .L0 
     /tmp/ccCIXKNu.s:631    .text:00000000000001c8 .L0 
     /tmp/ccCIXKNu.s:632    .text:00000000000001c8 .L0 
  src/../h/Riscv.hpp:84     .text:00000000000001c8 .L0 
     /tmp/ccCIXKNu.s:640    .text:00000000000001d0 .L0 
     /tmp/ccCIXKNu.s:641    .text:00000000000001d0 .L0 
     /tmp/ccCIXKNu.s:646    .text:00000000000001d4 .L0 
GAS LISTING /tmp/ccCIXKNu.s 			page 38


     /tmp/ccCIXKNu.s:647    .text:00000000000001d4 .L0 
     /tmp/ccCIXKNu.s:651    .text:00000000000001e4 .L0 
     /tmp/ccCIXKNu.s:652    .text:00000000000001e4 .L0 
     /tmp/ccCIXKNu.s:656    .text:00000000000001f0 .L0 
     /tmp/ccCIXKNu.s:657    .text:00000000000001f0 .L0 
     /tmp/ccCIXKNu.s:661    .text:0000000000000200 .L0 
     /tmp/ccCIXKNu.s:662    .text:0000000000000200 .L0 
     /tmp/ccCIXKNu.s:666    .text:0000000000000210 .L0 
     /tmp/ccCIXKNu.s:667    .text:0000000000000210 .L0 
     /tmp/ccCIXKNu.s:671    .text:000000000000021c .L0 
     /tmp/ccCIXKNu.s:672    .text:000000000000021c .L0 
     /tmp/ccCIXKNu.s:676    .text:000000000000022c .L0 
     /tmp/ccCIXKNu.s:677    .text:000000000000022c .L0 
     /tmp/ccCIXKNu.s:681    .text:000000000000023c .L0 
     /tmp/ccCIXKNu.s:682    .text:000000000000023c .L0 
     /tmp/ccCIXKNu.s:686    .text:0000000000000248 .L0 
     /tmp/ccCIXKNu.s:687    .text:0000000000000248 .L0 
     /tmp/ccCIXKNu.s:691    .text:0000000000000258 .L0 
     /tmp/ccCIXKNu.s:692    .text:0000000000000258 .L0 
     /tmp/ccCIXKNu.s:715    .text:0000000000000264 .L0 
     /tmp/ccCIXKNu.s:716    .text:0000000000000264 .L0 
     /tmp/ccCIXKNu.s:721    .text:0000000000000278 .L0 
     /tmp/ccCIXKNu.s:722    .text:0000000000000278 .L0 
     /tmp/ccCIXKNu.s:725    .text:0000000000000280 .L0 
     /tmp/ccCIXKNu.s:726    .text:0000000000000280 .L0 
     /tmp/ccCIXKNu.s:733    .text:000000000000028c .L0 
     /tmp/ccCIXKNu.s:734    .text:000000000000028c .L0 
     /tmp/ccCIXKNu.s:739    .text:0000000000000290 .L0 
     /tmp/ccCIXKNu.s:741    .text:0000000000000294 .L0 
     /tmp/ccCIXKNu.s:747    .text:0000000000000298 .L0 
     /tmp/ccCIXKNu.s:748    .text:0000000000000298 .L0 
     /tmp/ccCIXKNu.s:749    .text:0000000000000298 .L0 
     /tmp/ccCIXKNu.s:756    .text:00000000000002a0 .L0 
     /tmp/ccCIXKNu.s:762    .text:00000000000002a4 .L0 
     /tmp/ccCIXKNu.s:763    .text:00000000000002a4 .L0 
     /tmp/ccCIXKNu.s:768    .text:00000000000002ac .L0 
     /tmp/ccCIXKNu.s:769    .text:00000000000002ac .L0 
  src/../h/Riscv.hpp:58     .text:00000000000002ac .L0 
     /tmp/ccCIXKNu.s:781    .text:00000000000002b0 .L0 
     /tmp/ccCIXKNu.s:782    .text:00000000000002b0 .L0 
  src/../h/Riscv.hpp:68     .text:00000000000002b0 .L0 
     /tmp/ccCIXKNu.s:789    .text:00000000000002b4 .L0 
     /tmp/ccCIXKNu.s:797    .text:00000000000002b8 .L0 
     /tmp/ccCIXKNu.s:798    .text:00000000000002b8 .L0 
     /tmp/ccCIXKNu.s:804    .text:00000000000002c4 .L0 
     /tmp/ccCIXKNu.s:810    .text:00000000000002cc .L0 
     /tmp/ccCIXKNu.s:811    .text:00000000000002cc .L0 
     /tmp/ccCIXKNu.s:817    .text:00000000000002d8 .L0 
     /tmp/ccCIXKNu.s:818    .text:00000000000002d8 .L0 
  src/../h/Riscv.hpp:58     .text:00000000000002d8 .L0 
     /tmp/ccCIXKNu.s:830    .text:00000000000002dc .L0 
     /tmp/ccCIXKNu.s:831    .text:00000000000002dc .L0 
  src/../h/Riscv.hpp:68     .text:00000000000002dc .L0 
     /tmp/ccCIXKNu.s:838    .text:00000000000002e0 .L0 
     /tmp/ccCIXKNu.s:846    .text:00000000000002e4 .L0 
     /tmp/ccCIXKNu.s:847    .text:00000000000002e4 .L0 
     /tmp/ccCIXKNu.s:851    .text:00000000000002f4 .L0 
GAS LISTING /tmp/ccCIXKNu.s 			page 39


     /tmp/ccCIXKNu.s:855    .text:00000000000002f8 .L0 
     /tmp/ccCIXKNu.s:856    .text:00000000000002f8 .L0 
     /tmp/ccCIXKNu.s:857    .text:00000000000002f8 .L0 
     /tmp/ccCIXKNu.s:859    .text:00000000000002fc .L0 
     /tmp/ccCIXKNu.s:863    .text:0000000000000304 .L0 
     /tmp/ccCIXKNu.s:864    .text:0000000000000304 .L0 
     /tmp/ccCIXKNu.s:868    .text:0000000000000314 .L0 
     /tmp/ccCIXKNu.s:870    .text:0000000000000318 .L0 
     /tmp/ccCIXKNu.s:871    .text:0000000000000318 .L0 
     /tmp/ccCIXKNu.s:877    .text:0000000000000330 .L0 
     /tmp/ccCIXKNu.s:878    .text:0000000000000330 .L0 
     /tmp/ccCIXKNu.s:880    .text:0000000000000334 .L0 
     /tmp/ccCIXKNu.s:883    .text:0000000000000338 .L0 
     /tmp/ccCIXKNu.s:893    .text:000000000000033c .L0 
     /tmp/ccCIXKNu.s:894    .text:000000000000033c .L0 
       src/Riscv.cpp:75     .text:000000000000033c .L0 
     /tmp/ccCIXKNu.s:901    .text:0000000000000340 .L0 
     /tmp/ccCIXKNu.s:903    .text:0000000000000340 .L0 
     /tmp/ccCIXKNu.s:909    .text:0000000000000354 .L0 
       src/Riscv.cpp:77     .text:0000000000000354 .L0 
     /tmp/ccCIXKNu.s:920    .text:0000000000000358 .L0 
     /tmp/ccCIXKNu.s:921    .text:0000000000000358 .L0 
     /tmp/ccCIXKNu.s:926    .text:000000000000035c .L0 
  src/../h/Riscv.hpp:58     .text:000000000000035c .L0 
     /tmp/ccCIXKNu.s:938    .text:0000000000000360 .L0 
     /tmp/ccCIXKNu.s:939    .text:0000000000000360 .L0 
  src/../h/Riscv.hpp:68     .text:0000000000000360 .L0 
     /tmp/ccCIXKNu.s:953    .text:0000000000000364 .L0 
     /tmp/ccCIXKNu.s:954    .text:0000000000000368 .L0 
     /tmp/ccCIXKNu.s:955    .text:0000000000000368 .L0 
     /tmp/ccCIXKNu.s:957    .text:000000000000036c .L0 
     /tmp/ccCIXKNu.s:958    .text:000000000000036c .L0 
     /tmp/ccCIXKNu.s:960    .text:0000000000000370 .L0 
     /tmp/ccCIXKNu.s:962    .text:0000000000000374 .L0 
     /tmp/ccCIXKNu.s:965    .text:0000000000000378 .L0 
     /tmp/ccCIXKNu.s:967    .text:000000000000037c .L0 
     /tmp/ccCIXKNu.s:969    .text:0000000000000380 .L0 
     /tmp/ccCIXKNu.s:971    .text:0000000000000384 .L0 
     /tmp/ccCIXKNu.s:975    .text:0000000000000388 .L0 
     /tmp/ccCIXKNu.s:983    .text:0000000000000388 .L0 
     /tmp/ccCIXKNu.s:984    .text:0000000000000388 .L0 
       src/Riscv.cpp:81     .text:0000000000000388 .L0 
     /tmp/ccCIXKNu.s:991    .text:000000000000038c .L0 
     /tmp/ccCIXKNu.s:993    .text:000000000000038c .L0 
     /tmp/ccCIXKNu.s:999    .text:00000000000003a0 .L0 
     /tmp/ccCIXKNu.s:1000   .text:00000000000003a0 .L0 
     /tmp/ccCIXKNu.s:1013   .text:00000000000003ac .L0 
     /tmp/ccCIXKNu.s:1014   .text:00000000000003ac .L0 
     /tmp/ccCIXKNu.s:1020   .text:00000000000003b4 .L0 
     /tmp/ccCIXKNu.s:1021   .text:00000000000003b4 .L0 
     /tmp/ccCIXKNu.s:1026   .text:00000000000003b8 .L0 
       src/Riscv.cpp:87     .text:00000000000003b8 .L0 
     /tmp/ccCIXKNu.s:1039   .text:00000000000003c0 .L0 
     /tmp/ccCIXKNu.s:1040   .text:00000000000003c0 .L0 
     /tmp/ccCIXKNu.s:1045   .text:00000000000003d0 .L0 
       src/Riscv.cpp:91     .text:00000000000003d0 .L0 
     /tmp/ccCIXKNu.s:1058   .text:00000000000003d8 .L0 
GAS LISTING /tmp/ccCIXKNu.s 			page 40


     /tmp/ccCIXKNu.s:1059   .text:00000000000003d8 .L0 
     /tmp/ccCIXKNu.s:1060   .text:00000000000003d8 .L0 
     /tmp/ccCIXKNu.s:1061   .text:00000000000003d8 .L0 
       src/Riscv.cpp:97     .text:00000000000003d8 .L0 
     /tmp/ccCIXKNu.s:1068   .text:00000000000003dc .L0 
       src/Riscv.cpp:98     .text:00000000000003dc .L0 
     /tmp/ccCIXKNu.s:1074   .text:00000000000003e0 .L0 
       src/Riscv.cpp:99     .text:00000000000003e0 .L0 
     /tmp/ccCIXKNu.s:1080   .text:00000000000003e4 .L0 
     /tmp/ccCIXKNu.s:1082   .text:00000000000003e4 .L0 
     /tmp/ccCIXKNu.s:1090   .text:00000000000003fc .L0 
     /tmp/ccCIXKNu.s:1091   .text:00000000000003fc .L0 
     /tmp/ccCIXKNu.s:1097   .text:000000000000040c .L0 
     /tmp/ccCIXKNu.s:1100   .text:0000000000000410 .L0 
     /tmp/ccCIXKNu.s:1101   .text:0000000000000410 .L0 
     /tmp/ccCIXKNu.s:1103   .text:0000000000000414 .L0 
     /tmp/ccCIXKNu.s:1107   .text:0000000000000418 .L0 
       src/Riscv.cpp:112    .text:0000000000000418 .L0 
     /tmp/ccCIXKNu.s:1119   .text:0000000000000420 .L0 
     /tmp/ccCIXKNu.s:1127   .text:0000000000000428 .L0 
     /tmp/ccCIXKNu.s:1128   .text:0000000000000428 .L0 
     /tmp/ccCIXKNu.s:1131   .text:0000000000000430 .L0 
       src/Riscv.cpp:116    .text:0000000000000430 .L0 
     /tmp/ccCIXKNu.s:1143   .text:0000000000000438 .L0 
     /tmp/ccCIXKNu.s:1144   .text:0000000000000438 .L0 
     /tmp/ccCIXKNu.s:1152   .text:0000000000000444 .L0 
     /tmp/ccCIXKNu.s:1153   .text:0000000000000444 .L0 
     /tmp/ccCIXKNu.s:1154   .text:0000000000000444 .L0 
       src/Riscv.cpp:124    .text:0000000000000444 .L0 
     /tmp/ccCIXKNu.s:1161   .text:0000000000000448 .L0 
       src/Riscv.cpp:125    .text:0000000000000448 .L0 
     /tmp/ccCIXKNu.s:1167   .text:000000000000044c .L0 
     /tmp/ccCIXKNu.s:1169   .text:000000000000044c .L0 
     /tmp/ccCIXKNu.s:1173   .text:0000000000000458 .L0 
     /tmp/ccCIXKNu.s:1176   .text:000000000000045c .L0 
     /tmp/ccCIXKNu.s:1177   .text:000000000000045c .L0 
     /tmp/ccCIXKNu.s:1179   .text:0000000000000460 .L0 
     /tmp/ccCIXKNu.s:1183   .text:0000000000000464 .L0 
       src/Riscv.cpp:135    .text:0000000000000464 .L0 
     /tmp/ccCIXKNu.s:1195   .text:000000000000046c .L0 
     /tmp/ccCIXKNu.s:1203   .text:0000000000000474 .L0 
     /tmp/ccCIXKNu.s:1204   .text:0000000000000474 .L0 
       src/Riscv.cpp:139    .text:0000000000000474 .L0 
     /tmp/ccCIXKNu.s:1211   .text:0000000000000478 .L0 
     /tmp/ccCIXKNu.s:1213   .text:0000000000000478 .L0 
     /tmp/ccCIXKNu.s:1216   .text:0000000000000480 .L0 
       src/Riscv.cpp:141    .text:0000000000000480 .L0 
     /tmp/ccCIXKNu.s:1229   .text:0000000000000488 .L0 
     /tmp/ccCIXKNu.s:1230   .text:0000000000000488 .L0 
       src/Riscv.cpp:145    .text:0000000000000488 .L0 
     /tmp/ccCIXKNu.s:1237   .text:000000000000048c .L0 
     /tmp/ccCIXKNu.s:1239   .text:000000000000048c .L0 
     /tmp/ccCIXKNu.s:1242   .text:0000000000000494 .L0 
       src/Riscv.cpp:147    .text:0000000000000494 .L0 
     /tmp/ccCIXKNu.s:1255   .text:000000000000049c .L0 
     /tmp/ccCIXKNu.s:1256   .text:000000000000049c .L0 
       src/Riscv.cpp:151    .text:000000000000049c .L0 
GAS LISTING /tmp/ccCIXKNu.s 			page 41


     /tmp/ccCIXKNu.s:1263   .text:00000000000004a0 .L0 
     /tmp/ccCIXKNu.s:1265   .text:00000000000004a0 .L0 
     /tmp/ccCIXKNu.s:1268   .text:00000000000004a8 .L0 
       src/Riscv.cpp:153    .text:00000000000004a8 .L0 
     /tmp/ccCIXKNu.s:1281   .text:00000000000004b0 .L0 
     /tmp/ccCIXKNu.s:1282   .text:00000000000004b0 .L0 
       src/Riscv.cpp:157    .text:00000000000004b0 .L0 
     /tmp/ccCIXKNu.s:1289   .text:00000000000004b4 .L0 
     /tmp/ccCIXKNu.s:1291   .text:00000000000004b4 .L0 
     /tmp/ccCIXKNu.s:1294   .text:00000000000004bc .L0 
       src/Riscv.cpp:159    .text:00000000000004bc .L0 
     /tmp/ccCIXKNu.s:1307   .text:00000000000004c4 .L0 
     /tmp/ccCIXKNu.s:1308   .text:00000000000004c4 .L0 
     /tmp/ccCIXKNu.s:1312   .text:00000000000004d4 .L0 
       src/Riscv.cpp:163    .text:00000000000004d4 .L0 
     /tmp/ccCIXKNu.s:1325   .text:00000000000004dc .L0 
     /tmp/ccCIXKNu.s:1326   .text:00000000000004dc .L0 
       src/Riscv.cpp:167    .text:00000000000004dc .L0 
     /tmp/ccCIXKNu.s:1333   .text:00000000000004e0 .L0 
     /tmp/ccCIXKNu.s:1335   .text:00000000000004e0 .L0 
     /tmp/ccCIXKNu.s:1358   .text:00000000000004f8 .L0 
     /tmp/ccCIXKNu.s:1372   .bss:0000000000000008 _ZN5Riscv7OUTbuffE
     /tmp/ccCIXKNu.s:1368   .bss:0000000000000000 _ZN5Riscv6INbuffE
     /tmp/ccCIXKNu.s:1365   .bss:0000000000000000 .LANCHOR0
     /tmp/ccCIXKNu.s:1383   .text:00000000000004f8 .L0 
     /tmp/ccCIXKNu.s:65     .text:0000000000000038 .L0 
     /tmp/ccCIXKNu.s:71     .text:0000000000000044 .L0 
     /tmp/ccCIXKNu.s:105    .text:0000000000000084 .L0 
     /tmp/ccCIXKNu.s:122    .text:00000000000000ac .L0 
     /tmp/ccCIXKNu.s:178    .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccCIXKNu.s:647    .text:00000000000001d4 .L0 
     /tmp/ccCIXKNu.s:181    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccCIXKNu.s:657    .text:00000000000001f0 .L0 
     /tmp/ccCIXKNu.s:184    .rodata.str1.8:0000000000000010 .LC2
     /tmp/ccCIXKNu.s:662    .text:0000000000000200 .L0 
     /tmp/ccCIXKNu.s:672    .text:000000000000021c .L0 
     /tmp/ccCIXKNu.s:187    .rodata.str1.8:0000000000000018 .LC3
     /tmp/ccCIXKNu.s:677    .text:000000000000022c .L0 
     /tmp/ccCIXKNu.s:687    .text:0000000000000248 .L0 
     /tmp/ccCIXKNu.s:716    .text:0000000000000264 .L0 
     /tmp/ccCIXKNu.s:726    .text:0000000000000280 .L0 
     /tmp/ccCIXKNu.s:847    .text:00000000000002e4 .L0 
     /tmp/ccCIXKNu.s:864    .text:0000000000000304 .L0 
     /tmp/ccCIXKNu.s:873    .text:0000000000000320 .L0 
     /tmp/ccCIXKNu.s:1308   .text:00000000000004c4 .L0 
     /tmp/ccCIXKNu.s:1336   .text:00000000000004e4 .L0 
     /tmp/ccCIXKNu.s:89     .text:0000000000000068 .L11
     /tmp/ccCIXKNu.s:107    .text:0000000000000090 .L12
     /tmp/ccCIXKNu.s:68     .text:0000000000000044 .L4
     /tmp/ccCIXKNu.s:74     .text:0000000000000050 .L3
     /tmp/ccCIXKNu.s:696    .text:0000000000000264 .L40
     /tmp/ccCIXKNu.s:791    .text:00000000000002b8 .L41
     /tmp/ccCIXKNu.s:885    .text:000000000000033c .L42
     /tmp/ccCIXKNu.s:974    .text:0000000000000388 .L43
     /tmp/ccCIXKNu.s:1009   .text:00000000000003ac .L44
     /tmp/ccCIXKNu.s:1035   .text:00000000000003c0 .L45
     /tmp/ccCIXKNu.s:1054   .text:00000000000003d8 .L46
GAS LISTING /tmp/ccCIXKNu.s 			page 42


     /tmp/ccCIXKNu.s:1122   .text:0000000000000428 .L47
     /tmp/ccCIXKNu.s:1140   .text:0000000000000438 .L48
     /tmp/ccCIXKNu.s:1148   .text:0000000000000444 .L49
     /tmp/ccCIXKNu.s:1198   .text:0000000000000474 .L50
     /tmp/ccCIXKNu.s:1225   .text:0000000000000488 .L51
     /tmp/ccCIXKNu.s:1251   .text:000000000000049c .L52
     /tmp/ccCIXKNu.s:1277   .text:00000000000004b0 .L53
     /tmp/ccCIXKNu.s:1303   .text:00000000000004c4 .L54
     /tmp/ccCIXKNu.s:1321   .text:00000000000004dc .L55
     /tmp/ccCIXKNu.s:916    .text:0000000000000358 .L21
     /tmp/ccCIXKNu.s:758    .text:00000000000002a4 .L56
     /tmp/ccCIXKNu.s:946    .text:0000000000000364 .L13
     /tmp/ccCIXKNu.s:742    .text:0000000000000298 .L15
     /tmp/ccCIXKNu.s:840    .text:00000000000002e4 .L57
     /tmp/ccCIXKNu.s:807    .text:00000000000002cc .L18
     /tmp/ccCIXKNu.s:853    .text:00000000000002f8 .L19
     /tmp/ccCIXKNu.s:1116   .text:0000000000000420 .L37
     /tmp/ccCIXKNu.s:1104   .text:0000000000000418 .L26
     /tmp/ccCIXKNu.s:1192   .text:000000000000046c .L38
     /tmp/ccCIXKNu.s:1180   .text:0000000000000464 .L30
     /tmp/ccCIXKNu.s:94     .text:000000000000006c .LEHB0
     /tmp/ccCIXKNu.s:46     .text:0000000000000020 .LFB36
     /tmp/ccCIXKNu.s:97     .text:0000000000000074 .LEHE0
     /tmp/ccCIXKNu.s:100    .text:000000000000007c .LEHB1
     /tmp/ccCIXKNu.s:103    .text:0000000000000084 .LEHE1
     /tmp/ccCIXKNu.s:125    .text:00000000000000b8 .L8
     /tmp/ccCIXKNu.s:111    .text:0000000000000094 .LEHB2
     /tmp/ccCIXKNu.s:114    .text:000000000000009c .LEHE2
     /tmp/ccCIXKNu.s:117    .text:00000000000000a4 .LEHB3
     /tmp/ccCIXKNu.s:120    .text:00000000000000ac .LEHE3
     /tmp/ccCIXKNu.s:135    .text:00000000000000d4 .L9
     /tmp/ccCIXKNu.s:132    .text:00000000000000cc .LEHB4
     /tmp/ccCIXKNu.s:144    .text:00000000000000f0 .LEHE4
     /tmp/ccCIXKNu.s:3689   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccCIXKNu.s:5588   .debug_str:0000000000000947 .LASF200
     /tmp/ccCIXKNu.s:5326   .debug_str:0000000000000211 .LASF201
     /tmp/ccCIXKNu.s:5496   .debug_str:00000000000006fa .LASF202
     /tmp/ccCIXKNu.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccCIXKNu.s:1375   .text:00000000000004f8 .Letext0
     /tmp/ccCIXKNu.s:5254   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccCIXKNu.s:5394   .debug_str:0000000000000424 .LASF0
     /tmp/ccCIXKNu.s:5422   .debug_str:0000000000000501 .LASF1
     /tmp/ccCIXKNu.s:5504   .debug_str:0000000000000740 .LASF2
     /tmp/ccCIXKNu.s:5516   .debug_str:0000000000000798 .LASF4
     /tmp/ccCIXKNu.s:5400   .debug_str:0000000000000448 .LASF3
     /tmp/ccCIXKNu.s:5272   .debug_str:000000000000005f .LASF5
     /tmp/ccCIXKNu.s:5484   .debug_str:00000000000006a6 .LASF6
     /tmp/ccCIXKNu.s:5472   .debug_str:000000000000064f .LASF7
     /tmp/ccCIXKNu.s:5410   .debug_str:000000000000049d .LASF8
     /tmp/ccCIXKNu.s:5372   .debug_str:000000000000038c .LASF9
     /tmp/ccCIXKNu.s:5378   .debug_str:00000000000003b8 .LASF10
     /tmp/ccCIXKNu.s:5310   .debug_str:00000000000001ae .LASF11
     /tmp/ccCIXKNu.s:5360   .debug_str:0000000000000352 .LASF12
     /tmp/ccCIXKNu.s:5328   .debug_str:000000000000021f .LASF13
     /tmp/ccCIXKNu.s:5308   .debug_str:000000000000019e .LASF14
     /tmp/ccCIXKNu.s:5562   .debug_str:00000000000008af .LASF15
     /tmp/ccCIXKNu.s:5344   .debug_str:0000000000000299 .LASF16
GAS LISTING /tmp/ccCIXKNu.s 			page 43


     /tmp/ccCIXKNu.s:5544   .debug_str:000000000000083c .LASF17
     /tmp/ccCIXKNu.s:5570   .debug_str:00000000000008db .LASF63
     /tmp/ccCIXKNu.s:5668   .debug_str:0000000000000c04 .LASF18
     /tmp/ccCIXKNu.s:5374   .debug_str:000000000000039c .LASF20
     /tmp/ccCIXKNu.s:5266   .debug_str:000000000000003b .LASF44
     /tmp/ccCIXKNu.s:5438   .debug_str:0000000000000559 .LASF129
     /tmp/ccCIXKNu.s:5518   .debug_str:000000000000079f .LASF19
     /tmp/ccCIXKNu.s:5270   .debug_str:0000000000000053 .LASF21
     /tmp/ccCIXKNu.s:5560   .debug_str:00000000000008a2 .LASF22
     /tmp/ccCIXKNu.s:5640   .debug_str:0000000000000b42 .LASF23
     /tmp/ccCIXKNu.s:5466   .debug_str:000000000000062d .LASF82
     /tmp/ccCIXKNu.s:5338   .debug_str:0000000000000278 .LASF24
     /tmp/ccCIXKNu.s:5320   .debug_str:00000000000001e4 .LASF26
     /tmp/ccCIXKNu.s:5538   .debug_str:0000000000000827 .LASF67
     /tmp/ccCIXKNu.s:5404   .debug_str:0000000000000463 .LASF69
     /tmp/ccCIXKNu.s:5448   .debug_str:00000000000005b3 .LASF25
     /tmp/ccCIXKNu.s:5298   .debug_str:000000000000012d .LASF27
     /tmp/ccCIXKNu.s:5572   .debug_str:00000000000008e3 .LASF32
     /tmp/ccCIXKNu.s:5452   .debug_str:00000000000005c9 .LASF34
     /tmp/ccCIXKNu.s:5392   .debug_str:000000000000041e .LASF28
     /tmp/ccCIXKNu.s:5274   .debug_str:0000000000000066 .LASF29
     /tmp/ccCIXKNu.s:5268   .debug_str:000000000000004b .LASF30
     /tmp/ccCIXKNu.s:5464   .debug_str:000000000000061b .LASF31
     /tmp/ccCIXKNu.s:5506   .debug_str:000000000000074e .LASF33
     /tmp/ccCIXKNu.s:5302   .debug_str:0000000000000166 .LASF35
     /tmp/ccCIXKNu.s:5428   .debug_str:0000000000000520 .LASF36
     /tmp/ccCIXKNu.s:5616   .debug_str:0000000000000ad8 .LASF37
     /tmp/ccCIXKNu.s:5586   .debug_str:000000000000093f .LASF38
     /tmp/ccCIXKNu.s:5478   .debug_str:000000000000067d .LASF39
     /tmp/ccCIXKNu.s:5292   .debug_str:0000000000000105 .LASF40
     /tmp/ccCIXKNu.s:5364   .debug_str:000000000000036e .LASF60
     /tmp/ccCIXKNu.s:5648   .debug_str:0000000000000b78 .LASF41
     /tmp/ccCIXKNu.s:5426   .debug_str:000000000000051a .LASF42
     /tmp/ccCIXKNu.s:5512   .debug_str:0000000000000780 .LASF43
     /tmp/ccCIXKNu.s:5654   .debug_str:0000000000000b98 .LASF93
     /tmp/ccCIXKNu.s:5542   .debug_str:0000000000000833 .LASF45
     /tmp/ccCIXKNu.s:5662   .debug_str:0000000000000be1 .LASF46
     /tmp/ccCIXKNu.s:5602   .debug_str:0000000000000a76 .LASF47
     /tmp/ccCIXKNu.s:5264   .debug_str:0000000000000036 .LASF48
     /tmp/ccCIXKNu.s:5460   .debug_str:00000000000005f3 .LASF49
     /tmp/ccCIXKNu.s:5596   .debug_str:0000000000000a5a .LASF50
     /tmp/ccCIXKNu.s:5306   .debug_str:0000000000000193 .LASF203
     /tmp/ccCIXKNu.s:5278   .debug_str:0000000000000097 .LASF204
     /tmp/ccCIXKNu.s:5420   .debug_str:00000000000004f0 .LASF163
     /tmp/ccCIXKNu.s:5606   .debug_str:0000000000000a93 .LASF165
     /tmp/ccCIXKNu.s:5482   .debug_str:0000000000000697 .LASF205
     /tmp/ccCIXKNu.s:5330   .debug_str:000000000000022f .LASF206
     /tmp/ccCIXKNu.s:5630   .debug_str:0000000000000b1b .LASF51
     /tmp/ccCIXKNu.s:5614   .debug_str:0000000000000ad3 .LASF207
     /tmp/ccCIXKNu.s:5554   .debug_str:000000000000088a .LASF52
     /tmp/ccCIXKNu.s:5456   .debug_str:00000000000005e9 .LASF53
     /tmp/ccCIXKNu.s:5450   .debug_str:00000000000005c4 .LASF54
     /tmp/ccCIXKNu.s:5546   .debug_str:0000000000000852 .LASF55
     /tmp/ccCIXKNu.s:5416   .debug_str:00000000000004d8 .LASF56
     /tmp/ccCIXKNu.s:5300   .debug_str:0000000000000149 .LASF57
     /tmp/ccCIXKNu.s:5532   .debug_str:00000000000007ff .LASF58
     /tmp/ccCIXKNu.s:5408   .debug_str:0000000000000480 .LASF59
GAS LISTING /tmp/ccCIXKNu.s 			page 44


     /tmp/ccCIXKNu.s:5332   .debug_str:000000000000024a .LASF61
     /tmp/ccCIXKNu.s:5470   .debug_str:000000000000063f .LASF62
     /tmp/ccCIXKNu.s:5362   .debug_str:0000000000000361 .LASF64
     /tmp/ccCIXKNu.s:5312   .debug_str:00000000000001bd .LASF65
     /tmp/ccCIXKNu.s:5284   .debug_str:00000000000000cc .LASF66
     /tmp/ccCIXKNu.s:5494   .debug_str:00000000000006f1 .LASF68
     /tmp/ccCIXKNu.s:5462   .debug_str:00000000000005fb .LASF70
     /tmp/ccCIXKNu.s:5444   .debug_str:0000000000000588 .LASF71
     /tmp/ccCIXKNu.s:5276   .debug_str:0000000000000076 .LASF72
     /tmp/ccCIXKNu.s:5386   .debug_str:00000000000003e9 .LASF73
     /tmp/ccCIXKNu.s:5446   .debug_str:0000000000000592 .LASF74
     /tmp/ccCIXKNu.s:5414   .debug_str:00000000000004c9 .LASF75
     /tmp/ccCIXKNu.s:5526   .debug_str:00000000000007b8 .LASF76
     /tmp/ccCIXKNu.s:5358   .debug_str:000000000000033e .LASF77
     /tmp/ccCIXKNu.s:5352   .debug_str:0000000000000304 .LASF78
     /tmp/ccCIXKNu.s:5282   .debug_str:00000000000000b3 .LASF79
     /tmp/ccCIXKNu.s:5440   .debug_str:0000000000000566 .LASF80
     /tmp/ccCIXKNu.s:5348   .debug_str:00000000000002c5 .LASF81
     /tmp/ccCIXKNu.s:5674   .debug_str:0000000000000c20 .LASF83
     /tmp/ccCIXKNu.s:5500   .debug_str:0000000000000730 .LASF84
     /tmp/ccCIXKNu.s:5340   .debug_str:0000000000000281 .LASF85
     /tmp/ccCIXKNu.s:5660   .debug_str:0000000000000bd2 .LASF86
     /tmp/ccCIXKNu.s:5566   .debug_str:00000000000008c3 .LASF87
     /tmp/ccCIXKNu.s:5568   .debug_str:00000000000008ca .LASF88
     /tmp/ccCIXKNu.s:5458   .debug_str:00000000000005ee .LASF89
     /tmp/ccCIXKNu.s:5612   .debug_str:0000000000000ac4 .LASF90
     /tmp/ccCIXKNu.s:5280   .debug_str:00000000000000ad .LASF91
     /tmp/ccCIXKNu.s:5290   .debug_str:00000000000000f5 .LASF92
     /tmp/ccCIXKNu.s:5582   .debug_str:000000000000091b .LASF94
     /tmp/ccCIXKNu.s:5632   .debug_str:0000000000000b25 .LASF95
     /tmp/ccCIXKNu.s:5608   .debug_str:0000000000000ab0 .LASF96
     /tmp/ccCIXKNu.s:5556   .debug_str:000000000000088f .LASF208
     /tmp/ccCIXKNu.s:5678   .debug_str:0000000000000c3a .LASF97
     /tmp/ccCIXKNu.s:5368   .debug_str:0000000000000378 .LASF98
     /tmp/ccCIXKNu.s:5550   .debug_str:0000000000000870 .LASF99
     /tmp/ccCIXKNu.s:5486   .debug_str:00000000000006ad .LASF100
     /tmp/ccCIXKNu.s:5576   .debug_str:00000000000008f3 .LASF101
     /tmp/ccCIXKNu.s:5488   .debug_str:00000000000006c8 .LASF102
     /tmp/ccCIXKNu.s:5334   .debug_str:000000000000024f .LASF103
     /tmp/ccCIXKNu.s:5314   .debug_str:00000000000001c2 .LASF104
     /tmp/ccCIXKNu.s:5322   .debug_str:00000000000001f7 .LASF105
     /tmp/ccCIXKNu.s:5454   .debug_str:00000000000005e0 .LASF106
     /tmp/ccCIXKNu.s:5578   .debug_str:0000000000000901 .LASF107
     /tmp/ccCIXKNu.s:5652   .debug_str:0000000000000b8d .LASF108
     /tmp/ccCIXKNu.s:5564   .debug_str:00000000000008bb .LASF109
     /tmp/ccCIXKNu.s:5600   .debug_str:0000000000000a6e .LASF110
     /tmp/ccCIXKNu.s:5628   .debug_str:0000000000000b12 .LASF111
     /tmp/ccCIXKNu.s:5646   .debug_str:0000000000000b72 .LASF112
     /tmp/ccCIXKNu.s:5316   .debug_str:00000000000001cb .LASF113
     /tmp/ccCIXKNu.s:5324   .debug_str:0000000000000201 .LASF209
     /tmp/ccCIXKNu.s:5376   .debug_str:00000000000003a8 .LASF210
     /tmp/ccCIXKNu.s:5406   .debug_str:0000000000000472 .LASF114
     /tmp/ccCIXKNu.s:5642   .debug_str:0000000000000b64 .LASF115
     /tmp/ccCIXKNu.s:5380   .debug_str:00000000000003c6 .LASF116
     /tmp/ccCIXKNu.s:5610   .debug_str:0000000000000abd .LASF117
     /tmp/ccCIXKNu.s:5258   .debug_str:000000000000000b .LASF118
     /tmp/ccCIXKNu.s:5524   .debug_str:00000000000007b3 .LASF119
GAS LISTING /tmp/ccCIXKNu.s 			page 45


     /tmp/ccCIXKNu.s:5424   .debug_str:0000000000000514 .LASF120
     /tmp/ccCIXKNu.s:5672   .debug_str:0000000000000c1a .LASF121
     /tmp/ccCIXKNu.s:5260   .debug_str:000000000000001e .LASF122
     /tmp/ccCIXKNu.s:5574   .debug_str:00000000000008ee .LASF123
     /tmp/ccCIXKNu.s:5634   .debug_str:0000000000000b2c .LASF124
     /tmp/ccCIXKNu.s:5528   .debug_str:00000000000007df .LASF211
     /tmp/ccCIXKNu.s:5402   .debug_str:000000000000045a .LASF125
     /tmp/ccCIXKNu.s:5350   .debug_str:00000000000002fb .LASF126
     /tmp/ccCIXKNu.s:5650   .debug_str:0000000000000b84 .LASF127
     /tmp/ccCIXKNu.s:5498   .debug_str:0000000000000726 .LASF128
     /tmp/ccCIXKNu.s:5346   .debug_str:00000000000002af .LASF130
     /tmp/ccCIXKNu.s:5670   .debug_str:0000000000000c11 .LASF131
     /tmp/ccCIXKNu.s:5530   .debug_str:00000000000007ea .LASF132
     /tmp/ccCIXKNu.s:5296   .debug_str:0000000000000124 .LASF133
     /tmp/ccCIXKNu.s:5658   .debug_str:0000000000000bbd .LASF134
     /tmp/ccCIXKNu.s:5508   .debug_str:0000000000000758 .LASF135
     /tmp/ccCIXKNu.s:5412   .debug_str:00000000000004b0 .LASF136
     /tmp/ccCIXKNu.s:5286   .debug_str:00000000000000d1 .LASF137
     /tmp/ccCIXKNu.s:5336   .debug_str:000000000000025f .LASF138
     /tmp/ccCIXKNu.s:5548   .debug_str:0000000000000865 .LASF139
     /tmp/ccCIXKNu.s:5304   .debug_str:000000000000017b .LASF140
     /tmp/ccCIXKNu.s:5382   .debug_str:00000000000003d4 .LASF141
     /tmp/ccCIXKNu.s:5442   .debug_str:0000000000000572 .LASF142
     /tmp/ccCIXKNu.s:5256   .debug_str:0000000000000000 .LASF143
     /tmp/ccCIXKNu.s:5584   .debug_str:0000000000000927 .LASF144
     /tmp/ccCIXKNu.s:5502   .debug_str:0000000000000735 .LASF145
     /tmp/ccCIXKNu.s:5666   .debug_str:0000000000000bec .LASF146
     /tmp/ccCIXKNu.s:5522   .debug_str:00000000000007ac .LASF147
     /tmp/ccCIXKNu.s:5318   .debug_str:00000000000001d1 .LASF148
     /tmp/ccCIXKNu.s:5540   .debug_str:000000000000082c .LASF149
     /tmp/ccCIXKNu.s:5434   .debug_str:000000000000053b .LASF150
     /tmp/ccCIXKNu.s:5370   .debug_str:0000000000000381 .LASF151
     /tmp/ccCIXKNu.s:5592   .debug_str:0000000000000a1f .LASF152
     /tmp/ccCIXKNu.s:5418   .debug_str:00000000000004e1 .LASF153
     /tmp/ccCIXKNu.s:5510   .debug_str:0000000000000764 .LASF154
     /tmp/ccCIXKNu.s:5384   .debug_str:00000000000003de .LASF155
     /tmp/ccCIXKNu.s:5388   .debug_str:00000000000003f2 .LASF156
     /tmp/ccCIXKNu.s:5534   .debug_str:000000000000080a .LASF157
     /tmp/ccCIXKNu.s:5594   .debug_str:0000000000000a37 .LASF158
     /tmp/ccCIXKNu.s:5536   .debug_str:0000000000000820 .LASF159
     /tmp/ccCIXKNu.s:5430   .debug_str:000000000000052d .LASF160
     /tmp/ccCIXKNu.s:5432   .debug_str:0000000000000535 .LASF161
     /tmp/ccCIXKNu.s:5626   .debug_str:0000000000000b0d .LASF164
     /tmp/ccCIXKNu.s:5598   .debug_str:0000000000000a64 .LASF162
     /tmp/ccCIXKNu.s:5492   .debug_str:00000000000006d9 .LASF166
     /tmp/ccCIXKNu.s:5604   .debug_str:0000000000000a7e .LASF167
     /tmp/ccCIXKNu.s:5354   .debug_str:0000000000000330 .LASF168
     /tmp/ccCIXKNu.s:5590   .debug_str:0000000000000a0b .LASF169
     /tmp/ccCIXKNu.s:5636   .debug_str:0000000000000b32 .LASF170
     /tmp/ccCIXKNu.s:5294   .debug_str:0000000000000110 .LASF171
     /tmp/ccCIXKNu.s:5398   .debug_str:0000000000000436 .LASF172
     /tmp/ccCIXKNu.s:5342   .debug_str:0000000000000286 .LASF173
     /tmp/ccCIXKNu.s:194    .text:00000000000000f0 .LFB37
     /tmp/ccCIXKNu.s:1359   .text:00000000000004f8 .LFE37
     /tmp/ccCIXKNu.s:5664   .debug_str:0000000000000be7 .LASF174
     /tmp/ccCIXKNu.s:4809   .debug_loc:0000000000000000 .LLST0
     /tmp/ccCIXKNu.s:5638   .debug_str:0000000000000b3a .LASF175
GAS LISTING /tmp/ccCIXKNu.s 			page 46


     /tmp/ccCIXKNu.s:4826   .debug_loc:000000000000004b .LLST1
     /tmp/ccCIXKNu.s:5552   .debug_str:0000000000000883 .LASF176
     /tmp/ccCIXKNu.s:4837   .debug_loc:0000000000000081 .LLST2
     /tmp/ccCIXKNu.s:795    .text:00000000000002b8 .LBB233
     /tmp/ccCIXKNu.s:888    .text:000000000000033c .LBE233
     /tmp/ccCIXKNu.s:4856   .debug_loc:00000000000000dd .LLST32
     /tmp/ccCIXKNu.s:844    .text:00000000000002e4 .LBB235
     /tmp/ccCIXKNu.s:886    .text:000000000000033c .LBE235
     /tmp/ccCIXKNu.s:5622   .debug_str:0000000000000aff .LASF177
     /tmp/ccCIXKNu.s:861    .text:0000000000000304 .LBB236
     /tmp/ccCIXKNu.s:881    .text:0000000000000338 .LBE236
     /tmp/ccCIXKNu.s:875    .text:0000000000000330 .LVL42
     /tmp/ccCIXKNu.s:815    .text:00000000000002d8 .LBB237
     /tmp/ccCIXKNu.s:826    .text:00000000000002dc .LBE237
     /tmp/ccCIXKNu.s:4867   .debug_loc:0000000000000113 .LLST33
     /tmp/ccCIXKNu.s:828    .text:00000000000002dc .LBB239
     /tmp/ccCIXKNu.s:842    .text:00000000000002e4 .LBE239
     /tmp/ccCIXKNu.s:4874   .debug_loc:0000000000000136 .LLST34
     /tmp/ccCIXKNu.s:799    .text:00000000000002c0 .LVL35
     /tmp/ccCIXKNu.s:813    .text:00000000000002d8 .LVL38
     /tmp/ccCIXKNu.s:5206   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccCIXKNu.s:5514   .debug_str:0000000000000790 .LASF178
     /tmp/ccCIXKNu.s:4881   .debug_loc:0000000000000159 .LLST3
     /tmp/ccCIXKNu.s:891    .text:000000000000033c .LBB199
     /tmp/ccCIXKNu.s:917    .text:0000000000000358 .LBE199
     /tmp/ccCIXKNu.s:5580   .debug_str:000000000000090c .LASF179
     /tmp/ccCIXKNu.s:4944   .debug_loc:0000000000000286 .LLST28
     /tmp/ccCIXKNu.s:4951   .debug_loc:00000000000002a9 .LLST29
     /tmp/ccCIXKNu.s:904    .text:0000000000000348 .LVL45
     /tmp/ccCIXKNu.s:907    .text:0000000000000354 .LVL46
     /tmp/ccCIXKNu.s:981    .text:0000000000000388 .LBB185
     /tmp/ccCIXKNu.s:1006   .text:00000000000003a8 .LBE185
     /tmp/ccCIXKNu.s:4958   .debug_loc:00000000000002cc .LLST27
     /tmp/ccCIXKNu.s:994    .text:0000000000000394 .LVL54
     /tmp/ccCIXKNu.s:997    .text:00000000000003a0 .LVL55
     /tmp/ccCIXKNu.s:1011   .text:00000000000003ac .LBB170
     /tmp/ccCIXKNu.s:1032   .text:00000000000003bc .LBE170
     /tmp/ccCIXKNu.s:5520   .debug_str:00000000000007a4 .LASF180
     /tmp/ccCIXKNu.s:4965   .debug_loc:00000000000002ef .LLST25
     /tmp/ccCIXKNu.s:1016   .text:00000000000003b4 .LBB171
     /tmp/ccCIXKNu.s:1024   .text:00000000000003b8 .LBE171
     /tmp/ccCIXKNu.s:4972   .debug_loc:0000000000000312 .LLST26
     /tmp/ccCIXKNu.s:1015   .text:00000000000003b4 .LVL57
     /tmp/ccCIXKNu.s:1037   .text:00000000000003c0 .LBB158
     /tmp/ccCIXKNu.s:1051   .text:00000000000003d4 .LBE158
     /tmp/ccCIXKNu.s:5468   .debug_str:0000000000000632 .LASF181
     /tmp/ccCIXKNu.s:4979   .debug_loc:0000000000000335 .LLST24
     /tmp/ccCIXKNu.s:1041   .text:00000000000003c8 .LVL60
     /tmp/ccCIXKNu.s:1043   .text:00000000000003d0 .LVL61
     /tmp/ccCIXKNu.s:5644   .debug_str:0000000000000b6b .LASF182
     /tmp/ccCIXKNu.s:4986   .debug_loc:0000000000000358 .LLST19
     /tmp/ccCIXKNu.s:5676   .debug_str:0000000000000c2c .LASF183
     /tmp/ccCIXKNu.s:4993   .debug_loc:000000000000037b .LLST20
     /tmp/ccCIXKNu.s:5000   .debug_loc:000000000000039e .LLST21
     /tmp/ccCIXKNu.s:5007   .debug_loc:00000000000003c1 .LLST22
     /tmp/ccCIXKNu.s:5018   .debug_loc:00000000000003f7 .LLST23
     /tmp/ccCIXKNu.s:1083   .text:00000000000003ec .LVL66
GAS LISTING /tmp/ccCIXKNu.s 			page 47


     /tmp/ccCIXKNu.s:1086   .text:00000000000003f8 .LVL67
     /tmp/ccCIXKNu.s:1095   .text:000000000000040c .LVL70
     /tmp/ccCIXKNu.s:1125   .text:0000000000000428 .LBB136
     /tmp/ccCIXKNu.s:1137   .text:0000000000000434 .LBE136
     /tmp/ccCIXKNu.s:5035   .debug_loc:0000000000000442 .LLST18
     /tmp/ccCIXKNu.s:1129   .text:0000000000000430 .LVL75
     /tmp/ccCIXKNu.s:5042   .debug_loc:0000000000000465 .LLST15
     /tmp/ccCIXKNu.s:5490   .debug_str:00000000000006d4 .LASF184
     /tmp/ccCIXKNu.s:5049   .debug_loc:0000000000000488 .LLST16
     /tmp/ccCIXKNu.s:5056   .debug_loc:00000000000004ab .LLST17
     /tmp/ccCIXKNu.s:1171   .text:0000000000000458 .LVL81
     /tmp/ccCIXKNu.s:1201   .text:0000000000000474 .LBB112
     /tmp/ccCIXKNu.s:1222   .text:0000000000000484 .LBE112
     /tmp/ccCIXKNu.s:5073   .debug_loc:00000000000004f6 .LLST13
     /tmp/ccCIXKNu.s:5080   .debug_loc:0000000000000519 .LLST14
     /tmp/ccCIXKNu.s:1214   .text:0000000000000480 .LVL87
     /tmp/ccCIXKNu.s:1227   .text:0000000000000488 .LBB106
     /tmp/ccCIXKNu.s:1248   .text:0000000000000498 .LBE106
     /tmp/ccCIXKNu.s:5087   .debug_loc:000000000000053c .LLST11
     /tmp/ccCIXKNu.s:5094   .debug_loc:000000000000055f .LLST12
     /tmp/ccCIXKNu.s:1240   .text:0000000000000494 .LVL90
     /tmp/ccCIXKNu.s:1253   .text:000000000000049c .LBB101
     /tmp/ccCIXKNu.s:1274   .text:00000000000004ac .LBE101
     /tmp/ccCIXKNu.s:5101   .debug_loc:0000000000000582 .LLST9
     /tmp/ccCIXKNu.s:5108   .debug_loc:00000000000005a5 .LLST10
     /tmp/ccCIXKNu.s:1266   .text:00000000000004a8 .LVL93
     /tmp/ccCIXKNu.s:1279   .text:00000000000004b0 .LBB97
     /tmp/ccCIXKNu.s:1300   .text:00000000000004c0 .LBE97
     /tmp/ccCIXKNu.s:5115   .debug_loc:00000000000005c8 .LLST7
     /tmp/ccCIXKNu.s:5122   .debug_loc:00000000000005eb .LLST8
     /tmp/ccCIXKNu.s:1292   .text:00000000000004bc .LVL96
     /tmp/ccCIXKNu.s:1305   .text:00000000000004c4 .LBB94
     /tmp/ccCIXKNu.s:1318   .text:00000000000004d8 .LBE94
     /tmp/ccCIXKNu.s:5129   .debug_loc:000000000000060e .LLST6
     /tmp/ccCIXKNu.s:1310   .text:00000000000004d4 .LVL98
     /tmp/ccCIXKNu.s:1323   .text:00000000000004dc .LBB93
     /tmp/ccCIXKNu.s:1339   .text:00000000000004f4 .LBE93
     /tmp/ccCIXKNu.s:5136   .debug_loc:0000000000000631 .LLST5
     /tmp/ccCIXKNu.s:1338   .text:00000000000004f4 .LVL101
     /tmp/ccCIXKNu.s:607    .text:00000000000001bc .LBB88
     /tmp/ccCIXKNu.s:697    .text:0000000000000264 .LBE88
     /tmp/ccCIXKNu.s:5558   .debug_str:000000000000089c .LASF185
     /tmp/ccCIXKNu.s:5143   .debug_loc:0000000000000654 .LLST4
     /tmp/ccCIXKNu.s:609    .text:00000000000001bc .LBB89
     /tmp/ccCIXKNu.s:626    .text:00000000000001c8 .LBE89
     /tmp/ccCIXKNu.s:628    .text:00000000000001c8 .LBB91
     /tmp/ccCIXKNu.s:644    .text:00000000000001d4 .LBE91
     /tmp/ccCIXKNu.s:649    .text:00000000000001e4 .LVL16
     /tmp/ccCIXKNu.s:654    .text:00000000000001f0 .LVL17
     /tmp/ccCIXKNu.s:659    .text:0000000000000200 .LVL18
     /tmp/ccCIXKNu.s:664    .text:0000000000000210 .LVL19
     /tmp/ccCIXKNu.s:669    .text:000000000000021c .LVL20
     /tmp/ccCIXKNu.s:674    .text:000000000000022c .LVL21
     /tmp/ccCIXKNu.s:679    .text:000000000000023c .LVL22
     /tmp/ccCIXKNu.s:684    .text:0000000000000248 .LVL23
     /tmp/ccCIXKNu.s:689    .text:0000000000000258 .LVL24
     /tmp/ccCIXKNu.s:693    .text:0000000000000260 .LVL25
GAS LISTING /tmp/ccCIXKNu.s 			page 48


     /tmp/ccCIXKNu.s:923    .text:000000000000035c .LBB215
     /tmp/ccCIXKNu.s:934    .text:0000000000000360 .LBE215
     /tmp/ccCIXKNu.s:5150   .debug_loc:0000000000000677 .LLST30
     /tmp/ccCIXKNu.s:936    .text:0000000000000360 .LBB217
     /tmp/ccCIXKNu.s:948    .text:0000000000000364 .LBE217
     /tmp/ccCIXKNu.s:5157   .debug_loc:000000000000069a .LLST31
     /tmp/ccCIXKNu.s:1145   .text:0000000000000440 .LVL77
     /tmp/ccCIXKNu.s:218    .text:0000000000000114 .LBB65
     /tmp/ccCIXKNu.s:235    .text:0000000000000120 .LBE65
     /tmp/ccCIXKNu.s:237    .text:0000000000000120 .LBB67
     /tmp/ccCIXKNu.s:250    .text:0000000000000124 .LBE67
     /tmp/ccCIXKNu.s:252    .text:0000000000000124 .LBB69
     /tmp/ccCIXKNu.s:265    .text:0000000000000128 .LBE69
     /tmp/ccCIXKNu.s:729    .text:000000000000028c .LBB257
     /tmp/ccCIXKNu.s:737    .text:0000000000000290 .LBE257
     /tmp/ccCIXKNu.s:5164   .debug_loc:00000000000006bd .LLST35
     /tmp/ccCIXKNu.s:745    .text:0000000000000298 .LBB259
     /tmp/ccCIXKNu.s:760    .text:00000000000002a4 .LBE259
     /tmp/ccCIXKNu.s:5171   .debug_loc:00000000000006e0 .LLST36
     /tmp/ccCIXKNu.s:766    .text:00000000000002ac .LBB261
     /tmp/ccCIXKNu.s:777    .text:00000000000002b0 .LBE261
     /tmp/ccCIXKNu.s:5179   .debug_loc:0000000000000704 .LLST37
     /tmp/ccCIXKNu.s:779    .text:00000000000002b0 .LBB263
     /tmp/ccCIXKNu.s:793    .text:00000000000002b8 .LBE263
     /tmp/ccCIXKNu.s:5186   .debug_loc:0000000000000727 .LLST38
     /tmp/ccCIXKNu.s:723    .text:0000000000000280 .LVL27
     /tmp/ccCIXKNu.s:764    .text:00000000000002ac .LVL32
     /tmp/ccCIXKNu.s:146    .text:00000000000000f0 .LFE36
     /tmp/ccCIXKNu.s:96     .text:0000000000000074 .LVL0
     /tmp/ccCIXKNu.s:102    .text:0000000000000084 .LVL1
     /tmp/ccCIXKNu.s:113    .text:000000000000009c .LVL2
     /tmp/ccCIXKNu.s:119    .text:00000000000000ac .LVL3
     /tmp/ccCIXKNu.s:130    .text:00000000000000c8 .LVL4
     /tmp/ccCIXKNu.s:134    .text:00000000000000d4 .LVL5
     /tmp/ccCIXKNu.s:140    .text:00000000000000e4 .LVL6
     /tmp/ccCIXKNu.s:143    .text:00000000000000f0 .LVL7
     /tmp/ccCIXKNu.s:10     .text:0000000000000000 .LFB35
     /tmp/ccCIXKNu.s:40     .text:0000000000000020 .LFE35
     /tmp/ccCIXKNu.s:5618   .debug_str:0000000000000af1 .LASF186
     /tmp/ccCIXKNu.s:5366   .debug_str:0000000000000373 .LASF187
     /tmp/ccCIXKNu.s:5436   .debug_str:000000000000054e .LASF188
     /tmp/ccCIXKNu.s:5474   .debug_str:0000000000000662 .LASF189
     /tmp/ccCIXKNu.s:5390   .debug_str:000000000000040a .LASF190
     /tmp/ccCIXKNu.s:5480   .debug_str:000000000000068a .LASF191
     /tmp/ccCIXKNu.s:5262   .debug_str:0000000000000024 .LASF192
     /tmp/ccCIXKNu.s:5476   .debug_str:0000000000000670 .LASF193
     /tmp/ccCIXKNu.s:5620   .debug_str:0000000000000af6 .LASF194
     /tmp/ccCIXKNu.s:5396   .debug_str:0000000000000431 .LASF195
     /tmp/ccCIXKNu.s:5356   .debug_str:0000000000000338 .LASF196
     /tmp/ccCIXKNu.s:5624   .debug_str:0000000000000b06 .LASF197
     /tmp/ccCIXKNu.s:5656   .debug_str:0000000000000bae .LASF198
     /tmp/ccCIXKNu.s:5288   .debug_str:00000000000000dd .LASF199
     /tmp/ccCIXKNu.s:246    .text:0000000000000124 .LVL9
     /tmp/ccCIXKNu.s:922    .text:000000000000035c .LVL48
     /tmp/ccCIXKNu.s:944    .text:0000000000000364 .LVL50
     /tmp/ccCIXKNu.s:973    .text:0000000000000388 .LVL52
     /tmp/ccCIXKNu.s:261    .text:0000000000000128 .LVL10
GAS LISTING /tmp/ccCIXKNu.s 			page 49


     /tmp/ccCIXKNu.s:963    .text:0000000000000374 .LVL51
     /tmp/ccCIXKNu.s:233    .text:0000000000000120 .LVL8
     /tmp/ccCIXKNu.s:293    .text:0000000000000150 .LVL12
     /tmp/ccCIXKNu.s:624    .text:00000000000001c8 .LVL14
     /tmp/ccCIXKNu.s:695    .text:0000000000000264 .LVL26
     /tmp/ccCIXKNu.s:790    .text:00000000000002b8 .LVL34
     /tmp/ccCIXKNu.s:801    .text:00000000000002c4 .LVL36
     /tmp/ccCIXKNu.s:806    .text:00000000000002cc .LVL37
     /tmp/ccCIXKNu.s:839    .text:00000000000002e4 .LVL40
     /tmp/ccCIXKNu.s:852    .text:00000000000002f8 .LVL41
     /tmp/ccCIXKNu.s:823    .text:00000000000002dc .LVL39
     /tmp/ccCIXKNu.s:288    .text:000000000000014c .LVL11
     /tmp/ccCIXKNu.s:618    .text:00000000000001c0 .LVL13
     /tmp/ccCIXKNu.s:884    .text:000000000000033c .LVL43
     /tmp/ccCIXKNu.s:1008   .text:00000000000003ac .LVL56
     /tmp/ccCIXKNu.s:1034   .text:00000000000003c0 .LVL59
     /tmp/ccCIXKNu.s:1053   .text:00000000000003d8 .LVL62
     /tmp/ccCIXKNu.s:1121   .text:0000000000000428 .LVL74
     /tmp/ccCIXKNu.s:1139   .text:0000000000000438 .LVL76
     /tmp/ccCIXKNu.s:1147   .text:0000000000000444 .LVL78
     /tmp/ccCIXKNu.s:1197   .text:0000000000000474 .LVL85
     /tmp/ccCIXKNu.s:1224   .text:0000000000000488 .LVL88
     /tmp/ccCIXKNu.s:1250   .text:000000000000049c .LVL91
     /tmp/ccCIXKNu.s:1276   .text:00000000000004b0 .LVL94
     /tmp/ccCIXKNu.s:1302   .text:00000000000004c4 .LVL97
     /tmp/ccCIXKNu.s:1320   .text:00000000000004dc .LVL99
     /tmp/ccCIXKNu.s:899    .text:0000000000000340 .LVL44
     /tmp/ccCIXKNu.s:914    .text:0000000000000358 .LVL47
     /tmp/ccCIXKNu.s:989    .text:000000000000038c .LVL53
     /tmp/ccCIXKNu.s:1022   .text:00000000000003b8 .LVL58
     /tmp/ccCIXKNu.s:1066   .text:00000000000003dc .LVL63
     /tmp/ccCIXKNu.s:1072   .text:00000000000003e0 .LVL64
     /tmp/ccCIXKNu.s:1078   .text:00000000000003e4 .LVL65
     /tmp/ccCIXKNu.s:1088   .text:00000000000003fc .LVL68
     /tmp/ccCIXKNu.s:1093   .text:0000000000000404 .LVL69
     /tmp/ccCIXKNu.s:1099   .text:0000000000000410 .LVL71
     /tmp/ccCIXKNu.s:1105   .text:0000000000000418 .LVL72
     /tmp/ccCIXKNu.s:1115   .text:0000000000000420 .LVL73
     /tmp/ccCIXKNu.s:1159   .text:0000000000000448 .LVL79
     /tmp/ccCIXKNu.s:1165   .text:000000000000044c .LVL80
     /tmp/ccCIXKNu.s:1175   .text:000000000000045c .LVL82
     /tmp/ccCIXKNu.s:1181   .text:0000000000000464 .LVL83
     /tmp/ccCIXKNu.s:1191   .text:000000000000046c .LVL84
     /tmp/ccCIXKNu.s:1209   .text:0000000000000478 .LVL86
     /tmp/ccCIXKNu.s:1235   .text:000000000000048c .LVL89
     /tmp/ccCIXKNu.s:1261   .text:00000000000004a0 .LVL92
     /tmp/ccCIXKNu.s:1287   .text:00000000000004b4 .LVL95
     /tmp/ccCIXKNu.s:1331   .text:00000000000004e0 .LVL100
     /tmp/ccCIXKNu.s:642    .text:00000000000001d4 .LVL15
     /tmp/ccCIXKNu.s:931    .text:0000000000000360 .LVL49
     /tmp/ccCIXKNu.s:728    .text:000000000000028c .LVL28
     /tmp/ccCIXKNu.s:735    .text:0000000000000290 .LVL29
     /tmp/ccCIXKNu.s:744    .text:0000000000000298 .LVL30
     /tmp/ccCIXKNu.s:757    .text:00000000000002a4 .LVL31
     /tmp/ccCIXKNu.s:774    .text:00000000000002b0 .LVL33
     /tmp/ccCIXKNu.s:1384   .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccCIXKNu.s:280    .text:0000000000000148 .LBB73
GAS LISTING /tmp/ccCIXKNu.s 			page 50


     /tmp/ccCIXKNu.s:296    .text:0000000000000154 .LBE73
     /tmp/ccCIXKNu.s:302    .text:0000000000000154 .LBB220
     /tmp/ccCIXKNu.s:309    .text:000000000000015c .LBE220
     /tmp/ccCIXKNu.s:315    .text:000000000000015c .LBB221
     /tmp/ccCIXKNu.s:324    .text:0000000000000164 .LBE221
     /tmp/ccCIXKNu.s:330    .text:0000000000000164 .LBB222
     /tmp/ccCIXKNu.s:341    .text:000000000000016c .LBE222
     /tmp/ccCIXKNu.s:347    .text:000000000000016c .LBB223
     /tmp/ccCIXKNu.s:360    .text:0000000000000174 .LBE223
     /tmp/ccCIXKNu.s:366    .text:0000000000000174 .LBB224
     /tmp/ccCIXKNu.s:381    .text:000000000000017c .LBE224
     /tmp/ccCIXKNu.s:387    .text:000000000000017c .LBB225
     /tmp/ccCIXKNu.s:404    .text:0000000000000184 .LBE225
     /tmp/ccCIXKNu.s:410    .text:0000000000000184 .LBB226
     /tmp/ccCIXKNu.s:429    .text:000000000000018c .LBE226
     /tmp/ccCIXKNu.s:435    .text:000000000000018c .LBB227
     /tmp/ccCIXKNu.s:456    .text:0000000000000194 .LBE227
     /tmp/ccCIXKNu.s:462    .text:0000000000000194 .LBB228
     /tmp/ccCIXKNu.s:485    .text:000000000000019c .LBE228
     /tmp/ccCIXKNu.s:491    .text:000000000000019c .LBB229
     /tmp/ccCIXKNu.s:516    .text:00000000000001a4 .LBE229
     /tmp/ccCIXKNu.s:522    .text:00000000000001a4 .LBB230
     /tmp/ccCIXKNu.s:549    .text:00000000000001ac .LBE230
     /tmp/ccCIXKNu.s:555    .text:00000000000001ac .LBB231
     /tmp/ccCIXKNu.s:584    .text:00000000000001b4 .LBE231
     /tmp/ccCIXKNu.s:590    .text:00000000000001b4 .LBB232
     /tmp/ccCIXKNu.s:712    .text:0000000000000264 .LBE232
     /tmp/ccCIXKNu.s:889    .text:000000000000033c .LBB242
     /tmp/ccCIXKNu.s:949    .text:0000000000000364 .LBE242
     /tmp/ccCIXKNu.s:978    .text:0000000000000388 .LBB243
     /tmp/ccCIXKNu.s:1355   .text:00000000000004f8 .LBE243
     /tmp/ccCIXKNu.s:1150   .text:0000000000000444 .LBB119
     /tmp/ccCIXKNu.s:1189   .text:0000000000000468 .LBE119
     /tmp/ccCIXKNu.s:1193   .text:000000000000046c .LBB120
     /tmp/ccCIXKNu.s:1199   .text:0000000000000474 .LBE120
     /tmp/ccCIXKNu.s:1056   .text:00000000000003d8 .LBB146
     /tmp/ccCIXKNu.s:1113   .text:000000000000041c .LBE146
     /tmp/ccCIXKNu.s:1117   .text:0000000000000420 .LBB147
     /tmp/ccCIXKNu.s:1123   .text:0000000000000428 .LBE147
     /tmp/ccCIXKNu.s:149    .gcc_except_table:0000000000000000 .LLSDA36

UNDEFINED SYMBOLS
_Znwm
_ZN5BBuffC1Ei
_ZdlPv
_Unwind_Resume
__gxx_personality_v0
_Z12pprintStringPKc
_Z12printIntegerm
_Z4getcv
_ZN3TCB11timeCounterE
_ZN5SList7oneTickEv
_ZN3TCB7runningE
_ZN3TCB8dispatchEv
plic_claim
plic_complete
CONSOLE_STATUS
GAS LISTING /tmp/ccCIXKNu.s 			page 51


CONSOLE_RX_DATA
_ZN5BBuff3putEc
_ZN15MemoryAllocator8InstanceEv
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
_ZN15MemoryAllocator19getLargestFreeBlockEv
_ZN3TCB12createThreadEPFvPvES0_Pm
_ZN3TCB4exitEv
_ZN3SEM4openEj
_ZN3SEM5closeEv
_ZN3SEM4waitEv
_ZN3SEM6signalEv
_ZN3TCB5sleepEm
_ZN5BBuff3getEv
